//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Sun Jul 26 12:56:54 2015
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Tue Aug 11 21:17:06 2020
//----------------------------------------------------------------------------//

--------------------------------------------------------------------------------
Function: main
--------------------------------------------------------------------------------
Function unit type:           Number Required               
altfp_multiply_32             1                             
mem_dual_port                 2                             

Running Bipartite Weighted Matching on function: main
State: LEGUP_F_main_BB_multiplyloop_bodydim0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %0 = load volatile float* %s... (idx: 0)        10                            10                            
  %1 = load volatile float* %s... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %0 = load volatile float* %s... (idx: 0)        1                             0                             
  %1 = load volatile float* %s... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %0 = load volatile float* %s... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %1 = load volatile float* %s... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_main_BB_multiplyloop_bodydim0
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %2 = fmul float %0, %1 (idx: 0)                 20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %2 = fmul float %0, %1 (idx: 0)                 1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %2 = fmul float %0, %1 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 2)
State: LEGUP_F_main_BB_multiplyloop_bodydim0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile float %2, flo... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %2, flo... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %2, flo... (idx: 0)        16                            16                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %2, flo... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile float %2, flo... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_main_BB_multiplyloop_exitdim0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %leflow_retval = load volati... can share an output register with another operation already assigned to main_mem_dual_port_0
  %leflow_retval = load volati... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %leflow_retval = load volati... (idx: 0)        -2                            -4                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %leflow_retval = load volati... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %leflow_retval = load volati... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 1)

