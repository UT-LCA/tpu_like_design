//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Sun Jul 26 12:56:54 2015
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Tue Aug 11 21:17:16 2020
//----------------------------------------------------------------------------//

--------------------------------------------------------------------------------
Function: main
--------------------------------------------------------------------------------
Function unit type:           Number Required               
altfp_add_32                  1                             
altfp_multiply_32             1                             
mem_dual_port                 2                             

Running Bipartite Weighted Matching on function: main
State: LEGUP_F_main_BB_dotloop_exitreduction
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %.pre = load volatile float*... (idx: 0)        10                            10                            
  %.pre10 = load volatile floa... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %.pre = load volatile float*... (idx: 0)        1                             0                             
  %.pre10 = load volatile floa... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre = load volatile float*... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %.pre10 = load volatile floa... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_dotloop_exitreduction
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %0 = fmul float %.pre10, %.p... (idx: 0)        20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %0 = fmul float %.pre10, %.p... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %0 = fmul float %.pre10, %.p... (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 2)
State: LEGUP_F_main_BB_dotloop_exitreduction
Binding functional unit type: altfp_add_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_add_32_0           
  %1 = fadd float %0, 0.000000... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_add_32_0           
  %1 = fadd float %0, 0.000000... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %1 = fadd float %0, 0.000000... (idx: 0) -> main_altfp_add_32_0 (mux inputs: 1)
State: LEGUP_F_main_BB_dotloop_exitreduction
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store float %1, float* %scev... can share an output register with another operation already assigned to main_mem_dual_port_0
  store float %1, float* %scev... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store float %1, float* %scev... (idx: 0)        16                            15                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store float %1, float* %scev... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store float %1, float* %scev... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_main_BB_fusionloop_bodydim0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %3 = load volatile float* %s... can share an output register with another operation already assigned to main_mem_dual_port_0
  %3 = load volatile float* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
  %4 = load float* %scevgep3, ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %4 = load float* %scevgep3, ... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %3 = load volatile float* %s... (idx: 0)        6                             7                             
  %4 = load float* %scevgep3, ... (idx: 1)        6                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %3 = load volatile float* %s... (idx: 0)        1                             0                             
  %4 = load float* %scevgep3, ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %3 = load volatile float* %s... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 2)
  %4 = load float* %scevgep3, ... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 3)
State: LEGUP_F_main_BB_fusionloop_bodydim0
Binding functional unit type: altfp_add_32
Weight matrix for operation/function unit matching:
  %5 = fadd float %3, %4 can share an output register with another operation already assigned to main_altfp_add_32_0
                                                  main_altfp_add_32_0           
  %5 = fadd float %3, %4 (idx: 0)                 16                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_add_32_0           
  %5 = fadd float %3, %4 (idx: 0)                 1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %5 = fadd float %3, %4 (idx: 0) -> main_altfp_add_32_0 (mux inputs: 3)
State: LEGUP_F_main_BB_fusionloop_bodydim0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile float %5, flo... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %5, flo... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %5, flo... (idx: 0)        17                            18                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %5, flo... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile float %5, flo... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_main_BB_fusionloop_exitdim0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %leflow_retval = load volati... can share an output register with another operation already assigned to main_mem_dual_port_0
  %leflow_retval = load volati... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %leflow_retval = load volati... (idx: 0)        -1                            -2                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %leflow_retval = load volati... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %leflow_retval = load volati... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 3)

