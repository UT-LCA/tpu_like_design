//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Sun Jul 26 12:56:54 2015
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Tue Aug 11 21:17:11 2020
//----------------------------------------------------------------------------//

--------------------------------------------------------------------------------
Function: main
--------------------------------------------------------------------------------
Function unit type:           Number Required               
altfp_multiply_32             1                             
mem_dual_port                 2                             

Running Bipartite Weighted Matching on function: main
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %0 = load volatile float* ge... (idx: 0)        0                             0                             
  %1 = load volatile float* ge... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %0 = load volatile float* ge... (idx: 0)        1                             0                             
  %1 = load volatile float* ge... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %0 = load volatile float* ge... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %1 = load volatile float* ge... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %3 = load volatile float* ge... (idx: 0)        0                             0                             
  %4 = load volatile float* ge... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %3 = load volatile float* ge... (idx: 0)        1                             0                             
  %4 = load volatile float* ge... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %3 = load volatile float* ge... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %4 = load volatile float* ge... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %2 = fmul float %0, %1 (idx: 0)                 20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %2 = fmul float %0, %1 (idx: 0)                 1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %2 = fmul float %0, %1 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 2)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %6 = load volatile float* ge... (idx: 0)        0                             0                             
  %7 = load volatile float* ge... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %6 = load volatile float* ge... (idx: 0)        1                             0                             
  %7 = load volatile float* ge... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %6 = load volatile float* ge... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %7 = load volatile float* ge... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %5 = fmul float %3, %4 (idx: 0)                 22                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %5 = fmul float %3, %4 (idx: 0)                 1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %5 = fmul float %3, %4 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 4)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %9 = load volatile float* ge... (idx: 0)        0                             0                             
  %10 = load volatile float* g... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %9 = load volatile float* ge... (idx: 0)        1                             0                             
  %10 = load volatile float* g... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %9 = load volatile float* ge... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %10 = load volatile float* g... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %8 = fmul float %6, %7 (idx: 0)                 24                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %8 = fmul float %6, %7 (idx: 0)                 1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %8 = fmul float %6, %7 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 6)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %12 = load volatile float* g... (idx: 0)        0                             0                             
  %13 = load volatile float* g... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %12 = load volatile float* g... (idx: 0)        1                             0                             
  %13 = load volatile float* g... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %12 = load volatile float* g... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %13 = load volatile float* g... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %11 = fmul float %9, %10 (idx: 0)               26                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %11 = fmul float %9, %10 (idx: 0)               1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %11 = fmul float %9, %10 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 8)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %15 = load volatile float* g... (idx: 0)        0                             0                             
  %16 = load volatile float* g... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %15 = load volatile float* g... (idx: 0)        1                             0                             
  %16 = load volatile float* g... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %15 = load volatile float* g... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %16 = load volatile float* g... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %14 = fmul float %12, %13 (idx: 0)              28                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %14 = fmul float %12, %13 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %14 = fmul float %12, %13 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 10)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %18 = load volatile float* g... (idx: 0)        0                             0                             
  %19 = load volatile float* g... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %18 = load volatile float* g... (idx: 0)        1                             0                             
  %19 = load volatile float* g... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %18 = load volatile float* g... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %19 = load volatile float* g... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %17 = fmul float %15, %16 (idx: 0)              30                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %17 = fmul float %15, %16 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %17 = fmul float %15, %16 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 12)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %21 = load volatile float* g... (idx: 0)        0                             0                             
  %22 = load volatile float* g... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %21 = load volatile float* g... (idx: 0)        1                             0                             
  %22 = load volatile float* g... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %21 = load volatile float* g... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %22 = load volatile float* g... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %20 = fmul float %18, %19 (idx: 0)              32                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %20 = fmul float %18, %19 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %20 = fmul float %18, %19 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 14)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %24 = load volatile float* g... (idx: 0)        0                             0                             
  %25 = load volatile float* g... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %24 = load volatile float* g... (idx: 0)        1                             0                             
  %25 = load volatile float* g... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %24 = load volatile float* g... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %25 = load volatile float* g... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %23 = fmul float %21, %22 (idx: 0)              34                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %23 = fmul float %21, %22 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %23 = fmul float %21, %22 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 16)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %27 = load volatile float* g... (idx: 0)        0                             0                             
  %28 = load volatile float* g... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %27 = load volatile float* g... (idx: 0)        1                             0                             
  %28 = load volatile float* g... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %27 = load volatile float* g... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %28 = load volatile float* g... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %26 = fmul float %24, %25 (idx: 0)              36                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %26 = fmul float %24, %25 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %26 = fmul float %24, %25 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 18)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %30 = load volatile float* g... (idx: 0)        0                             0                             
  %31 = load volatile float* g... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %30 = load volatile float* g... (idx: 0)        1                             0                             
  %31 = load volatile float* g... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %30 = load volatile float* g... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %31 = load volatile float* g... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %29 = fmul float %27, %28 (idx: 0)              38                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %29 = fmul float %27, %28 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %29 = fmul float %27, %28 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 20)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %33 = load volatile float* g... (idx: 0)        0                             0                             
  %34 = load volatile float* g... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %33 = load volatile float* g... (idx: 0)        1                             0                             
  %34 = load volatile float* g... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %33 = load volatile float* g... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %34 = load volatile float* g... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %32 = fmul float %30, %31 (idx: 0)              40                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %32 = fmul float %30, %31 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %32 = fmul float %30, %31 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 22)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %36 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_0
  %36 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_1
  %37 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_0
  %37 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %36 = load volatile float* g... (idx: 0)        -5                            -5                            
  %37 = load volatile float* g... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %36 = load volatile float* g... (idx: 0)        1                             0                             
  %37 = load volatile float* g... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %36 = load volatile float* g... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %37 = load volatile float* g... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %35 = fmul float %33, %34 (idx: 0)              42                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %35 = fmul float %33, %34 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %35 = fmul float %33, %34 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 24)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %39 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_0
  %39 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_1
  %40 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_0
  %40 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %39 = load volatile float* g... (idx: 0)        -5                            -5                            
  %40 = load volatile float* g... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %39 = load volatile float* g... (idx: 0)        1                             0                             
  %40 = load volatile float* g... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %39 = load volatile float* g... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %40 = load volatile float* g... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %38 = fmul float %36, %37 (idx: 0)              44                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %38 = fmul float %36, %37 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %38 = fmul float %36, %37 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 26)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %42 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_0
  %42 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_1
  %43 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_0
  %43 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %42 = load volatile float* g... (idx: 0)        -5                            -5                            
  %43 = load volatile float* g... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %42 = load volatile float* g... (idx: 0)        1                             0                             
  %43 = load volatile float* g... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %42 = load volatile float* g... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %43 = load volatile float* g... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %41 = fmul float %39, %40 (idx: 0)              46                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %41 = fmul float %39, %40 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %41 = fmul float %39, %40 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 28)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %45 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_0
  %45 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_1
  %46 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_0
  %46 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %45 = load volatile float* g... (idx: 0)        -5                            -5                            
  %46 = load volatile float* g... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %45 = load volatile float* g... (idx: 0)        1                             0                             
  %46 = load volatile float* g... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %45 = load volatile float* g... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %46 = load volatile float* g... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %44 = fmul float %42, %43 (idx: 0)              48                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %44 = fmul float %42, %43 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %44 = fmul float %42, %43 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 30)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %48 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_0
  %48 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_1
  %49 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_0
  %49 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %48 = load volatile float* g... (idx: 0)        -5                            -5                            
  %49 = load volatile float* g... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %48 = load volatile float* g... (idx: 0)        1                             0                             
  %49 = load volatile float* g... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %48 = load volatile float* g... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %49 = load volatile float* g... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %47 = fmul float %45, %46 (idx: 0)              50                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %47 = fmul float %45, %46 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %47 = fmul float %45, %46 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 32)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %51 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_0
  %51 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_1
  %52 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_0
  %52 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %51 = load volatile float* g... (idx: 0)        -5                            -5                            
  %52 = load volatile float* g... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %51 = load volatile float* g... (idx: 0)        1                             0                             
  %52 = load volatile float* g... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %51 = load volatile float* g... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %52 = load volatile float* g... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %50 = fmul float %48, %49 (idx: 0)              52                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %50 = fmul float %48, %49 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %50 = fmul float %48, %49 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 34)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %54 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_0
  %54 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_1
  %55 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_0
  %55 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %54 = load volatile float* g... (idx: 0)        -5                            -5                            
  %55 = load volatile float* g... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %54 = load volatile float* g... (idx: 0)        1                             0                             
  %55 = load volatile float* g... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %54 = load volatile float* g... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %55 = load volatile float* g... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %53 = fmul float %51, %52 (idx: 0)              54                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %53 = fmul float %51, %52 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %53 = fmul float %51, %52 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 36)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %57 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_0
  %57 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_1
  %58 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_0
  %58 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %57 = load volatile float* g... (idx: 0)        -5                            -5                            
  %58 = load volatile float* g... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %57 = load volatile float* g... (idx: 0)        1                             0                             
  %58 = load volatile float* g... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %57 = load volatile float* g... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %58 = load volatile float* g... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %56 = fmul float %54, %55 (idx: 0)              56                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %56 = fmul float %54, %55 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %56 = fmul float %54, %55 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 38)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %60 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_0
  %60 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_1
  %61 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_0
  %61 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %60 = load volatile float* g... (idx: 0)        -5                            -5                            
  %61 = load volatile float* g... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %60 = load volatile float* g... (idx: 0)        1                             0                             
  %61 = load volatile float* g... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %60 = load volatile float* g... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %61 = load volatile float* g... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %59 = fmul float %57, %58 (idx: 0)              58                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %59 = fmul float %57, %58 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %59 = fmul float %57, %58 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 40)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %63 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_0
  %63 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_1
  %64 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_0
  %64 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %63 = load volatile float* g... (idx: 0)        -5                            -5                            
  %64 = load volatile float* g... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %63 = load volatile float* g... (idx: 0)        1                             0                             
  %64 = load volatile float* g... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %63 = load volatile float* g... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %64 = load volatile float* g... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %62 = fmul float %60, %61 (idx: 0)              60                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %62 = fmul float %60, %61 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %62 = fmul float %60, %61 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 42)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %66 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_0
  %66 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_1
  %67 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_0
  %67 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %66 = load volatile float* g... (idx: 0)        -5                            -5                            
  %67 = load volatile float* g... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %66 = load volatile float* g... (idx: 0)        1                             0                             
  %67 = load volatile float* g... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %66 = load volatile float* g... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %67 = load volatile float* g... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %65 = fmul float %63, %64 (idx: 0)              62                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %65 = fmul float %63, %64 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %65 = fmul float %63, %64 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 44)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %69 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_0
  %69 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_1
  %70 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_0
  %70 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %69 = load volatile float* g... (idx: 0)        -5                            -5                            
  %70 = load volatile float* g... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %69 = load volatile float* g... (idx: 0)        1                             0                             
  %70 = load volatile float* g... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %69 = load volatile float* g... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %70 = load volatile float* g... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %68 = fmul float %66, %67 (idx: 0)              64                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %68 = fmul float %66, %67 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %68 = fmul float %66, %67 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 46)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %72 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_0
  %72 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_1
  %73 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_0
  %73 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %72 = load volatile float* g... (idx: 0)        -5                            -5                            
  %73 = load volatile float* g... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %72 = load volatile float* g... (idx: 0)        1                             0                             
  %73 = load volatile float* g... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %72 = load volatile float* g... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %73 = load volatile float* g... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %71 = fmul float %69, %70 (idx: 0)              66                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %71 = fmul float %69, %70 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %71 = fmul float %69, %70 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 48)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %75 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_0
  %75 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_1
  %76 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_0
  %76 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %75 = load volatile float* g... (idx: 0)        -5                            -5                            
  %76 = load volatile float* g... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %75 = load volatile float* g... (idx: 0)        1                             0                             
  %76 = load volatile float* g... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %75 = load volatile float* g... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %76 = load volatile float* g... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %74 = fmul float %72, %73 (idx: 0)              68                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %74 = fmul float %72, %73 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %74 = fmul float %72, %73 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 50)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %78 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_0
  %78 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_1
  %79 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_0
  %79 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %78 = load volatile float* g... (idx: 0)        -5                            -5                            
  %79 = load volatile float* g... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %78 = load volatile float* g... (idx: 0)        1                             0                             
  %79 = load volatile float* g... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %78 = load volatile float* g... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %79 = load volatile float* g... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %77 = fmul float %75, %76 (idx: 0)              70                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %77 = fmul float %75, %76 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %77 = fmul float %75, %76 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 52)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %81 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_0
  %81 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_1
  %82 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_0
  %82 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %81 = load volatile float* g... (idx: 0)        -5                            -5                            
  %82 = load volatile float* g... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %81 = load volatile float* g... (idx: 0)        1                             0                             
  %82 = load volatile float* g... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %81 = load volatile float* g... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %82 = load volatile float* g... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %80 = fmul float %78, %79 (idx: 0)              72                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %80 = fmul float %78, %79 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %80 = fmul float %78, %79 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 54)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %84 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_0
  %84 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_1
  %85 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_0
  %85 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %84 = load volatile float* g... (idx: 0)        -5                            -5                            
  %85 = load volatile float* g... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %84 = load volatile float* g... (idx: 0)        1                             0                             
  %85 = load volatile float* g... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %84 = load volatile float* g... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %85 = load volatile float* g... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %83 = fmul float %81, %82 (idx: 0)              74                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %83 = fmul float %81, %82 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %83 = fmul float %81, %82 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 56)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %87 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_0
  %87 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_1
  %88 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_0
  %88 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %87 = load volatile float* g... (idx: 0)        -5                            -5                            
  %88 = load volatile float* g... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %87 = load volatile float* g... (idx: 0)        1                             0                             
  %88 = load volatile float* g... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %87 = load volatile float* g... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %88 = load volatile float* g... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %86 = fmul float %84, %85 (idx: 0)              76                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %86 = fmul float %84, %85 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %86 = fmul float %84, %85 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 58)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %90 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_0
  %90 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_1
  %91 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_0
  %91 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %90 = load volatile float* g... (idx: 0)        -5                            -5                            
  %91 = load volatile float* g... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %90 = load volatile float* g... (idx: 0)        1                             0                             
  %91 = load volatile float* g... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %90 = load volatile float* g... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %91 = load volatile float* g... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %89 = fmul float %87, %88 (idx: 0)              78                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %89 = fmul float %87, %88 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %89 = fmul float %87, %88 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 60)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %93 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_0
  %93 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_1
  %94 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_0
  %94 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %93 = load volatile float* g... (idx: 0)        -5                            -5                            
  %94 = load volatile float* g... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %93 = load volatile float* g... (idx: 0)        1                             0                             
  %94 = load volatile float* g... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %93 = load volatile float* g... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %94 = load volatile float* g... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %92 = fmul float %90, %91 (idx: 0)              80                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %92 = fmul float %90, %91 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %92 = fmul float %90, %91 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 62)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %96 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_0
  %96 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_1
  %97 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_0
  %97 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %96 = load volatile float* g... (idx: 0)        -5                            -5                            
  %97 = load volatile float* g... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %96 = load volatile float* g... (idx: 0)        1                             0                             
  %97 = load volatile float* g... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %96 = load volatile float* g... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %97 = load volatile float* g... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %95 = fmul float %93, %94 (idx: 0)              82                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %95 = fmul float %93, %94 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %95 = fmul float %93, %94 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 64)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %99 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_0
  %99 = load volatile float* g... can share an output register with another operation already assigned to main_mem_dual_port_1
  %100 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %100 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %99 = load volatile float* g... (idx: 0)        -5                            -5                            
  %100 = load volatile float* ... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %99 = load volatile float* g... (idx: 0)        1                             0                             
  %100 = load volatile float* ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %99 = load volatile float* g... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %100 = load volatile float* ... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %98 = fmul float %96, %97 (idx: 0)              84                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %98 = fmul float %96, %97 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %98 = fmul float %96, %97 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 66)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %102 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %102 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
  %103 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %103 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %102 = load volatile float* ... (idx: 0)        -5                            -5                            
  %103 = load volatile float* ... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %102 = load volatile float* ... (idx: 0)        1                             0                             
  %103 = load volatile float* ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %102 = load volatile float* ... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %103 = load volatile float* ... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %101 = fmul float %99, %100 (idx: 0)            86                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %101 = fmul float %99, %100 (idx: 0)            1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %101 = fmul float %99, %100 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 68)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %105 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %105 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
  %106 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %106 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %105 = load volatile float* ... (idx: 0)        -5                            -5                            
  %106 = load volatile float* ... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %105 = load volatile float* ... (idx: 0)        1                             0                             
  %106 = load volatile float* ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %105 = load volatile float* ... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %106 = load volatile float* ... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %104 = fmul float %102, %103 (idx: 0)           88                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %104 = fmul float %102, %103 (idx: 0)           1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %104 = fmul float %102, %103 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 70)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %108 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %108 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
  %109 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %109 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %108 = load volatile float* ... (idx: 0)        -5                            -5                            
  %109 = load volatile float* ... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %108 = load volatile float* ... (idx: 0)        1                             0                             
  %109 = load volatile float* ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %108 = load volatile float* ... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %109 = load volatile float* ... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %107 = fmul float %105, %106 (idx: 0)           90                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %107 = fmul float %105, %106 (idx: 0)           1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %107 = fmul float %105, %106 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 72)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %111 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %111 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
  %112 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %112 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %111 = load volatile float* ... (idx: 0)        -5                            -5                            
  %112 = load volatile float* ... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %111 = load volatile float* ... (idx: 0)        1                             0                             
  %112 = load volatile float* ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %111 = load volatile float* ... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %112 = load volatile float* ... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %110 = fmul float %108, %109 (idx: 0)           92                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %110 = fmul float %108, %109 (idx: 0)           1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %110 = fmul float %108, %109 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 74)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %114 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %114 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
  %115 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %115 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %114 = load volatile float* ... (idx: 0)        -5                            -5                            
  %115 = load volatile float* ... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %114 = load volatile float* ... (idx: 0)        1                             0                             
  %115 = load volatile float* ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %114 = load volatile float* ... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %115 = load volatile float* ... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %113 = fmul float %111, %112 (idx: 0)           94                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %113 = fmul float %111, %112 (idx: 0)           1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %113 = fmul float %111, %112 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 76)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %117 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %117 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
  %118 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %118 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %117 = load volatile float* ... (idx: 0)        -5                            -5                            
  %118 = load volatile float* ... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %117 = load volatile float* ... (idx: 0)        1                             0                             
  %118 = load volatile float* ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %117 = load volatile float* ... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %118 = load volatile float* ... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %116 = fmul float %114, %115 (idx: 0)           96                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %116 = fmul float %114, %115 (idx: 0)           1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %116 = fmul float %114, %115 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 78)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %120 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %120 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
  %121 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %121 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %120 = load volatile float* ... (idx: 0)        -5                            -5                            
  %121 = load volatile float* ... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %120 = load volatile float* ... (idx: 0)        1                             0                             
  %121 = load volatile float* ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %120 = load volatile float* ... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %121 = load volatile float* ... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %119 = fmul float %117, %118 (idx: 0)           98                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %119 = fmul float %117, %118 (idx: 0)           1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %119 = fmul float %117, %118 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 80)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %123 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %123 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
  %124 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %124 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %123 = load volatile float* ... (idx: 0)        -5                            -5                            
  %124 = load volatile float* ... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %123 = load volatile float* ... (idx: 0)        1                             0                             
  %124 = load volatile float* ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %123 = load volatile float* ... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %124 = load volatile float* ... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %122 = fmul float %120, %121 (idx: 0)           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %122 = fmul float %120, %121 (idx: 0)           1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %122 = fmul float %120, %121 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 82)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %126 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %126 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
  %127 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %127 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %126 = load volatile float* ... (idx: 0)        -5                            -5                            
  %127 = load volatile float* ... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %126 = load volatile float* ... (idx: 0)        1                             0                             
  %127 = load volatile float* ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %126 = load volatile float* ... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %127 = load volatile float* ... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %125 = fmul float %123, %124 (idx: 0)           102                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %125 = fmul float %123, %124 (idx: 0)           1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %125 = fmul float %123, %124 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 84)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %129 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %129 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
  %130 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %130 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %129 = load volatile float* ... (idx: 0)        -5                            -5                            
  %130 = load volatile float* ... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %129 = load volatile float* ... (idx: 0)        1                             0                             
  %130 = load volatile float* ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %129 = load volatile float* ... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %130 = load volatile float* ... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %128 = fmul float %126, %127 (idx: 0)           104                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %128 = fmul float %126, %127 (idx: 0)           1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %128 = fmul float %126, %127 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 86)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %132 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %132 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
  %133 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %133 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %132 = load volatile float* ... (idx: 0)        -5                            -5                            
  %133 = load volatile float* ... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %132 = load volatile float* ... (idx: 0)        1                             0                             
  %133 = load volatile float* ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %132 = load volatile float* ... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %133 = load volatile float* ... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %131 = fmul float %129, %130 (idx: 0)           106                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %131 = fmul float %129, %130 (idx: 0)           1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %131 = fmul float %129, %130 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 88)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %135 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %135 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
  %136 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %136 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %135 = load volatile float* ... (idx: 0)        -5                            -5                            
  %136 = load volatile float* ... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %135 = load volatile float* ... (idx: 0)        1                             0                             
  %136 = load volatile float* ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %135 = load volatile float* ... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %136 = load volatile float* ... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %134 = fmul float %132, %133 (idx: 0)           108                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %134 = fmul float %132, %133 (idx: 0)           1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %134 = fmul float %132, %133 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 90)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %138 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %138 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
  %139 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %139 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %138 = load volatile float* ... (idx: 0)        -5                            -5                            
  %139 = load volatile float* ... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %138 = load volatile float* ... (idx: 0)        1                             0                             
  %139 = load volatile float* ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %138 = load volatile float* ... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %139 = load volatile float* ... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %137 = fmul float %135, %136 (idx: 0)           110                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %137 = fmul float %135, %136 (idx: 0)           1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %137 = fmul float %135, %136 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 92)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %141 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %141 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
  %142 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %142 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %141 = load volatile float* ... (idx: 0)        -5                            -5                            
  %142 = load volatile float* ... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %141 = load volatile float* ... (idx: 0)        1                             0                             
  %142 = load volatile float* ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %141 = load volatile float* ... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %142 = load volatile float* ... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %140 = fmul float %138, %139 (idx: 0)           112                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %140 = fmul float %138, %139 (idx: 0)           1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %140 = fmul float %138, %139 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 94)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %144 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %144 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
  %145 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %145 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %144 = load volatile float* ... (idx: 0)        -5                            -5                            
  %145 = load volatile float* ... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %144 = load volatile float* ... (idx: 0)        1                             0                             
  %145 = load volatile float* ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %144 = load volatile float* ... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %145 = load volatile float* ... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %143 = fmul float %141, %142 (idx: 0)           114                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %143 = fmul float %141, %142 (idx: 0)           1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %143 = fmul float %141, %142 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 96)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %147 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %147 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
  %148 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %148 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %147 = load volatile float* ... (idx: 0)        -5                            -5                            
  %148 = load volatile float* ... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %147 = load volatile float* ... (idx: 0)        1                             0                             
  %148 = load volatile float* ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %147 = load volatile float* ... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %148 = load volatile float* ... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %146 = fmul float %144, %145 (idx: 0)           116                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %146 = fmul float %144, %145 (idx: 0)           1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %146 = fmul float %144, %145 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 98)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %150 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %150 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
  %151 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %151 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %150 = load volatile float* ... (idx: 0)        -5                            -5                            
  %151 = load volatile float* ... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %150 = load volatile float* ... (idx: 0)        1                             0                             
  %151 = load volatile float* ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %150 = load volatile float* ... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %151 = load volatile float* ... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %149 = fmul float %147, %148 (idx: 0)           118                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %149 = fmul float %147, %148 (idx: 0)           1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %149 = fmul float %147, %148 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 100)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %153 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %153 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
  %154 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %154 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %153 = load volatile float* ... (idx: 0)        -5                            -5                            
  %154 = load volatile float* ... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %153 = load volatile float* ... (idx: 0)        1                             0                             
  %154 = load volatile float* ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %153 = load volatile float* ... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %154 = load volatile float* ... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %152 = fmul float %150, %151 (idx: 0)           120                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %152 = fmul float %150, %151 (idx: 0)           1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %152 = fmul float %150, %151 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 102)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %156 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %156 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
  %157 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %157 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %156 = load volatile float* ... (idx: 0)        -5                            -5                            
  %157 = load volatile float* ... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %156 = load volatile float* ... (idx: 0)        1                             0                             
  %157 = load volatile float* ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %156 = load volatile float* ... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %157 = load volatile float* ... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %155 = fmul float %153, %154 (idx: 0)           122                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %155 = fmul float %153, %154 (idx: 0)           1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %155 = fmul float %153, %154 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 104)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %159 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %159 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
  %160 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %160 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %159 = load volatile float* ... (idx: 0)        -5                            -5                            
  %160 = load volatile float* ... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %159 = load volatile float* ... (idx: 0)        1                             0                             
  %160 = load volatile float* ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %159 = load volatile float* ... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %160 = load volatile float* ... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %158 = fmul float %156, %157 (idx: 0)           124                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %158 = fmul float %156, %157 (idx: 0)           1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %158 = fmul float %156, %157 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 106)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %162 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %162 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
  %163 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %163 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %162 = load volatile float* ... (idx: 0)        -5                            -5                            
  %163 = load volatile float* ... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %162 = load volatile float* ... (idx: 0)        1                             0                             
  %163 = load volatile float* ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %162 = load volatile float* ... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %163 = load volatile float* ... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
  %161 = fmul float %159, %160 can share an output register with another operation already assigned to main_altfp_multiply_32_0
                                                  main_altfp_multiply_32_0      
  %161 = fmul float %159, %160 (idx: 0)           121                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %161 = fmul float %159, %160 (idx: 0)           1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %161 = fmul float %159, %160 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 108)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %165 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %165 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
  %166 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %166 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %165 = load volatile float* ... (idx: 0)        -5                            -5                            
  %166 = load volatile float* ... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %165 = load volatile float* ... (idx: 0)        1                             0                             
  %166 = load volatile float* ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %165 = load volatile float* ... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %166 = load volatile float* ... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
  %164 = fmul float %162, %163 can share an output register with another operation already assigned to main_altfp_multiply_32_0
                                                  main_altfp_multiply_32_0      
  %164 = fmul float %162, %163 (idx: 0)           123                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %164 = fmul float %162, %163 (idx: 0)           1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %164 = fmul float %162, %163 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 110)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %168 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %168 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
  %169 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %169 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %168 = load volatile float* ... (idx: 0)        -5                            -5                            
  %169 = load volatile float* ... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %168 = load volatile float* ... (idx: 0)        1                             0                             
  %169 = load volatile float* ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %168 = load volatile float* ... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %169 = load volatile float* ... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
  %167 = fmul float %165, %166 can share an output register with another operation already assigned to main_altfp_multiply_32_0
                                                  main_altfp_multiply_32_0      
  %167 = fmul float %165, %166 (idx: 0)           125                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %167 = fmul float %165, %166 (idx: 0)           1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %167 = fmul float %165, %166 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 112)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %171 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %171 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
  %172 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %172 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %171 = load volatile float* ... (idx: 0)        -5                            -5                            
  %172 = load volatile float* ... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %171 = load volatile float* ... (idx: 0)        1                             0                             
  %172 = load volatile float* ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %171 = load volatile float* ... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %172 = load volatile float* ... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
  %170 = fmul float %168, %169 can share an output register with another operation already assigned to main_altfp_multiply_32_0
                                                  main_altfp_multiply_32_0      
  %170 = fmul float %168, %169 (idx: 0)           127                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %170 = fmul float %168, %169 (idx: 0)           1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %170 = fmul float %168, %169 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 114)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %174 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %174 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
  %175 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %175 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %174 = load volatile float* ... (idx: 0)        -5                            -5                            
  %175 = load volatile float* ... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %174 = load volatile float* ... (idx: 0)        1                             0                             
  %175 = load volatile float* ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %174 = load volatile float* ... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %175 = load volatile float* ... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
  %173 = fmul float %171, %172 can share an output register with another operation already assigned to main_altfp_multiply_32_0
                                                  main_altfp_multiply_32_0      
  %173 = fmul float %171, %172 (idx: 0)           129                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %173 = fmul float %171, %172 (idx: 0)           1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %173 = fmul float %171, %172 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 116)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %177 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %177 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
  %178 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %178 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %177 = load volatile float* ... (idx: 0)        -5                            -5                            
  %178 = load volatile float* ... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %177 = load volatile float* ... (idx: 0)        1                             0                             
  %178 = load volatile float* ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %177 = load volatile float* ... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %178 = load volatile float* ... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
  %176 = fmul float %174, %175 can share an output register with another operation already assigned to main_altfp_multiply_32_0
                                                  main_altfp_multiply_32_0      
  %176 = fmul float %174, %175 (idx: 0)           131                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %176 = fmul float %174, %175 (idx: 0)           1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %176 = fmul float %174, %175 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 118)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %180 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %180 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
  %181 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %181 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %180 = load volatile float* ... (idx: 0)        -5                            -5                            
  %181 = load volatile float* ... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %180 = load volatile float* ... (idx: 0)        1                             0                             
  %181 = load volatile float* ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %180 = load volatile float* ... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %181 = load volatile float* ... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
  %179 = fmul float %177, %178 can share an output register with another operation already assigned to main_altfp_multiply_32_0
                                                  main_altfp_multiply_32_0      
  %179 = fmul float %177, %178 (idx: 0)           133                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %179 = fmul float %177, %178 (idx: 0)           1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %179 = fmul float %177, %178 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 120)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %183 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %183 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
  %184 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %184 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %183 = load volatile float* ... (idx: 0)        -5                            -5                            
  %184 = load volatile float* ... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %183 = load volatile float* ... (idx: 0)        1                             0                             
  %184 = load volatile float* ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %183 = load volatile float* ... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %184 = load volatile float* ... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
  %182 = fmul float %180, %181 can share an output register with another operation already assigned to main_altfp_multiply_32_0
                                                  main_altfp_multiply_32_0      
  %182 = fmul float %180, %181 (idx: 0)           135                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %182 = fmul float %180, %181 (idx: 0)           1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %182 = fmul float %180, %181 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 122)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %186 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %186 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
  %187 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %187 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %186 = load volatile float* ... (idx: 0)        -5                            -5                            
  %187 = load volatile float* ... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %186 = load volatile float* ... (idx: 0)        1                             0                             
  %187 = load volatile float* ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %186 = load volatile float* ... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %187 = load volatile float* ... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
  %185 = fmul float %183, %184 can share an output register with another operation already assigned to main_altfp_multiply_32_0
                                                  main_altfp_multiply_32_0      
  %185 = fmul float %183, %184 (idx: 0)           137                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %185 = fmul float %183, %184 (idx: 0)           1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %185 = fmul float %183, %184 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 124)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %189 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %189 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
  %190 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %190 = load volatile float* ... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %189 = load volatile float* ... (idx: 0)        -5                            -5                            
  %190 = load volatile float* ... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %189 = load volatile float* ... (idx: 0)        1                             0                             
  %190 = load volatile float* ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %189 = load volatile float* ... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %190 = load volatile float* ... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
  %188 = fmul float %186, %187 can share an output register with another operation already assigned to main_altfp_multiply_32_0
                                                  main_altfp_multiply_32_0      
  %188 = fmul float %186, %187 (idx: 0)           139                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %188 = fmul float %186, %187 (idx: 0)           1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %188 = fmul float %186, %187 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 126)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile float %2, flo... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %2, flo... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %2, flo... (idx: 0)        5                             5                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %2, flo... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile float %2, flo... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
  %191 = fmul float %189, %190 can share an output register with another operation already assigned to main_altfp_multiply_32_0
                                                  main_altfp_multiply_32_0      
  %191 = fmul float %189, %190 (idx: 0)           141                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %191 = fmul float %189, %190 (idx: 0)           1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %191 = fmul float %189, %190 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 128)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile float %5, flo... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %5, flo... can share an output register with another operation already assigned to main_mem_dual_port_1
  %leflow_retval = load volati... can share an output register with another operation already assigned to main_mem_dual_port_0
  %leflow_retval = load volati... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %5, flo... (idx: 0)        6                             5                             
  %leflow_retval = load volati... (idx: 1)        -4                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %5, flo... (idx: 0)        1                             0                             
  %leflow_retval = load volati... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile float %5, flo... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 2)
  %leflow_retval = load volati... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile float %8, flo... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %8, flo... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile float %11, fl... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %11, fl... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %8, flo... (idx: 0)        7                             5                             
  store volatile float %11, fl... (idx: 1)        7                             5                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %8, flo... (idx: 0)        1                             0                             
  store volatile float %11, fl... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile float %8, flo... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 3)
  store volatile float %11, fl... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile float %14, fl... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %14, fl... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile float %17, fl... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %17, fl... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %14, fl... (idx: 0)        8                             6                             
  store volatile float %17, fl... (idx: 1)        8                             6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %14, fl... (idx: 0)        1                             0                             
  store volatile float %17, fl... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile float %14, fl... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 4)
  store volatile float %17, fl... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile float %20, fl... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %20, fl... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile float %23, fl... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %23, fl... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %20, fl... (idx: 0)        9                             7                             
  store volatile float %23, fl... (idx: 1)        9                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %20, fl... (idx: 0)        1                             0                             
  store volatile float %23, fl... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile float %20, fl... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 5)
  store volatile float %23, fl... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 3)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile float %26, fl... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %26, fl... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile float %29, fl... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %29, fl... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %26, fl... (idx: 0)        10                            8                             
  store volatile float %29, fl... (idx: 1)        10                            8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %26, fl... (idx: 0)        1                             0                             
  store volatile float %29, fl... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile float %26, fl... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 6)
  store volatile float %29, fl... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile float %32, fl... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %32, fl... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile float %35, fl... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %35, fl... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %32, fl... (idx: 0)        11                            9                             
  store volatile float %35, fl... (idx: 1)        11                            9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %32, fl... (idx: 0)        1                             0                             
  store volatile float %35, fl... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile float %32, fl... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 7)
  store volatile float %35, fl... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 5)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile float %38, fl... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %38, fl... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile float %41, fl... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %41, fl... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %38, fl... (idx: 0)        12                            10                            
  store volatile float %41, fl... (idx: 1)        12                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %38, fl... (idx: 0)        1                             0                             
  store volatile float %41, fl... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile float %38, fl... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 8)
  store volatile float %41, fl... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 6)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile float %44, fl... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %44, fl... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile float %47, fl... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %47, fl... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %44, fl... (idx: 0)        13                            11                            
  store volatile float %47, fl... (idx: 1)        13                            11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %44, fl... (idx: 0)        1                             0                             
  store volatile float %47, fl... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile float %44, fl... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 9)
  store volatile float %47, fl... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 7)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile float %50, fl... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %50, fl... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile float %53, fl... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %53, fl... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %50, fl... (idx: 0)        14                            12                            
  store volatile float %53, fl... (idx: 1)        14                            12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %50, fl... (idx: 0)        1                             0                             
  store volatile float %53, fl... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile float %50, fl... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 10)
  store volatile float %53, fl... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 8)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile float %56, fl... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %56, fl... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile float %59, fl... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %59, fl... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %56, fl... (idx: 0)        15                            13                            
  store volatile float %59, fl... (idx: 1)        15                            13                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %56, fl... (idx: 0)        1                             0                             
  store volatile float %59, fl... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile float %56, fl... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 11)
  store volatile float %59, fl... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 9)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile float %62, fl... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %62, fl... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile float %65, fl... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %65, fl... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %62, fl... (idx: 0)        16                            14                            
  store volatile float %65, fl... (idx: 1)        16                            14                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %62, fl... (idx: 0)        1                             0                             
  store volatile float %65, fl... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile float %62, fl... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 12)
  store volatile float %65, fl... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 10)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile float %68, fl... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %68, fl... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile float %71, fl... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %71, fl... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %68, fl... (idx: 0)        17                            15                            
  store volatile float %71, fl... (idx: 1)        17                            15                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %68, fl... (idx: 0)        1                             0                             
  store volatile float %71, fl... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile float %68, fl... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 13)
  store volatile float %71, fl... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 11)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile float %74, fl... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %74, fl... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile float %77, fl... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %77, fl... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %74, fl... (idx: 0)        18                            16                            
  store volatile float %77, fl... (idx: 1)        18                            16                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %74, fl... (idx: 0)        1                             0                             
  store volatile float %77, fl... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile float %74, fl... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 14)
  store volatile float %77, fl... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile float %80, fl... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %80, fl... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile float %83, fl... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %83, fl... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %80, fl... (idx: 0)        19                            17                            
  store volatile float %83, fl... (idx: 1)        19                            17                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %80, fl... (idx: 0)        1                             0                             
  store volatile float %83, fl... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile float %80, fl... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 15)
  store volatile float %83, fl... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 13)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile float %86, fl... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %86, fl... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile float %89, fl... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %89, fl... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %86, fl... (idx: 0)        20                            18                            
  store volatile float %89, fl... (idx: 1)        20                            18                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %86, fl... (idx: 0)        1                             0                             
  store volatile float %89, fl... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile float %86, fl... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 16)
  store volatile float %89, fl... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 14)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile float %92, fl... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %92, fl... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile float %95, fl... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %95, fl... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %92, fl... (idx: 0)        21                            19                            
  store volatile float %95, fl... (idx: 1)        21                            19                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %92, fl... (idx: 0)        1                             0                             
  store volatile float %95, fl... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile float %92, fl... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 17)
  store volatile float %95, fl... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 15)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile float %98, fl... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %98, fl... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile float %101, f... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %101, f... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %98, fl... (idx: 0)        22                            20                            
  store volatile float %101, f... (idx: 1)        22                            20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %98, fl... (idx: 0)        1                             0                             
  store volatile float %101, f... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile float %98, fl... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 18)
  store volatile float %101, f... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 16)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile float %104, f... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %104, f... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile float %107, f... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %107, f... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %104, f... (idx: 0)        23                            21                            
  store volatile float %107, f... (idx: 1)        23                            21                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %104, f... (idx: 0)        1                             0                             
  store volatile float %107, f... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile float %104, f... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 19)
  store volatile float %107, f... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 17)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile float %110, f... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %110, f... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile float %113, f... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %113, f... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %110, f... (idx: 0)        24                            22                            
  store volatile float %113, f... (idx: 1)        24                            22                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %110, f... (idx: 0)        1                             0                             
  store volatile float %113, f... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile float %110, f... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 20)
  store volatile float %113, f... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 18)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile float %116, f... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %116, f... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile float %119, f... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %119, f... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %116, f... (idx: 0)        25                            23                            
  store volatile float %119, f... (idx: 1)        25                            23                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %116, f... (idx: 0)        1                             0                             
  store volatile float %119, f... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile float %116, f... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 21)
  store volatile float %119, f... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 19)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile float %122, f... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %122, f... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile float %125, f... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %125, f... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %122, f... (idx: 0)        26                            24                            
  store volatile float %125, f... (idx: 1)        26                            24                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %122, f... (idx: 0)        1                             0                             
  store volatile float %125, f... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile float %122, f... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 22)
  store volatile float %125, f... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 20)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile float %128, f... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %128, f... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile float %131, f... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %131, f... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %128, f... (idx: 0)        27                            25                            
  store volatile float %131, f... (idx: 1)        27                            25                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %128, f... (idx: 0)        1                             0                             
  store volatile float %131, f... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile float %128, f... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 23)
  store volatile float %131, f... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 21)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile float %134, f... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %134, f... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile float %137, f... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %137, f... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %134, f... (idx: 0)        28                            26                            
  store volatile float %137, f... (idx: 1)        28                            26                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %134, f... (idx: 0)        1                             0                             
  store volatile float %137, f... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile float %134, f... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 24)
  store volatile float %137, f... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 22)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile float %140, f... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %140, f... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile float %143, f... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %143, f... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %140, f... (idx: 0)        29                            27                            
  store volatile float %143, f... (idx: 1)        29                            27                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %140, f... (idx: 0)        1                             0                             
  store volatile float %143, f... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile float %140, f... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 25)
  store volatile float %143, f... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 23)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile float %146, f... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %146, f... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile float %149, f... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %149, f... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %146, f... (idx: 0)        30                            28                            
  store volatile float %149, f... (idx: 1)        30                            28                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %146, f... (idx: 0)        1                             0                             
  store volatile float %149, f... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile float %146, f... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 26)
  store volatile float %149, f... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 24)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile float %152, f... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %152, f... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile float %155, f... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %155, f... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %152, f... (idx: 0)        31                            29                            
  store volatile float %155, f... (idx: 1)        31                            29                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %152, f... (idx: 0)        1                             0                             
  store volatile float %155, f... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile float %152, f... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 27)
  store volatile float %155, f... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 25)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile float %158, f... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %158, f... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile float %161, f... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %161, f... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %158, f... (idx: 0)        32                            30                            
  store volatile float %161, f... (idx: 1)        32                            30                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %158, f... (idx: 0)        1                             0                             
  store volatile float %161, f... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile float %158, f... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 28)
  store volatile float %161, f... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 26)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile float %164, f... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %164, f... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile float %167, f... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %167, f... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %164, f... (idx: 0)        33                            31                            
  store volatile float %167, f... (idx: 1)        33                            31                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %164, f... (idx: 0)        1                             0                             
  store volatile float %167, f... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile float %164, f... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 29)
  store volatile float %167, f... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 27)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile float %170, f... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %170, f... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile float %173, f... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %173, f... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %170, f... (idx: 0)        34                            32                            
  store volatile float %173, f... (idx: 1)        34                            32                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %170, f... (idx: 0)        1                             0                             
  store volatile float %173, f... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile float %170, f... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 30)
  store volatile float %173, f... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 28)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile float %176, f... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %176, f... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile float %179, f... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %179, f... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %176, f... (idx: 0)        35                            33                            
  store volatile float %179, f... (idx: 1)        35                            33                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %176, f... (idx: 0)        1                             0                             
  store volatile float %179, f... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile float %176, f... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 31)
  store volatile float %179, f... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 29)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile float %182, f... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %182, f... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile float %185, f... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %185, f... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %182, f... (idx: 0)        36                            34                            
  store volatile float %185, f... (idx: 1)        36                            34                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %182, f... (idx: 0)        1                             0                             
  store volatile float %185, f... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile float %182, f... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 32)
  store volatile float %185, f... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 30)
State: LEGUP_F_main_BB_multiplyloop_bodydim0lrph
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile float %188, f... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %188, f... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile float %191, f... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %191, f... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %188, f... (idx: 0)        37                            35                            
  store volatile float %191, f... (idx: 1)        37                            35                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %188, f... (idx: 0)        1                             0                             
  store volatile float %191, f... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile float %188, f... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 33)
  store volatile float %191, f... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 31)

