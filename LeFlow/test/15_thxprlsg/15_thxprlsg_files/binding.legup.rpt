//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Sun Jul 26 12:56:54 2015
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Tue Aug 11 21:36:19 2020
//----------------------------------------------------------------------------//

--------------------------------------------------------------------------------
Function: expm1f
--------------------------------------------------------------------------------
Function unit type:           Number Required               
altfp_add_32                  1                             
altfp_divide_32               1                             
altfp_fptosi_32               1                             
altfp_multiply_32             1                             
altfp_sitofp_32               1                             
altfp_subtract_32             1                             
--------------------------------------------------------------------------------
Function: tanhf
--------------------------------------------------------------------------------
Function unit type:           Number Required               
altfp_add_32                  1                             
altfp_divide_32               1                             
altfp_multiply_32             1                             
altfp_subtract_32             1                             
--------------------------------------------------------------------------------
Function: main
--------------------------------------------------------------------------------
Function unit type:           Number Required               
altfp_add_32                  1                             
altfp_divide_32               1                             
altfp_fptosi_32               1                             
altfp_multiply_32             1                             
altfp_sitofp_32               1                             
altfp_subtract_32             1                             
mem_dual_port                 2                             

Running Bipartite Weighted Matching on function: expm1f
State: LEGUP_F_expm1f_BB__9
Binding functional unit type: altfp_add_32
Weight matrix for operation/function unit matching:
                                                  expm1f_altfp_add_32_0         
  %10 = fadd float %x, %x (idx: 0)                0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_add_32_0         
  %10 = fadd float %x, %x (idx: 0)                1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %10 = fadd float %x, %x (idx: 0) -> expm1f_altfp_add_32_0 (mux inputs: 0)
State: LEGUP_F_expm1f_BB_thread
Binding functional unit type: altfp_add_32
Weight matrix for operation/function unit matching:
                                                  expm1f_altfp_add_32_0         
  %17 = fadd float %x, 0x39B44... (idx: 0)        0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_add_32_0         
  %17 = fadd float %x, 0x39B44... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %17 = fadd float %x, 0x39B44... (idx: 0) -> expm1f_altfp_add_32_0 (mux inputs: 0)
State: LEGUP_F_expm1f_BB__23
Binding functional unit type: altfp_add_32
Weight matrix for operation/function unit matching:
  %24 = fadd float %x, 0xBFE62... can share an output register with another operation already assigned to expm1f_altfp_add_32_0
                                                  expm1f_altfp_add_32_0         
  %24 = fadd float %x, 0xBFE62... (idx: 0)        -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_add_32_0         
  %24 = fadd float %x, 0xBFE62... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %24 = fadd float %x, 0xBFE62... (idx: 0) -> expm1f_altfp_add_32_0 (mux inputs: 0)
State: LEGUP_F_expm1f_BB__25
Binding functional unit type: altfp_add_32
Weight matrix for operation/function unit matching:
  %26 = fadd float %x, 0x3FE62... can share an output register with another operation already assigned to expm1f_altfp_add_32_0
                                                  expm1f_altfp_add_32_0         
  %26 = fadd float %x, 0x3FE62... (idx: 0)        -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_add_32_0         
  %26 = fadd float %x, 0x3FE62... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %26 = fadd float %x, 0x3FE62... (idx: 0) -> expm1f_altfp_add_32_0 (mux inputs: 0)
State: LEGUP_F_expm1f_BB__27
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  expm1f_altfp_multiply_32_0    
  %28 = fmul float %x, 0x3FF71... (idx: 0)        0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_multiply_32_0    
  %28 = fmul float %x, 0x3FF71... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %28 = fmul float %x, 0x3FF71... (idx: 0) -> expm1f_altfp_multiply_32_0 (mux inputs: 0)
State: LEGUP_F_expm1f_BB__27
Binding functional unit type: altfp_add_32
Weight matrix for operation/function unit matching:
  %30 = fadd float %28, %29 can share an output register with another operation already assigned to expm1f_altfp_add_32_0
                                                  expm1f_altfp_add_32_0         
  %30 = fadd float %28, %29 (idx: 0)              15                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_add_32_0         
  %30 = fadd float %28, %29 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %30 = fadd float %28, %29 (idx: 0) -> expm1f_altfp_add_32_0 (mux inputs: 2)
State: LEGUP_F_expm1f_BB__27
Binding functional unit type: altfp_fptosi_32
Weight matrix for operation/function unit matching:
                                                  expm1f_altfp_fptosi_32_0      
  %31 = fptosi float %30 to i3... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_fptosi_32_0      
  %31 = fptosi float %30 to i3... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %31 = fptosi float %30 to i3... (idx: 0) -> expm1f_altfp_fptosi_32_0 (mux inputs: 1)
State: LEGUP_F_expm1f_BB__27
Binding functional unit type: altfp_sitofp_32
Weight matrix for operation/function unit matching:
                                                  expm1f_altfp_sitofp_32_0      
  %32 = sitofp i32 %31 to floa... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_sitofp_32_0      
  %32 = sitofp i32 %31 to floa... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %32 = sitofp i32 %31 to floa... (idx: 0) -> expm1f_altfp_sitofp_32_0 (mux inputs: 1)
State: LEGUP_F_expm1f_BB__27
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
  %33 = fmul float %32, 0x3FE6... can share an output register with another operation already assigned to expm1f_altfp_multiply_32_0
                                                  expm1f_altfp_multiply_32_0    
  %33 = fmul float %32, 0x3FE6... (idx: 0)        5                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_multiply_32_0    
  %33 = fmul float %32, 0x3FE6... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %33 = fmul float %32, 0x3FE6... (idx: 0) -> expm1f_altfp_multiply_32_0 (mux inputs: 1)
State: LEGUP_F_expm1f_BB__27
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
  %35 = fmul float %32, 0x3EE2... can share an input with another operation already assigned to expm1f_altfp_multiply_32_0
                                                  expm1f_altfp_multiply_32_0    
  %35 = fmul float %32, 0x3EE2... (idx: 0)        1                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_multiply_32_0    
  %35 = fmul float %32, 0x3EE2... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %35 = fmul float %32, 0x3EE2... (idx: 0) -> expm1f_altfp_multiply_32_0 (mux inputs: 1)
State: LEGUP_F_expm1f_BB__27
Binding functional unit type: altfp_subtract_32
Weight matrix for operation/function unit matching:
                                                  expm1f_altfp_subtract_32_0    
  %34 = fsub float %x, %33 (idx: 0)               10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_subtract_32_0    
  %34 = fsub float %x, %33 (idx: 0)               1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %34 = fsub float %x, %33 (idx: 0) -> expm1f_altfp_subtract_32_0 (mux inputs: 1)
State: LEGUP_F_expm1f_BB__36
Binding functional unit type: altfp_subtract_32
Weight matrix for operation/function unit matching:
                                                  expm1f_altfp_subtract_32_0    
  %37 = fsub float %hi.0, %lo.... (idx: 0)        21                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_subtract_32_0    
  %37 = fsub float %hi.0, %lo.... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %37 = fsub float %hi.0, %lo.... (idx: 0) -> expm1f_altfp_subtract_32_0 (mux inputs: 3)
State: LEGUP_F_expm1f_BB__36
Binding functional unit type: altfp_subtract_32
Weight matrix for operation/function unit matching:
  %38 = fsub float %hi.0, %37 can share an input with another operation already assigned to expm1f_altfp_subtract_32_0
  %38 = fsub float %hi.0, %37 can share an output register with another operation already assigned to expm1f_altfp_subtract_32_0
                                                  expm1f_altfp_subtract_32_0    
  %38 = fsub float %hi.0, %37 (idx: 0)            8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_subtract_32_0    
  %38 = fsub float %hi.0, %37 (idx: 0)            1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %38 = fsub float %hi.0, %37 (idx: 0) -> expm1f_altfp_subtract_32_0 (mux inputs: 4)
State: LEGUP_F_expm1f_BB__36
Binding functional unit type: altfp_subtract_32
Weight matrix for operation/function unit matching:
  %39 = fsub float %38, %lo.0 can share an input with another operation already assigned to expm1f_altfp_subtract_32_0
                                                  expm1f_altfp_subtract_32_0    
  %39 = fsub float %38, %lo.0 (idx: 0)            14                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_subtract_32_0    
  %39 = fsub float %38, %lo.0 (idx: 0)            1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %39 = fsub float %38, %lo.0 (idx: 0) -> expm1f_altfp_subtract_32_0 (mux inputs: 5)
State: LEGUP_F_expm1f_BB__42
Binding functional unit type: altfp_add_32
Weight matrix for operation/function unit matching:
  %43 = fadd float %x, 0x46293... can share an output register with another operation already assigned to expm1f_altfp_add_32_0
                                                  expm1f_altfp_add_32_0         
  %43 = fadd float %x, 0x46293... (idx: 0)        -3                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_add_32_0         
  %43 = fadd float %x, 0x46293... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %43 = fadd float %x, 0x46293... (idx: 0) -> expm1f_altfp_add_32_0 (mux inputs: 2)
State: LEGUP_F_expm1f_BB__42
Binding functional unit type: altfp_subtract_32
Weight matrix for operation/function unit matching:
  %44 = fsub float %43, %43 can share an output register with another operation already assigned to expm1f_altfp_subtract_32_0
                                                  expm1f_altfp_subtract_32_0    
  %44 = fsub float %43, %43 (idx: 0)              20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_subtract_32_0    
  %44 = fsub float %43, %43 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %44 = fsub float %43, %43 (idx: 0) -> expm1f_altfp_subtract_32_0 (mux inputs: 6)
State: LEGUP_F_expm1f_BB__42
Binding functional unit type: altfp_subtract_32
Weight matrix for operation/function unit matching:
  %45 = fsub float %x, %44 can share an output register with another operation already assigned to expm1f_altfp_subtract_32_0
                                                  expm1f_altfp_subtract_32_0    
  %45 = fsub float %x, %44 (idx: 0)               11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_subtract_32_0    
  %45 = fsub float %x, %44 (idx: 0)               1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %45 = fsub float %x, %44 (idx: 0) -> expm1f_altfp_subtract_32_0 (mux inputs: 7)
State: LEGUP_F_expm1f_BB__46
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
  %47 = fmul float %.062, 5.00... can share an output register with another operation already assigned to expm1f_altfp_multiply_32_0
                                                  expm1f_altfp_multiply_32_0    
  %47 = fmul float %.062, 5.00... (idx: 0)        6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_multiply_32_0    
  %47 = fmul float %.062, 5.00... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %47 = fmul float %.062, 5.00... (idx: 0) -> expm1f_altfp_multiply_32_0 (mux inputs: 2)
State: LEGUP_F_expm1f_BB__46
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
  %48 = fmul float %.062, %47 can share an input with another operation already assigned to expm1f_altfp_multiply_32_0
  %48 = fmul float %.062, %47 can share an output register with another operation already assigned to expm1f_altfp_multiply_32_0
                                                  expm1f_altfp_multiply_32_0    
  %48 = fmul float %.062, %47 (idx: 0)            7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_multiply_32_0    
  %48 = fmul float %.062, %47 (idx: 0)            1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %48 = fmul float %.062, %47 (idx: 0) -> expm1f_altfp_multiply_32_0 (mux inputs: 3)
State: LEGUP_F_expm1f_BB__46
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
  %49 = fmul float %48, 0xBE8A... can share an output register with another operation already assigned to expm1f_altfp_multiply_32_0
                                                  expm1f_altfp_multiply_32_0    
  %49 = fmul float %48, 0xBE8A... (idx: 0)        8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_multiply_32_0    
  %49 = fmul float %48, 0xBE8A... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %49 = fmul float %48, 0xBE8A... (idx: 0) -> expm1f_altfp_multiply_32_0 (mux inputs: 4)
State: LEGUP_F_expm1f_BB__46
Binding functional unit type: altfp_add_32
Weight matrix for operation/function unit matching:
  %50 = fadd float %49, 0x3ED0... can share an output register with another operation already assigned to expm1f_altfp_add_32_0
                                                  expm1f_altfp_add_32_0         
  %50 = fadd float %49, 0x3ED0... (idx: 0)        7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_add_32_0         
  %50 = fadd float %49, 0x3ED0... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %50 = fadd float %49, 0x3ED0... (idx: 0) -> expm1f_altfp_add_32_0 (mux inputs: 3)
State: LEGUP_F_expm1f_BB__46
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
  %51 = fmul float %48, %50 can share an input with another operation already assigned to expm1f_altfp_multiply_32_0
  %51 = fmul float %48, %50 can share an output register with another operation already assigned to expm1f_altfp_multiply_32_0
                                                  expm1f_altfp_multiply_32_0    
  %51 = fmul float %48, %50 (idx: 0)              9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_multiply_32_0    
  %51 = fmul float %48, %50 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %51 = fmul float %48, %50 (idx: 0) -> expm1f_altfp_multiply_32_0 (mux inputs: 5)
State: LEGUP_F_expm1f_BB__46
Binding functional unit type: altfp_add_32
Weight matrix for operation/function unit matching:
  %52 = fadd float %51, 0xBF14... can share an output register with another operation already assigned to expm1f_altfp_add_32_0
                                                  expm1f_altfp_add_32_0         
  %52 = fadd float %51, 0xBF14... (idx: 0)        8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_add_32_0         
  %52 = fadd float %51, 0xBF14... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %52 = fadd float %51, 0xBF14... (idx: 0) -> expm1f_altfp_add_32_0 (mux inputs: 4)
State: LEGUP_F_expm1f_BB__46
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
  %53 = fmul float %48, %52 can share an input with another operation already assigned to expm1f_altfp_multiply_32_0
  %53 = fmul float %48, %52 can share an output register with another operation already assigned to expm1f_altfp_multiply_32_0
                                                  expm1f_altfp_multiply_32_0    
  %53 = fmul float %48, %52 (idx: 0)              10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_multiply_32_0    
  %53 = fmul float %48, %52 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %53 = fmul float %48, %52 (idx: 0) -> expm1f_altfp_multiply_32_0 (mux inputs: 6)
State: LEGUP_F_expm1f_BB__46
Binding functional unit type: altfp_add_32
Weight matrix for operation/function unit matching:
  %54 = fadd float %53, 0x3F5A... can share an output register with another operation already assigned to expm1f_altfp_add_32_0
                                                  expm1f_altfp_add_32_0         
  %54 = fadd float %53, 0x3F5A... (idx: 0)        9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_add_32_0         
  %54 = fadd float %53, 0x3F5A... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %54 = fadd float %53, 0x3F5A... (idx: 0) -> expm1f_altfp_add_32_0 (mux inputs: 5)
State: LEGUP_F_expm1f_BB__46
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
  %55 = fmul float %48, %54 can share an input with another operation already assigned to expm1f_altfp_multiply_32_0
  %55 = fmul float %48, %54 can share an output register with another operation already assigned to expm1f_altfp_multiply_32_0
                                                  expm1f_altfp_multiply_32_0    
  %55 = fmul float %48, %54 (idx: 0)              11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_multiply_32_0    
  %55 = fmul float %48, %54 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %55 = fmul float %48, %54 (idx: 0) -> expm1f_altfp_multiply_32_0 (mux inputs: 7)
State: LEGUP_F_expm1f_BB__46
Binding functional unit type: altfp_add_32
Weight matrix for operation/function unit matching:
  %56 = fadd float %55, 0xBFA1... can share an output register with another operation already assigned to expm1f_altfp_add_32_0
                                                  expm1f_altfp_add_32_0         
  %56 = fadd float %55, 0xBFA1... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_add_32_0         
  %56 = fadd float %55, 0xBFA1... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %56 = fadd float %55, 0xBFA1... (idx: 0) -> expm1f_altfp_add_32_0 (mux inputs: 6)
State: LEGUP_F_expm1f_BB__46
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
  %57 = fmul float %48, %56 can share an input with another operation already assigned to expm1f_altfp_multiply_32_0
  %57 = fmul float %48, %56 can share an output register with another operation already assigned to expm1f_altfp_multiply_32_0
                                                  expm1f_altfp_multiply_32_0    
  %57 = fmul float %48, %56 (idx: 0)              12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_multiply_32_0    
  %57 = fmul float %48, %56 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %57 = fmul float %48, %56 (idx: 0) -> expm1f_altfp_multiply_32_0 (mux inputs: 8)
State: LEGUP_F_expm1f_BB__46
Binding functional unit type: altfp_add_32
Weight matrix for operation/function unit matching:
  %58 = fadd float %57, 1.0000... can share an output register with another operation already assigned to expm1f_altfp_add_32_0
                                                  expm1f_altfp_add_32_0         
  %58 = fadd float %57, 1.0000... (idx: 0)        11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_add_32_0         
  %58 = fadd float %57, 1.0000... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %58 = fadd float %57, 1.0000... (idx: 0) -> expm1f_altfp_add_32_0 (mux inputs: 7)
State: LEGUP_F_expm1f_BB__46
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
  %59 = fmul float %58, %47 can share an input with another operation already assigned to expm1f_altfp_multiply_32_0
  %59 = fmul float %58, %47 can share an output register with another operation already assigned to expm1f_altfp_multiply_32_0
                                                  expm1f_altfp_multiply_32_0    
  %59 = fmul float %58, %47 (idx: 0)              13                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_multiply_32_0    
  %59 = fmul float %58, %47 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %59 = fmul float %58, %47 (idx: 0) -> expm1f_altfp_multiply_32_0 (mux inputs: 9)
State: LEGUP_F_expm1f_BB__46
Binding functional unit type: altfp_subtract_32
Weight matrix for operation/function unit matching:
  %60 = fsub float 3.000000e+0... can share an output register with another operation already assigned to expm1f_altfp_subtract_32_0
                                                  expm1f_altfp_subtract_32_0    
  %60 = fsub float 3.000000e+0... (idx: 0)        12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_subtract_32_0    
  %60 = fsub float 3.000000e+0... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %60 = fsub float 3.000000e+0... (idx: 0) -> expm1f_altfp_subtract_32_0 (mux inputs: 8)
State: LEGUP_F_expm1f_BB__46
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
  %62 = fmul float %.062, %60 can share an input with another operation already assigned to expm1f_altfp_multiply_32_0
  %62 = fmul float %.062, %60 can share an output register with another operation already assigned to expm1f_altfp_multiply_32_0
                                                  expm1f_altfp_multiply_32_0    
  %62 = fmul float %.062, %60 (idx: 0)            14                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_multiply_32_0    
  %62 = fmul float %.062, %60 (idx: 0)            1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %62 = fmul float %.062, %60 (idx: 0) -> expm1f_altfp_multiply_32_0 (mux inputs: 10)
State: LEGUP_F_expm1f_BB__46
Binding functional unit type: altfp_subtract_32
Weight matrix for operation/function unit matching:
  %61 = fsub float %58, %60 can share an output register with another operation already assigned to expm1f_altfp_subtract_32_0
                                                  expm1f_altfp_subtract_32_0    
  %61 = fsub float %58, %60 (idx: 0)              23                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_subtract_32_0    
  %61 = fsub float %58, %60 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %61 = fsub float %58, %60 (idx: 0) -> expm1f_altfp_subtract_32_0 (mux inputs: 10)
State: LEGUP_F_expm1f_BB__46
Binding functional unit type: altfp_subtract_32
Weight matrix for operation/function unit matching:
  %63 = fsub float 6.000000e+0... can share an output register with another operation already assigned to expm1f_altfp_subtract_32_0
                                                  expm1f_altfp_subtract_32_0    
  %63 = fsub float 6.000000e+0... (idx: 0)        15                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_subtract_32_0    
  %63 = fsub float 6.000000e+0... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %63 = fsub float 6.000000e+0... (idx: 0) -> expm1f_altfp_subtract_32_0 (mux inputs: 11)
State: LEGUP_F_expm1f_BB__46
Binding functional unit type: altfp_divide_32
Weight matrix for operation/function unit matching:
                                                  expm1f_altfp_divide_32_0      
  %64 = fdiv float %61, %63 (idx: 0)              20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_divide_32_0      
  %64 = fdiv float %61, %63 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %64 = fdiv float %61, %63 (idx: 0) -> expm1f_altfp_divide_32_0 (mux inputs: 2)
State: LEGUP_F_expm1f_BB__46
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
  %65 = fmul float %48, %64 can share an input with another operation already assigned to expm1f_altfp_multiply_32_0
  %65 = fmul float %48, %64 can share an output register with another operation already assigned to expm1f_altfp_multiply_32_0
                                                  expm1f_altfp_multiply_32_0    
  %65 = fmul float %48, %64 (idx: 0)              15                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_multiply_32_0    
  %65 = fmul float %48, %64 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %65 = fmul float %48, %64 (idx: 0) -> expm1f_altfp_multiply_32_0 (mux inputs: 11)
State: LEGUP_F_expm1f_BB__67
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
  %68 = fmul float %.062, %65 can share an input with another operation already assigned to expm1f_altfp_multiply_32_0
  %68 = fmul float %.062, %65 can share an output register with another operation already assigned to expm1f_altfp_multiply_32_0
                                                  expm1f_altfp_multiply_32_0    
  %68 = fmul float %.062, %65 (idx: 0)            16                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_multiply_32_0    
  %68 = fmul float %.062, %65 (idx: 0)            1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %68 = fmul float %.062, %65 (idx: 0) -> expm1f_altfp_multiply_32_0 (mux inputs: 12)
State: LEGUP_F_expm1f_BB__67
Binding functional unit type: altfp_subtract_32
Weight matrix for operation/function unit matching:
  %69 = fsub float %68, %48 can share an output register with another operation already assigned to expm1f_altfp_subtract_32_0
                                                  expm1f_altfp_subtract_32_0    
  %69 = fsub float %68, %48 (idx: 0)              26                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_subtract_32_0    
  %69 = fsub float %68, %48 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %69 = fsub float %68, %48 (idx: 0) -> expm1f_altfp_subtract_32_0 (mux inputs: 13)
State: LEGUP_F_expm1f_BB__67
Binding functional unit type: altfp_subtract_32
Weight matrix for operation/function unit matching:
  %70 = fsub float %.062, %69 can share an output register with another operation already assigned to expm1f_altfp_subtract_32_0
                                                  expm1f_altfp_subtract_32_0    
  %70 = fsub float %.062, %69 (idx: 0)            28                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_subtract_32_0    
  %70 = fsub float %.062, %69 (idx: 0)            1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %70 = fsub float %.062, %69 (idx: 0) -> expm1f_altfp_subtract_32_0 (mux inputs: 15)
State: LEGUP_F_expm1f_BB__71
Binding functional unit type: altfp_subtract_32
Weight matrix for operation/function unit matching:
  %72 = fsub float %65, %c.0 can share an output register with another operation already assigned to expm1f_altfp_subtract_32_0
                                                  expm1f_altfp_subtract_32_0    
  %72 = fsub float %65, %c.0 (idx: 0)             30                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_subtract_32_0    
  %72 = fsub float %65, %c.0 (idx: 0)             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %72 = fsub float %65, %c.0 (idx: 0) -> expm1f_altfp_subtract_32_0 (mux inputs: 17)
State: LEGUP_F_expm1f_BB__71
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
  %73 = fmul float %.062, %72 can share an input with another operation already assigned to expm1f_altfp_multiply_32_0
  %73 = fmul float %.062, %72 can share an output register with another operation already assigned to expm1f_altfp_multiply_32_0
                                                  expm1f_altfp_multiply_32_0    
  %73 = fmul float %.062, %72 (idx: 0)            17                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_multiply_32_0    
  %73 = fmul float %.062, %72 (idx: 0)            1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %73 = fmul float %.062, %72 (idx: 0) -> expm1f_altfp_multiply_32_0 (mux inputs: 13)
State: LEGUP_F_expm1f_BB__71
Binding functional unit type: altfp_subtract_32
Weight matrix for operation/function unit matching:
  %74 = fsub float %73, %c.0 can share an input with another operation already assigned to expm1f_altfp_subtract_32_0
  %74 = fsub float %73, %c.0 can share an output register with another operation already assigned to expm1f_altfp_subtract_32_0
                                                  expm1f_altfp_subtract_32_0    
  %74 = fsub float %73, %c.0 (idx: 0)             22                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_subtract_32_0    
  %74 = fsub float %73, %c.0 (idx: 0)             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %74 = fsub float %73, %c.0 (idx: 0) -> expm1f_altfp_subtract_32_0 (mux inputs: 18)
State: LEGUP_F_expm1f_BB__71
Binding functional unit type: altfp_subtract_32
Weight matrix for operation/function unit matching:
  %75 = fsub float %74, %48 can share an input with another operation already assigned to expm1f_altfp_subtract_32_0
  %75 = fsub float %74, %48 can share an output register with another operation already assigned to expm1f_altfp_subtract_32_0
                                                  expm1f_altfp_subtract_32_0    
  %75 = fsub float %74, %48 (idx: 0)              23                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_subtract_32_0    
  %75 = fsub float %74, %48 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %75 = fsub float %74, %48 (idx: 0) -> expm1f_altfp_subtract_32_0 (mux inputs: 19)
State: LEGUP_F_expm1f_BB__76
Binding functional unit type: altfp_subtract_32
Weight matrix for operation/function unit matching:
  %77 = fsub float %.062, %75 can share an input with another operation already assigned to expm1f_altfp_subtract_32_0
  %77 = fsub float %.062, %75 can share an output register with another operation already assigned to expm1f_altfp_subtract_32_0
                                                  expm1f_altfp_subtract_32_0    
  %77 = fsub float %.062, %75 (idx: 0)            24                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_subtract_32_0    
  %77 = fsub float %.062, %75 (idx: 0)            1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %77 = fsub float %.062, %75 (idx: 0) -> expm1f_altfp_subtract_32_0 (mux inputs: 20)
State: LEGUP_F_expm1f_BB__76
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
  %78 = fmul float %77, 5.0000... can share an output register with another operation already assigned to expm1f_altfp_multiply_32_0
                                                  expm1f_altfp_multiply_32_0    
  %78 = fmul float %77, 5.0000... (idx: 0)        18                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_multiply_32_0    
  %78 = fmul float %77, 5.0000... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %78 = fmul float %77, 5.0000... (idx: 0) -> expm1f_altfp_multiply_32_0 (mux inputs: 14)
State: LEGUP_F_expm1f_BB__76
Binding functional unit type: altfp_add_32
Weight matrix for operation/function unit matching:
  %79 = fadd float %78, -5.000... can share an output register with another operation already assigned to expm1f_altfp_add_32_0
                                                  expm1f_altfp_add_32_0         
  %79 = fadd float %78, -5.000... (idx: 0)        12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_add_32_0         
  %79 = fadd float %78, -5.000... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %79 = fadd float %78, -5.000... (idx: 0) -> expm1f_altfp_add_32_0 (mux inputs: 8)
State: LEGUP_F_expm1f_BB__82
Binding functional unit type: altfp_add_32
Weight matrix for operation/function unit matching:
  %83 = fadd float %.062, 5.00... can share an output register with another operation already assigned to expm1f_altfp_add_32_0
                                                  expm1f_altfp_add_32_0         
  %83 = fadd float %.062, 5.00... (idx: 0)        13                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_add_32_0         
  %83 = fadd float %.062, 5.00... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %83 = fadd float %.062, 5.00... (idx: 0) -> expm1f_altfp_add_32_0 (mux inputs: 9)
State: LEGUP_F_expm1f_BB__82
Binding functional unit type: altfp_subtract_32
Weight matrix for operation/function unit matching:
  %84 = fsub float %75, %83 can share an input with another operation already assigned to expm1f_altfp_subtract_32_0
  %84 = fsub float %75, %83 can share an output register with another operation already assigned to expm1f_altfp_subtract_32_0
                                                  expm1f_altfp_subtract_32_0    
  %84 = fsub float %75, %83 (idx: 0)              25                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_subtract_32_0    
  %84 = fsub float %75, %83 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %84 = fsub float %75, %83 (idx: 0) -> expm1f_altfp_subtract_32_0 (mux inputs: 21)
State: LEGUP_F_expm1f_BB__82
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
  %85 = fmul float %84, -2.000... can share an output register with another operation already assigned to expm1f_altfp_multiply_32_0
                                                  expm1f_altfp_multiply_32_0    
  %85 = fmul float %84, -2.000... (idx: 0)        19                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_multiply_32_0    
  %85 = fmul float %84, -2.000... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %85 = fmul float %84, -2.000... (idx: 0) -> expm1f_altfp_multiply_32_0 (mux inputs: 15)
State: LEGUP_F_expm1f_BB__86
Binding functional unit type: altfp_subtract_32
Weight matrix for operation/function unit matching:
  %87 = fsub float %.062, %75 can share an input with another operation already assigned to expm1f_altfp_subtract_32_0
  %87 = fsub float %.062, %75 can share an input with another operation already assigned to expm1f_altfp_subtract_32_0
  %87 = fsub float %.062, %75 can share an output register with another operation already assigned to expm1f_altfp_subtract_32_0
                                                  expm1f_altfp_subtract_32_0    
  %87 = fsub float %.062, %75 (idx: 0)            16                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_subtract_32_0    
  %87 = fsub float %.062, %75 (idx: 0)            1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %87 = fsub float %.062, %75 (idx: 0) -> expm1f_altfp_subtract_32_0 (mux inputs: 21)
State: LEGUP_F_expm1f_BB__86
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
  %88 = fmul float %87, 2.0000... can share an output register with another operation already assigned to expm1f_altfp_multiply_32_0
                                                  expm1f_altfp_multiply_32_0    
  %88 = fmul float %87, 2.0000... (idx: 0)        20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_multiply_32_0    
  %88 = fmul float %87, 2.0000... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %88 = fmul float %87, 2.0000... (idx: 0) -> expm1f_altfp_multiply_32_0 (mux inputs: 16)
State: LEGUP_F_expm1f_BB__86
Binding functional unit type: altfp_add_32
Weight matrix for operation/function unit matching:
  %89 = fadd float %88, 1.0000... can share an output register with another operation already assigned to expm1f_altfp_add_32_0
                                                  expm1f_altfp_add_32_0         
  %89 = fadd float %88, 1.0000... (idx: 0)        14                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_add_32_0         
  %89 = fadd float %88, 1.0000... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %89 = fadd float %88, 1.0000... (idx: 0) -> expm1f_altfp_add_32_0 (mux inputs: 10)
State: LEGUP_F_expm1f_BB__92
Binding functional unit type: altfp_subtract_32
Weight matrix for operation/function unit matching:
  %93 = fsub float %75, %.062 can share an input with another operation already assigned to expm1f_altfp_subtract_32_0
  %93 = fsub float %75, %.062 can share an input with another operation already assigned to expm1f_altfp_subtract_32_0
  %93 = fsub float %75, %.062 can share an output register with another operation already assigned to expm1f_altfp_subtract_32_0
                                                  expm1f_altfp_subtract_32_0    
  %93 = fsub float %75, %.062 (idx: 0)            16                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_subtract_32_0    
  %93 = fsub float %75, %.062 (idx: 0)            1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %93 = fsub float %75, %.062 (idx: 0) -> expm1f_altfp_subtract_32_0 (mux inputs: 21)
State: LEGUP_F_expm1f_BB__92
Binding functional unit type: altfp_subtract_32
Weight matrix for operation/function unit matching:
  %94 = fsub float 1.000000e+0... can share an output register with another operation already assigned to expm1f_altfp_subtract_32_0
                                                  expm1f_altfp_subtract_32_0    
  %94 = fsub float 1.000000e+0... (idx: 0)        26                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_subtract_32_0    
  %94 = fsub float 1.000000e+0... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %94 = fsub float 1.000000e+0... (idx: 0) -> expm1f_altfp_subtract_32_0 (mux inputs: 22)
State: LEGUP_F_expm1f_BB__92
Binding functional unit type: altfp_add_32
Weight matrix for operation/function unit matching:
  %99 = fadd float %98, -1.000... can share an output register with another operation already assigned to expm1f_altfp_add_32_0
                                                  expm1f_altfp_add_32_0         
  %99 = fadd float %98, -1.000... (idx: 0)        15                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_add_32_0         
  %99 = fadd float %98, -1.000... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %99 = fadd float %98, -1.000... (idx: 0) -> expm1f_altfp_add_32_0 (mux inputs: 11)
State: LEGUP_F_expm1f_BB__102
Binding functional unit type: altfp_subtract_32
Weight matrix for operation/function unit matching:
  %106 = fsub float %75, %.062 can share an input with another operation already assigned to expm1f_altfp_subtract_32_0
  %106 = fsub float %75, %.062 can share an input with another operation already assigned to expm1f_altfp_subtract_32_0
  %106 = fsub float %75, %.062 can share an output register with another operation already assigned to expm1f_altfp_subtract_32_0
                                                  expm1f_altfp_subtract_32_0    
  %106 = fsub float %75, %.062 (idx: 0)           17                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_subtract_32_0    
  %106 = fsub float %75, %.062 (idx: 0)           1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %106 = fsub float %75, %.062 (idx: 0) -> expm1f_altfp_subtract_32_0 (mux inputs: 22)
State: LEGUP_F_expm1f_BB__102
Binding functional unit type: altfp_subtract_32
Weight matrix for operation/function unit matching:
  %107 = fsub float %105, %106 can share an output register with another operation already assigned to expm1f_altfp_subtract_32_0
                                                  expm1f_altfp_subtract_32_0    
  %107 = fsub float %105, %106 (idx: 0)           37                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_subtract_32_0    
  %107 = fsub float %105, %106 (idx: 0)           1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %107 = fsub float %105, %106 (idx: 0) -> expm1f_altfp_subtract_32_0 (mux inputs: 24)
State: LEGUP_F_expm1f_BB__112
Binding functional unit type: altfp_add_32
Weight matrix for operation/function unit matching:
  %116 = fadd float %75, %115 can share an output register with another operation already assigned to expm1f_altfp_add_32_0
                                                  expm1f_altfp_add_32_0         
  %116 = fadd float %75, %115 (idx: 0)            26                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_add_32_0         
  %116 = fadd float %75, %115 (idx: 0)            1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %116 = fadd float %75, %115 (idx: 0) -> expm1f_altfp_add_32_0 (mux inputs: 13)
State: LEGUP_F_expm1f_BB__112
Binding functional unit type: altfp_subtract_32
Weight matrix for operation/function unit matching:
  %117 = fsub float %.062, %11... can share an input with another operation already assigned to expm1f_altfp_subtract_32_0
  %117 = fsub float %.062, %11... can share an output register with another operation already assigned to expm1f_altfp_subtract_32_0
                                                  expm1f_altfp_subtract_32_0    
  %117 = fsub float %.062, %11... (idx: 0)        29                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_subtract_32_0    
  %117 = fsub float %.062, %11... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %117 = fsub float %.062, %11... (idx: 0) -> expm1f_altfp_subtract_32_0 (mux inputs: 25)
State: LEGUP_F_expm1f_BB__112
Binding functional unit type: altfp_add_32
Weight matrix for operation/function unit matching:
  %118 = fadd float %117, 1.00... can share an output register with another operation already assigned to expm1f_altfp_add_32_0
                                                  expm1f_altfp_add_32_0         
  %118 = fadd float %117, 1.00... (idx: 0)        18                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  expm1f_altfp_add_32_0         
  %118 = fadd float %117, 1.00... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %118 = fadd float %117, 1.00... (idx: 0) -> expm1f_altfp_add_32_0 (mux inputs: 14)

Running Bipartite Weighted Matching on function: tanhf
State: LEGUP_F_tanhf_BB__4
Binding functional unit type: altfp_divide_32
Weight matrix for operation/function unit matching:
                                                  tanhf_altfp_divide_32_0       
  %6 = fdiv float 1.000000e+00... (idx: 0)        0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  tanhf_altfp_divide_32_0       
  %6 = fdiv float 1.000000e+00... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %6 = fdiv float 1.000000e+00... (idx: 0) -> tanhf_altfp_divide_32_0 (mux inputs: 0)
State: LEGUP_F_tanhf_BB__7
Binding functional unit type: altfp_add_32
Weight matrix for operation/function unit matching:
                                                  tanhf_altfp_add_32_0          
  %8 = fadd float %6, 1.000000... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  tanhf_altfp_add_32_0          
  %8 = fadd float %6, 1.000000... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %8 = fadd float %6, 1.000000... (idx: 0) -> tanhf_altfp_add_32_0 (mux inputs: 1)
State: LEGUP_F_tanhf_BB__9
Binding functional unit type: altfp_add_32
Weight matrix for operation/function unit matching:
  %10 = fadd float %6, -1.0000... can share an input with another operation already assigned to tanhf_altfp_add_32_0
                                                  tanhf_altfp_add_32_0          
  %10 = fadd float %6, -1.0000... (idx: 0)        1                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  tanhf_altfp_add_32_0          
  %10 = fadd float %6, -1.0000... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %10 = fadd float %6, -1.0000... (idx: 0) -> tanhf_altfp_add_32_0 (mux inputs: 1)
State: LEGUP_F_tanhf_BB__15
Binding functional unit type: altfp_add_32
Weight matrix for operation/function unit matching:
  %16 = fadd float %x, 1.00000... can share an output register with another operation already assigned to tanhf_altfp_add_32_0
                                                  tanhf_altfp_add_32_0          
  %16 = fadd float %x, 1.00000... (idx: 0)        -4                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  tanhf_altfp_add_32_0          
  %16 = fadd float %x, 1.00000... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %16 = fadd float %x, 1.00000... (idx: 0) -> tanhf_altfp_add_32_0 (mux inputs: 1)
State: LEGUP_F_tanhf_BB__15
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  tanhf_altfp_multiply_32_0     
  %17 = fmul float %16, %x (idx: 0)               10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  tanhf_altfp_multiply_32_0     
  %17 = fmul float %16, %x (idx: 0)               1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %17 = fmul float %16, %x (idx: 0) -> tanhf_altfp_multiply_32_0 (mux inputs: 1)
State: LEGUP_F_tanhf_BB__21
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
  %22 = fmul float %20, 2.0000... can share an output register with another operation already assigned to tanhf_altfp_multiply_32_0
                                                  tanhf_altfp_multiply_32_0     
  %22 = fmul float %20, 2.0000... (idx: 0)        6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  tanhf_altfp_multiply_32_0     
  %22 = fmul float %20, 2.0000... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %22 = fmul float %20, 2.0000... (idx: 0) -> tanhf_altfp_multiply_32_0 (mux inputs: 2)
State: LEGUP_F_tanhf_BB__21
Binding functional unit type: altfp_add_32
Weight matrix for operation/function unit matching:
  %24 = fadd float %23, 2.0000... can share an output register with another operation already assigned to tanhf_altfp_add_32_0
                                                  tanhf_altfp_add_32_0          
  %24 = fadd float %23, 2.0000... (idx: 0)        6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  tanhf_altfp_add_32_0          
  %24 = fadd float %23, 2.0000... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %24 = fadd float %23, 2.0000... (idx: 0) -> tanhf_altfp_add_32_0 (mux inputs: 2)
State: LEGUP_F_tanhf_BB__21
Binding functional unit type: altfp_divide_32
Weight matrix for operation/function unit matching:
  %25 = fdiv float 2.000000e+0... can share an output register with another operation already assigned to tanhf_altfp_divide_32_0
                                                  tanhf_altfp_divide_32_0       
  %25 = fdiv float 2.000000e+0... (idx: 0)        5                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  tanhf_altfp_divide_32_0       
  %25 = fdiv float 2.000000e+0... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %25 = fdiv float 2.000000e+0... (idx: 0) -> tanhf_altfp_divide_32_0 (mux inputs: 1)
State: LEGUP_F_tanhf_BB__21
Binding functional unit type: altfp_subtract_32
Weight matrix for operation/function unit matching:
                                                  tanhf_altfp_subtract_32_0     
  %26 = fsub float 1.000000e+0... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  tanhf_altfp_subtract_32_0     
  %26 = fsub float 1.000000e+0... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %26 = fsub float 1.000000e+0... (idx: 0) -> tanhf_altfp_subtract_32_0 (mux inputs: 1)
State: LEGUP_F_tanhf_BB__27
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
  %28 = fmul float %20, -2.000... can share an input with another operation already assigned to tanhf_altfp_multiply_32_0
  %28 = fmul float %20, -2.000... can share an output register with another operation already assigned to tanhf_altfp_multiply_32_0
                                                  tanhf_altfp_multiply_32_0     
  %28 = fmul float %20, -2.000... (idx: 0)        -3                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  tanhf_altfp_multiply_32_0     
  %28 = fmul float %20, -2.000... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %28 = fmul float %20, -2.000... (idx: 0) -> tanhf_altfp_multiply_32_0 (mux inputs: 2)
State: LEGUP_F_tanhf_BB__27
Binding functional unit type: altfp_add_32
Weight matrix for operation/function unit matching:
  %31 = fadd float %29, 2.0000... can share an output register with another operation already assigned to tanhf_altfp_add_32_0
                                                  tanhf_altfp_add_32_0          
  %31 = fadd float %29, 2.0000... (idx: 0)        7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  tanhf_altfp_add_32_0          
  %31 = fadd float %29, 2.0000... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %31 = fadd float %29, 2.0000... (idx: 0) -> tanhf_altfp_add_32_0 (mux inputs: 3)
State: LEGUP_F_tanhf_BB__27
Binding functional unit type: altfp_subtract_32
Weight matrix for operation/function unit matching:
  %30 = fsub float -0.000000e+... can share an output register with another operation already assigned to tanhf_altfp_subtract_32_0
                                                  tanhf_altfp_subtract_32_0     
  %30 = fsub float -0.000000e+... (idx: 0)        6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  tanhf_altfp_subtract_32_0     
  %30 = fsub float -0.000000e+... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %30 = fsub float -0.000000e+... (idx: 0) -> tanhf_altfp_subtract_32_0 (mux inputs: 2)
State: LEGUP_F_tanhf_BB__27
Binding functional unit type: altfp_divide_32
Weight matrix for operation/function unit matching:
  %32 = fdiv float %30, %31 can share an output register with another operation already assigned to tanhf_altfp_divide_32_0
                                                  tanhf_altfp_divide_32_0       
  %32 = fdiv float %30, %31 (idx: 0)              16                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  tanhf_altfp_divide_32_0       
  %32 = fdiv float %30, %31 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %32 = fdiv float %30, %31 (idx: 0) -> tanhf_altfp_divide_32_0 (mux inputs: 3)
State: LEGUP_F_tanhf_BB__35
Binding functional unit type: altfp_subtract_32
Weight matrix for operation/function unit matching:
  %36 = fsub float -0.000000e+... can share an output register with another operation already assigned to tanhf_altfp_subtract_32_0
                                                  tanhf_altfp_subtract_32_0     
  %36 = fsub float -0.000000e+... (idx: 0)        7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  tanhf_altfp_subtract_32_0     
  %36 = fsub float -0.000000e+... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %36 = fsub float -0.000000e+... (idx: 0) -> tanhf_altfp_subtract_32_0 (mux inputs: 3)

Running Bipartite Weighted Matching on function: main
State: LEGUP_F_main_BB_fusionloop_bodydim0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %0 = load volatile float* %s... (idx: 0)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %0 = load volatile float* %s... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %0 = load volatile float* %s... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB__6
Binding functional unit type: altfp_add_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_add_32_0           
  %7 = fadd float %1, %1 (idx: 0)                 20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_add_32_0           
  %7 = fadd float %1, %1 (idx: 0)                 1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %7 = fadd float %1, %1 (idx: 0) -> main_altfp_add_32_0 (mux inputs: 1)
State: LEGUP_F_main_BB__20
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %23 = load float* %22, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %25 = load float* %24, align... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %23 = load float* %22, align... (idx: 0)        6                             10                            
  %25 = load float* %24, align... (idx: 1)        6                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %23 = load float* %22, align... (idx: 0)        1                             0                             
  %25 = load float* %24, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %23 = load float* %22, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 2)
  %25 = load float* %24, align... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_main_BB__28
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %29 = fmul float %1, 0x3FF71... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %29 = fmul float %1, 0x3FF71... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %29 = fmul float %1, 0x3FF71... (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 1)
State: LEGUP_F_main_BB__28
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %32 = load float* %31, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %32 = load float* %31, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %32 = load float* %31, align... (idx: 0)        7                             6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %32 = load float* %31, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %32 = load float* %31, align... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_main_BB__28
Binding functional unit type: altfp_add_32
Weight matrix for operation/function unit matching:
  %33 = fadd float %29, %32 can share an output register with another operation already assigned to main_altfp_add_32_0
                                                  main_altfp_add_32_0           
  %33 = fadd float %29, %32 (idx: 0)              16                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_add_32_0           
  %33 = fadd float %29, %32 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %33 = fadd float %29, %32 (idx: 0) -> main_altfp_add_32_0 (mux inputs: 3)
State: LEGUP_F_main_BB__28
Binding functional unit type: altfp_fptosi_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_fptosi_32_0        
  %34 = fptosi float %33 to i3... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_fptosi_32_0        
  %34 = fptosi float %33 to i3... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %34 = fptosi float %33 to i3... (idx: 0) -> main_altfp_fptosi_32_0 (mux inputs: 1)
State: LEGUP_F_main_BB__28
Binding functional unit type: altfp_sitofp_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_sitofp_32_0        
  %35 = sitofp i32 %34 to floa... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_sitofp_32_0        
  %35 = sitofp i32 %34 to floa... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %35 = sitofp i32 %34 to floa... (idx: 0) -> main_altfp_sitofp_32_0 (mux inputs: 1)
State: LEGUP_F_main_BB__28
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %36 = fmul float %35, 0x3FE6... (idx: 0)        11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %36 = fmul float %35, 0x3FE6... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %36 = fmul float %35, 0x3FE6... (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 2)
State: LEGUP_F_main_BB__28
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
  %37 = fmul float %35, 0x3EE2... can share an input with another operation already assigned to main_altfp_multiply_32_0
                                                  main_altfp_multiply_32_0      
  %37 = fmul float %35, 0x3EE2... (idx: 0)        2                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %37 = fmul float %35, 0x3EE2... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %37 = fmul float %35, 0x3EE2... (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 2)
State: LEGUP_F_main_BB__38
Binding functional unit type: altfp_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_subtract_32_0      
  %hi.i.i.1 = fsub float %1, %... (idx: 0)        20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_subtract_32_0      
  %hi.i.i.1 = fsub float %1, %... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %hi.i.i.1 = fsub float %1, %... (idx: 0) -> main_altfp_subtract_32_0 (mux inputs: 2)
State: LEGUP_F_main_BB__38
Binding functional unit type: altfp_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_subtract_32_0      
  %39 = fsub float %hi.i.i.1, ... (idx: 0)        22                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_subtract_32_0      
  %39 = fsub float %hi.i.i.1, ... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %39 = fsub float %hi.i.i.1, ... (idx: 0) -> main_altfp_subtract_32_0 (mux inputs: 4)
State: LEGUP_F_main_BB__40
Binding functional unit type: altfp_add_32
Weight matrix for operation/function unit matching:
  %42 = fadd float %1, 0x46293... can share an input with another operation already assigned to main_altfp_add_32_0
  %42 = fadd float %1, 0x46293... can share an output register with another operation already assigned to main_altfp_add_32_0
                                                  main_altfp_add_32_0           
  %42 = fadd float %1, 0x46293... (idx: 0)        -2                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_add_32_0           
  %42 = fadd float %1, 0x46293... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %42 = fadd float %1, 0x46293... (idx: 0) -> main_altfp_add_32_0 (mux inputs: 3)
State: LEGUP_F_main_BB__44
Binding functional unit type: altfp_add_32
Weight matrix for operation/function unit matching:
  %45 = fadd float %1, 1.00000... can share an input with another operation already assigned to main_altfp_add_32_0
  %45 = fadd float %1, 1.00000... can share an output register with another operation already assigned to main_altfp_add_32_0
                                                  main_altfp_add_32_0           
  %45 = fadd float %1, 1.00000... (idx: 0)        -2                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_add_32_0           
  %45 = fadd float %1, 1.00000... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %45 = fadd float %1, 1.00000... (idx: 0) -> main_altfp_add_32_0 (mux inputs: 3)
State: LEGUP_F_main_BB__46
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
  %47 = fmul float %.048, %.04... can share an output register with another operation already assigned to main_altfp_multiply_32_0
                                                  main_altfp_multiply_32_0      
  %47 = fmul float %.048, %.04... (idx: 0)        17                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %47 = fmul float %.048, %.04... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %47 = fmul float %.048, %.04... (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 3)
State: LEGUP_F_main_BB__46
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
  %48 = fmul float %47, 0x3E66... can share an output register with another operation already assigned to main_altfp_multiply_32_0
                                                  main_altfp_multiply_32_0      
  %48 = fmul float %47, 0x3E66... (idx: 0)        8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %48 = fmul float %47, 0x3E66... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %48 = fmul float %47, 0x3E66... (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 4)
State: LEGUP_F_main_BB__46
Binding functional unit type: altfp_add_32
Weight matrix for operation/function unit matching:
  %49 = fadd float %48, 0xBEBB... can share an output register with another operation already assigned to main_altfp_add_32_0
                                                  main_altfp_add_32_0           
  %49 = fadd float %48, 0xBEBB... (idx: 0)        8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_add_32_0           
  %49 = fadd float %48, 0xBEBB... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %49 = fadd float %48, 0xBEBB... (idx: 0) -> main_altfp_add_32_0 (mux inputs: 4)
State: LEGUP_F_main_BB__46
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
  %50 = fmul float %47, %49 can share an input with another operation already assigned to main_altfp_multiply_32_0
  %50 = fmul float %47, %49 can share an output register with another operation already assigned to main_altfp_multiply_32_0
                                                  main_altfp_multiply_32_0      
  %50 = fmul float %47, %49 (idx: 0)              9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %50 = fmul float %47, %49 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %50 = fmul float %47, %49 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 5)
State: LEGUP_F_main_BB__46
Binding functional unit type: altfp_add_32
Weight matrix for operation/function unit matching:
  %51 = fadd float %50, 0x3F11... can share an output register with another operation already assigned to main_altfp_add_32_0
                                                  main_altfp_add_32_0           
  %51 = fadd float %50, 0x3F11... (idx: 0)        9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_add_32_0           
  %51 = fadd float %50, 0x3F11... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %51 = fadd float %50, 0x3F11... (idx: 0) -> main_altfp_add_32_0 (mux inputs: 5)
State: LEGUP_F_main_BB__46
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
  %52 = fmul float %47, %51 can share an input with another operation already assigned to main_altfp_multiply_32_0
  %52 = fmul float %47, %51 can share an output register with another operation already assigned to main_altfp_multiply_32_0
                                                  main_altfp_multiply_32_0      
  %52 = fmul float %47, %51 (idx: 0)              10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %52 = fmul float %47, %51 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %52 = fmul float %47, %51 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 6)
State: LEGUP_F_main_BB__46
Binding functional unit type: altfp_add_32
Weight matrix for operation/function unit matching:
  %53 = fadd float %52, 0xBF66... can share an output register with another operation already assigned to main_altfp_add_32_0
                                                  main_altfp_add_32_0           
  %53 = fadd float %52, 0xBF66... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_add_32_0           
  %53 = fadd float %52, 0xBF66... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %53 = fadd float %52, 0xBF66... (idx: 0) -> main_altfp_add_32_0 (mux inputs: 6)
State: LEGUP_F_main_BB__46
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
  %54 = fmul float %47, %53 can share an input with another operation already assigned to main_altfp_multiply_32_0
  %54 = fmul float %47, %53 can share an output register with another operation already assigned to main_altfp_multiply_32_0
                                                  main_altfp_multiply_32_0      
  %54 = fmul float %47, %53 (idx: 0)              11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %54 = fmul float %47, %53 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %54 = fmul float %47, %53 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 7)
State: LEGUP_F_main_BB__46
Binding functional unit type: altfp_add_32
Weight matrix for operation/function unit matching:
  %55 = fadd float %54, 0x3FC5... can share an output register with another operation already assigned to main_altfp_add_32_0
                                                  main_altfp_add_32_0           
  %55 = fadd float %54, 0x3FC5... (idx: 0)        11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_add_32_0           
  %55 = fadd float %54, 0x3FC5... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %55 = fadd float %54, 0x3FC5... (idx: 0) -> main_altfp_add_32_0 (mux inputs: 7)
State: LEGUP_F_main_BB__46
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
  %56 = fmul float %47, %55 can share an input with another operation already assigned to main_altfp_multiply_32_0
  %56 = fmul float %47, %55 can share an output register with another operation already assigned to main_altfp_multiply_32_0
                                                  main_altfp_multiply_32_0      
  %56 = fmul float %47, %55 (idx: 0)              12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %56 = fmul float %47, %55 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %56 = fmul float %47, %55 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 8)
State: LEGUP_F_main_BB__46
Binding functional unit type: altfp_subtract_32
Weight matrix for operation/function unit matching:
  %57 = fsub float %.048, %56 can share an output register with another operation already assigned to main_altfp_subtract_32_0
                                                  main_altfp_subtract_32_0      
  %57 = fsub float %.048, %56 (idx: 0)            19                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_subtract_32_0      
  %57 = fsub float %.048, %56 (idx: 0)            1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %57 = fsub float %.048, %56 (idx: 0) -> main_altfp_subtract_32_0 (mux inputs: 6)
State: LEGUP_F_main_BB__46
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
  %59 = fmul float %.048, %57 can share an input with another operation already assigned to main_altfp_multiply_32_0
  %59 = fmul float %.048, %57 can share an output register with another operation already assigned to main_altfp_multiply_32_0
                                                  main_altfp_multiply_32_0      
  %59 = fmul float %.048, %57 (idx: 0)            13                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %59 = fmul float %.048, %57 (idx: 0)            1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %59 = fmul float %.048, %57 (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 9)
State: LEGUP_F_main_BB__60
Binding functional unit type: altfp_add_32
Weight matrix for operation/function unit matching:
  %61 = fadd float %57, -2.000... can share an output register with another operation already assigned to main_altfp_add_32_0
                                                  main_altfp_add_32_0           
  %61 = fadd float %57, -2.000... (idx: 0)        12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_add_32_0           
  %61 = fadd float %57, -2.000... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %61 = fadd float %57, -2.000... (idx: 0) -> main_altfp_add_32_0 (mux inputs: 8)
State: LEGUP_F_main_BB__60
Binding functional unit type: altfp_divide_32
Weight matrix for operation/function unit matching:
                                                  main_altfp_divide_32_0        
  %62 = fdiv float %59, %61 (idx: 0)              20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_divide_32_0        
  %62 = fdiv float %59, %61 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %62 = fdiv float %59, %61 (idx: 0) -> main_altfp_divide_32_0 (mux inputs: 2)
State: LEGUP_F_main_BB__60
Binding functional unit type: altfp_subtract_32
Weight matrix for operation/function unit matching:
  %63 = fsub float %62, %.048 can share an input with another operation already assigned to main_altfp_subtract_32_0
  %63 = fsub float %62, %.048 can share an output register with another operation already assigned to main_altfp_subtract_32_0
                                                  main_altfp_subtract_32_0      
  %63 = fsub float %62, %.048 (idx: 0)            11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_subtract_32_0      
  %63 = fsub float %62, %.048 (idx: 0)            1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %63 = fsub float %62, %.048 (idx: 0) -> main_altfp_subtract_32_0 (mux inputs: 7)
State: LEGUP_F_main_BB__60
Binding functional unit type: altfp_subtract_32
Weight matrix for operation/function unit matching:
  %64 = fsub float 1.000000e+0... can share an output register with another operation already assigned to main_altfp_subtract_32_0
                                                  main_altfp_subtract_32_0      
  %64 = fsub float 1.000000e+0... (idx: 0)        12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_subtract_32_0      
  %64 = fsub float 1.000000e+0... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %64 = fsub float 1.000000e+0... (idx: 0) -> main_altfp_subtract_32_0 (mux inputs: 8)
State: LEGUP_F_main_BB__65
Binding functional unit type: altfp_subtract_32
Weight matrix for operation/function unit matching:
  %66 = fsub float 2.000000e+0... can share an output register with another operation already assigned to main_altfp_subtract_32_0
                                                  main_altfp_subtract_32_0      
  %66 = fsub float 2.000000e+0... (idx: 0)        13                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_subtract_32_0      
  %66 = fsub float 2.000000e+0... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %66 = fsub float 2.000000e+0... (idx: 0) -> main_altfp_subtract_32_0 (mux inputs: 9)
State: LEGUP_F_main_BB__65
Binding functional unit type: altfp_divide_32
Weight matrix for operation/function unit matching:
  %67 = fdiv float %59, %66 can share an input with another operation already assigned to main_altfp_divide_32_0
  %67 = fdiv float %59, %66 can share an output register with another operation already assigned to main_altfp_divide_32_0
                                                  main_altfp_divide_32_0        
  %67 = fdiv float %59, %66 (idx: 0)              7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_divide_32_0        
  %67 = fdiv float %59, %66 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %67 = fdiv float %59, %66 (idx: 0) -> main_altfp_divide_32_0 (mux inputs: 3)
State: LEGUP_F_main_BB__65
Binding functional unit type: altfp_subtract_32
Weight matrix for operation/function unit matching:
  %68 = fsub float %lo.i.i.2, ... can share an output register with another operation already assigned to main_altfp_subtract_32_0
                                                  main_altfp_subtract_32_0      
  %68 = fsub float %lo.i.i.2, ... (idx: 0)        24                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_subtract_32_0      
  %68 = fsub float %lo.i.i.2, ... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %68 = fsub float %lo.i.i.2, ... (idx: 0) -> main_altfp_subtract_32_0 (mux inputs: 11)
State: LEGUP_F_main_BB__65
Binding functional unit type: altfp_subtract_32
Weight matrix for operation/function unit matching:
  %69 = fsub float %68, %hi.i.... can share an output register with another operation already assigned to main_altfp_subtract_32_0
                                                  main_altfp_subtract_32_0      
  %69 = fsub float %68, %hi.i.... (idx: 0)        26                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_subtract_32_0      
  %69 = fsub float %68, %hi.i.... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %69 = fsub float %68, %hi.i.... (idx: 0) -> main_altfp_subtract_32_0 (mux inputs: 13)
State: LEGUP_F_main_BB__65
Binding functional unit type: altfp_subtract_32
Weight matrix for operation/function unit matching:
  %70 = fsub float 1.000000e+0... can share an output register with another operation already assigned to main_altfp_subtract_32_0
                                                  main_altfp_subtract_32_0      
  %70 = fsub float 1.000000e+0... (idx: 0)        18                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_subtract_32_0      
  %70 = fsub float 1.000000e+0... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %70 = fsub float 1.000000e+0... (idx: 0) -> main_altfp_subtract_32_0 (mux inputs: 14)
State: LEGUP_F_main_BB__77
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
  %81 = fmul float %80, 0x39B0... can share an output register with another operation already assigned to main_altfp_multiply_32_0
                                                  main_altfp_multiply_32_0      
  %81 = fmul float %80, 0x39B0... (idx: 0)        14                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %81 = fmul float %80, 0x39B0... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %81 = fmul float %80, 0x39B0... (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 10)
State: LEGUP_F_main_BB_expfexit
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
  %.op = fmul float %.0, 5.000... can share an output register with another operation already assigned to main_altfp_multiply_32_0
                                                  main_altfp_multiply_32_0      
  %.op = fmul float %.0, 5.000... (idx: 0)        15                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %.op = fmul float %.0, 5.000... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.op = fmul float %.0, 5.000... (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 11)
State: LEGUP_F_main_BB_expfexit
Binding functional unit type: altfp_multiply_32
Weight matrix for operation/function unit matching:
  %85 = fmul float %84, 5.0000... can share an output register with another operation already assigned to main_altfp_multiply_32_0
                                                  main_altfp_multiply_32_0      
  %85 = fmul float %84, 5.0000... (idx: 0)        16                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_32_0      
  %85 = fmul float %84, 5.0000... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %85 = fmul float %84, 5.0000... (idx: 0) -> main_altfp_multiply_32_0 (mux inputs: 12)
State: LEGUP_F_main_BB_expfexit
Binding functional unit type: altfp_add_32
Weight matrix for operation/function unit matching:
  %86 = fadd float %85, 5.0000... can share an output register with another operation already assigned to main_altfp_add_32_0
                                                  main_altfp_add_32_0           
  %86 = fadd float %85, 5.0000... (idx: 0)        13                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_add_32_0           
  %86 = fadd float %85, 5.0000... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %86 = fadd float %85, 5.0000... (idx: 0) -> main_altfp_add_32_0 (mux inputs: 9)
State: LEGUP_F_main_BB_expfexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile float %86, fl... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile float %86, fl... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %86, fl... (idx: 0)        17                            17                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile float %86, fl... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile float %86, fl... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_main_BB_fusionloop_exitdim0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %leflow_retval = load volati... can share an output register with another operation already assigned to main_mem_dual_port_0
  %leflow_retval = load volati... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %leflow_retval = load volati... (idx: 0)        -1                            -3                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %leflow_retval = load volati... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %leflow_retval = load volati... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 2)

