; ModuleID = '14_maxp_b_f.prelto.1.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux_gnu"

@temp0 = global [1 x [10 x [10 x [1 x float]]]] zeroinitializer, align 8
@param0 = global [1 x [32 x [32 x [1 x float]]]] zeroinitializer, align 8

define float @main() #0 {
reduce-window.loop_body.dim.1.lr.ph:
  %0 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 0, i64 0
  %1 = load volatile float* %0, align 4
  %2 = fcmp oge float 0xFFF0000000000000, %1
  %3 = select i1 %2, float 0xFFF0000000000000, float %1
  %4 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 1, i64 0
  %5 = load volatile float* %4, align 4
  %6 = fcmp oge float %3, %5
  %7 = fcmp ueq float %3, 0.000000e+00
  %8 = or i1 %6, %7
  %9 = select i1 %8, float %3, float %5
  %10 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 2, i64 0
  %11 = load volatile float* %10, align 4
  %12 = fcmp oge float %9, %11
  %13 = fcmp ueq float %9, 0.000000e+00
  %14 = or i1 %12, %13
  %15 = select i1 %14, float %9, float %11
  %16 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 0, i64 0
  %17 = load volatile float* %16, align 4
  %18 = fcmp oge float %15, %17
  %19 = fcmp ueq float %15, 0.000000e+00
  %20 = or i1 %18, %19
  %21 = select i1 %20, float %15, float %17
  %22 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 1, i64 0
  %23 = load volatile float* %22, align 4
  %24 = fcmp oge float %21, %23
  %25 = fcmp ueq float %21, 0.000000e+00
  %26 = or i1 %24, %25
  %27 = select i1 %26, float %21, float %23
  %28 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 2, i64 0
  %29 = load volatile float* %28, align 4
  %30 = fcmp oge float %27, %29
  %31 = fcmp ueq float %27, 0.000000e+00
  %32 = or i1 %30, %31
  %33 = select i1 %32, float %27, float %29
  %34 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 0, i64 0
  %35 = load volatile float* %34, align 4
  %36 = fcmp oge float %33, %35
  %37 = fcmp ueq float %33, 0.000000e+00
  %38 = or i1 %36, %37
  %39 = select i1 %38, float %33, float %35
  %40 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 1, i64 0
  %41 = load volatile float* %40, align 4
  %42 = fcmp oge float %39, %41
  %43 = fcmp ueq float %39, 0.000000e+00
  %44 = or i1 %42, %43
  %45 = select i1 %44, float %39, float %41
  %46 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 2, i64 0
  %47 = load volatile float* %46, align 4
  %48 = fcmp oge float %45, %47
  %49 = fcmp ueq float %45, 0.000000e+00
  %50 = or i1 %48, %49
  %51 = select i1 %50, float %45, float %47
  %52 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 0, i64 0, i64 0
  store volatile float %51, float* %52, align 4
  %53 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 3, i64 0
  %54 = load volatile float* %53, align 4
  %55 = fcmp oge float 0xFFF0000000000000, %54
  %56 = select i1 %55, float 0xFFF0000000000000, float %54
  %57 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 4, i64 0
  %58 = load volatile float* %57, align 4
  %59 = fcmp oge float %56, %58
  %60 = fcmp ueq float %56, 0.000000e+00
  %61 = or i1 %59, %60
  %62 = select i1 %61, float %56, float %58
  %63 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 5, i64 0
  %64 = load volatile float* %63, align 4
  %65 = fcmp oge float %62, %64
  %66 = fcmp ueq float %62, 0.000000e+00
  %67 = or i1 %65, %66
  %68 = select i1 %67, float %62, float %64
  %69 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 3, i64 0
  %70 = load volatile float* %69, align 4
  %71 = fcmp oge float %68, %70
  %72 = fcmp ueq float %68, 0.000000e+00
  %73 = or i1 %71, %72
  %74 = select i1 %73, float %68, float %70
  %75 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 4, i64 0
  %76 = load volatile float* %75, align 4
  %77 = fcmp oge float %74, %76
  %78 = fcmp ueq float %74, 0.000000e+00
  %79 = or i1 %77, %78
  %80 = select i1 %79, float %74, float %76
  %81 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 5, i64 0
  %82 = load volatile float* %81, align 4
  %83 = fcmp oge float %80, %82
  %84 = fcmp ueq float %80, 0.000000e+00
  %85 = or i1 %83, %84
  %86 = select i1 %85, float %80, float %82
  %87 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 3, i64 0
  %88 = load volatile float* %87, align 4
  %89 = fcmp oge float %86, %88
  %90 = fcmp ueq float %86, 0.000000e+00
  %91 = or i1 %89, %90
  %92 = select i1 %91, float %86, float %88
  %93 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 4, i64 0
  %94 = load volatile float* %93, align 4
  %95 = fcmp oge float %92, %94
  %96 = fcmp ueq float %92, 0.000000e+00
  %97 = or i1 %95, %96
  %98 = select i1 %97, float %92, float %94
  %99 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 5, i64 0
  %100 = load volatile float* %99, align 4
  %101 = fcmp oge float %98, %100
  %102 = fcmp ueq float %98, 0.000000e+00
  %103 = or i1 %101, %102
  %104 = select i1 %103, float %98, float %100
  %105 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 0, i64 1, i64 0
  store volatile float %104, float* %105, align 4
  %106 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 6, i64 0
  %107 = load volatile float* %106, align 4
  %108 = fcmp oge float 0xFFF0000000000000, %107
  %109 = select i1 %108, float 0xFFF0000000000000, float %107
  %110 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 7, i64 0
  %111 = load volatile float* %110, align 4
  %112 = fcmp oge float %109, %111
  %113 = fcmp ueq float %109, 0.000000e+00
  %114 = or i1 %112, %113
  %115 = select i1 %114, float %109, float %111
  %116 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 8, i64 0
  %117 = load volatile float* %116, align 4
  %118 = fcmp oge float %115, %117
  %119 = fcmp ueq float %115, 0.000000e+00
  %120 = or i1 %118, %119
  %121 = select i1 %120, float %115, float %117
  %122 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 6, i64 0
  %123 = load volatile float* %122, align 4
  %124 = fcmp oge float %121, %123
  %125 = fcmp ueq float %121, 0.000000e+00
  %126 = or i1 %124, %125
  %127 = select i1 %126, float %121, float %123
  %128 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 7, i64 0
  %129 = load volatile float* %128, align 4
  %130 = fcmp oge float %127, %129
  %131 = fcmp ueq float %127, 0.000000e+00
  %132 = or i1 %130, %131
  %133 = select i1 %132, float %127, float %129
  %134 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 8, i64 0
  %135 = load volatile float* %134, align 4
  %136 = fcmp oge float %133, %135
  %137 = fcmp ueq float %133, 0.000000e+00
  %138 = or i1 %136, %137
  %139 = select i1 %138, float %133, float %135
  %140 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 6, i64 0
  %141 = load volatile float* %140, align 4
  %142 = fcmp oge float %139, %141
  %143 = fcmp ueq float %139, 0.000000e+00
  %144 = or i1 %142, %143
  %145 = select i1 %144, float %139, float %141
  %146 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 7, i64 0
  %147 = load volatile float* %146, align 4
  %148 = fcmp oge float %145, %147
  %149 = fcmp ueq float %145, 0.000000e+00
  %150 = or i1 %148, %149
  %151 = select i1 %150, float %145, float %147
  %152 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 8, i64 0
  %153 = load volatile float* %152, align 4
  %154 = fcmp oge float %151, %153
  %155 = fcmp ueq float %151, 0.000000e+00
  %156 = or i1 %154, %155
  %157 = select i1 %156, float %151, float %153
  %158 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 0, i64 2, i64 0
  store volatile float %157, float* %158, align 4
  %159 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 9, i64 0
  %160 = load volatile float* %159, align 4
  %161 = fcmp oge float 0xFFF0000000000000, %160
  %162 = select i1 %161, float 0xFFF0000000000000, float %160
  %163 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 10, i64 0
  %164 = load volatile float* %163, align 4
  %165 = fcmp oge float %162, %164
  %166 = fcmp ueq float %162, 0.000000e+00
  %167 = or i1 %165, %166
  %168 = select i1 %167, float %162, float %164
  %169 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 11, i64 0
  %170 = load volatile float* %169, align 4
  %171 = fcmp oge float %168, %170
  %172 = fcmp ueq float %168, 0.000000e+00
  %173 = or i1 %171, %172
  %174 = select i1 %173, float %168, float %170
  %175 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 9, i64 0
  %176 = load volatile float* %175, align 4
  %177 = fcmp oge float %174, %176
  %178 = fcmp ueq float %174, 0.000000e+00
  %179 = or i1 %177, %178
  %180 = select i1 %179, float %174, float %176
  %181 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 10, i64 0
  %182 = load volatile float* %181, align 4
  %183 = fcmp oge float %180, %182
  %184 = fcmp ueq float %180, 0.000000e+00
  %185 = or i1 %183, %184
  %186 = select i1 %185, float %180, float %182
  %187 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 11, i64 0
  %188 = load volatile float* %187, align 4
  %189 = fcmp oge float %186, %188
  %190 = fcmp ueq float %186, 0.000000e+00
  %191 = or i1 %189, %190
  %192 = select i1 %191, float %186, float %188
  %193 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 9, i64 0
  %194 = load volatile float* %193, align 4
  %195 = fcmp oge float %192, %194
  %196 = fcmp ueq float %192, 0.000000e+00
  %197 = or i1 %195, %196
  %198 = select i1 %197, float %192, float %194
  %199 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 10, i64 0
  %200 = load volatile float* %199, align 4
  %201 = fcmp oge float %198, %200
  %202 = fcmp ueq float %198, 0.000000e+00
  %203 = or i1 %201, %202
  %204 = select i1 %203, float %198, float %200
  %205 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 11, i64 0
  %206 = load volatile float* %205, align 4
  %207 = fcmp oge float %204, %206
  %208 = fcmp ueq float %204, 0.000000e+00
  %209 = or i1 %207, %208
  %210 = select i1 %209, float %204, float %206
  %211 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 0, i64 3, i64 0
  store volatile float %210, float* %211, align 4
  %212 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 12, i64 0
  %213 = load volatile float* %212, align 4
  %214 = fcmp oge float 0xFFF0000000000000, %213
  %215 = select i1 %214, float 0xFFF0000000000000, float %213
  %216 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 13, i64 0
  %217 = load volatile float* %216, align 4
  %218 = fcmp oge float %215, %217
  %219 = fcmp ueq float %215, 0.000000e+00
  %220 = or i1 %218, %219
  %221 = select i1 %220, float %215, float %217
  %222 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 14, i64 0
  %223 = load volatile float* %222, align 4
  %224 = fcmp oge float %221, %223
  %225 = fcmp ueq float %221, 0.000000e+00
  %226 = or i1 %224, %225
  %227 = select i1 %226, float %221, float %223
  %228 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 12, i64 0
  %229 = load volatile float* %228, align 4
  %230 = fcmp oge float %227, %229
  %231 = fcmp ueq float %227, 0.000000e+00
  %232 = or i1 %230, %231
  %233 = select i1 %232, float %227, float %229
  %234 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 13, i64 0
  %235 = load volatile float* %234, align 4
  %236 = fcmp oge float %233, %235
  %237 = fcmp ueq float %233, 0.000000e+00
  %238 = or i1 %236, %237
  %239 = select i1 %238, float %233, float %235
  %240 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 14, i64 0
  %241 = load volatile float* %240, align 4
  %242 = fcmp oge float %239, %241
  %243 = fcmp ueq float %239, 0.000000e+00
  %244 = or i1 %242, %243
  %245 = select i1 %244, float %239, float %241
  %246 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 12, i64 0
  %247 = load volatile float* %246, align 4
  %248 = fcmp oge float %245, %247
  %249 = fcmp ueq float %245, 0.000000e+00
  %250 = or i1 %248, %249
  %251 = select i1 %250, float %245, float %247
  %252 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 13, i64 0
  %253 = load volatile float* %252, align 4
  %254 = fcmp oge float %251, %253
  %255 = fcmp ueq float %251, 0.000000e+00
  %256 = or i1 %254, %255
  %257 = select i1 %256, float %251, float %253
  %258 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 14, i64 0
  %259 = load volatile float* %258, align 4
  %260 = fcmp oge float %257, %259
  %261 = fcmp ueq float %257, 0.000000e+00
  %262 = or i1 %260, %261
  %263 = select i1 %262, float %257, float %259
  %264 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 0, i64 4, i64 0
  store volatile float %263, float* %264, align 4
  %265 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 15, i64 0
  %266 = load volatile float* %265, align 4
  %267 = fcmp oge float 0xFFF0000000000000, %266
  %268 = select i1 %267, float 0xFFF0000000000000, float %266
  %269 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 16, i64 0
  %270 = load volatile float* %269, align 4
  %271 = fcmp oge float %268, %270
  %272 = fcmp ueq float %268, 0.000000e+00
  %273 = or i1 %271, %272
  %274 = select i1 %273, float %268, float %270
  %275 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 17, i64 0
  %276 = load volatile float* %275, align 4
  %277 = fcmp oge float %274, %276
  %278 = fcmp ueq float %274, 0.000000e+00
  %279 = or i1 %277, %278
  %280 = select i1 %279, float %274, float %276
  %281 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 15, i64 0
  %282 = load volatile float* %281, align 4
  %283 = fcmp oge float %280, %282
  %284 = fcmp ueq float %280, 0.000000e+00
  %285 = or i1 %283, %284
  %286 = select i1 %285, float %280, float %282
  %287 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 16, i64 0
  %288 = load volatile float* %287, align 4
  %289 = fcmp oge float %286, %288
  %290 = fcmp ueq float %286, 0.000000e+00
  %291 = or i1 %289, %290
  %292 = select i1 %291, float %286, float %288
  %293 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 17, i64 0
  %294 = load volatile float* %293, align 4
  %295 = fcmp oge float %292, %294
  %296 = fcmp ueq float %292, 0.000000e+00
  %297 = or i1 %295, %296
  %298 = select i1 %297, float %292, float %294
  %299 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 15, i64 0
  %300 = load volatile float* %299, align 4
  %301 = fcmp oge float %298, %300
  %302 = fcmp ueq float %298, 0.000000e+00
  %303 = or i1 %301, %302
  %304 = select i1 %303, float %298, float %300
  %305 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 16, i64 0
  %306 = load volatile float* %305, align 4
  %307 = fcmp oge float %304, %306
  %308 = fcmp ueq float %304, 0.000000e+00
  %309 = or i1 %307, %308
  %310 = select i1 %309, float %304, float %306
  %311 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 17, i64 0
  %312 = load volatile float* %311, align 4
  %313 = fcmp oge float %310, %312
  %314 = fcmp ueq float %310, 0.000000e+00
  %315 = or i1 %313, %314
  %316 = select i1 %315, float %310, float %312
  %317 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 0, i64 5, i64 0
  store volatile float %316, float* %317, align 4
  %318 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 18, i64 0
  %319 = load volatile float* %318, align 4
  %320 = fcmp oge float 0xFFF0000000000000, %319
  %321 = select i1 %320, float 0xFFF0000000000000, float %319
  %322 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 19, i64 0
  %323 = load volatile float* %322, align 4
  %324 = fcmp oge float %321, %323
  %325 = fcmp ueq float %321, 0.000000e+00
  %326 = or i1 %324, %325
  %327 = select i1 %326, float %321, float %323
  %328 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 20, i64 0
  %329 = load volatile float* %328, align 4
  %330 = fcmp oge float %327, %329
  %331 = fcmp ueq float %327, 0.000000e+00
  %332 = or i1 %330, %331
  %333 = select i1 %332, float %327, float %329
  %334 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 18, i64 0
  %335 = load volatile float* %334, align 4
  %336 = fcmp oge float %333, %335
  %337 = fcmp ueq float %333, 0.000000e+00
  %338 = or i1 %336, %337
  %339 = select i1 %338, float %333, float %335
  %340 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 19, i64 0
  %341 = load volatile float* %340, align 4
  %342 = fcmp oge float %339, %341
  %343 = fcmp ueq float %339, 0.000000e+00
  %344 = or i1 %342, %343
  %345 = select i1 %344, float %339, float %341
  %346 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 20, i64 0
  %347 = load volatile float* %346, align 4
  %348 = fcmp oge float %345, %347
  %349 = fcmp ueq float %345, 0.000000e+00
  %350 = or i1 %348, %349
  %351 = select i1 %350, float %345, float %347
  %352 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 18, i64 0
  %353 = load volatile float* %352, align 4
  %354 = fcmp oge float %351, %353
  %355 = fcmp ueq float %351, 0.000000e+00
  %356 = or i1 %354, %355
  %357 = select i1 %356, float %351, float %353
  %358 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 19, i64 0
  %359 = load volatile float* %358, align 4
  %360 = fcmp oge float %357, %359
  %361 = fcmp ueq float %357, 0.000000e+00
  %362 = or i1 %360, %361
  %363 = select i1 %362, float %357, float %359
  %364 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 20, i64 0
  %365 = load volatile float* %364, align 4
  %366 = fcmp oge float %363, %365
  %367 = fcmp ueq float %363, 0.000000e+00
  %368 = or i1 %366, %367
  %369 = select i1 %368, float %363, float %365
  %370 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 0, i64 6, i64 0
  store volatile float %369, float* %370, align 4
  %371 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 21, i64 0
  %372 = load volatile float* %371, align 4
  %373 = fcmp oge float 0xFFF0000000000000, %372
  %374 = select i1 %373, float 0xFFF0000000000000, float %372
  %375 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 22, i64 0
  %376 = load volatile float* %375, align 4
  %377 = fcmp oge float %374, %376
  %378 = fcmp ueq float %374, 0.000000e+00
  %379 = or i1 %377, %378
  %380 = select i1 %379, float %374, float %376
  %381 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 23, i64 0
  %382 = load volatile float* %381, align 4
  %383 = fcmp oge float %380, %382
  %384 = fcmp ueq float %380, 0.000000e+00
  %385 = or i1 %383, %384
  %386 = select i1 %385, float %380, float %382
  %387 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 21, i64 0
  %388 = load volatile float* %387, align 4
  %389 = fcmp oge float %386, %388
  %390 = fcmp ueq float %386, 0.000000e+00
  %391 = or i1 %389, %390
  %392 = select i1 %391, float %386, float %388
  %393 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 22, i64 0
  %394 = load volatile float* %393, align 4
  %395 = fcmp oge float %392, %394
  %396 = fcmp ueq float %392, 0.000000e+00
  %397 = or i1 %395, %396
  %398 = select i1 %397, float %392, float %394
  %399 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 23, i64 0
  %400 = load volatile float* %399, align 4
  %401 = fcmp oge float %398, %400
  %402 = fcmp ueq float %398, 0.000000e+00
  %403 = or i1 %401, %402
  %404 = select i1 %403, float %398, float %400
  %405 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 21, i64 0
  %406 = load volatile float* %405, align 4
  %407 = fcmp oge float %404, %406
  %408 = fcmp ueq float %404, 0.000000e+00
  %409 = or i1 %407, %408
  %410 = select i1 %409, float %404, float %406
  %411 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 22, i64 0
  %412 = load volatile float* %411, align 4
  %413 = fcmp oge float %410, %412
  %414 = fcmp ueq float %410, 0.000000e+00
  %415 = or i1 %413, %414
  %416 = select i1 %415, float %410, float %412
  %417 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 23, i64 0
  %418 = load volatile float* %417, align 4
  %419 = fcmp oge float %416, %418
  %420 = fcmp ueq float %416, 0.000000e+00
  %421 = or i1 %419, %420
  %422 = select i1 %421, float %416, float %418
  %423 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 0, i64 7, i64 0
  store volatile float %422, float* %423, align 4
  %424 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 24, i64 0
  %425 = load volatile float* %424, align 4
  %426 = fcmp oge float 0xFFF0000000000000, %425
  %427 = select i1 %426, float 0xFFF0000000000000, float %425
  %428 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 25, i64 0
  %429 = load volatile float* %428, align 4
  %430 = fcmp oge float %427, %429
  %431 = fcmp ueq float %427, 0.000000e+00
  %432 = or i1 %430, %431
  %433 = select i1 %432, float %427, float %429
  %434 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 26, i64 0
  %435 = load volatile float* %434, align 4
  %436 = fcmp oge float %433, %435
  %437 = fcmp ueq float %433, 0.000000e+00
  %438 = or i1 %436, %437
  %439 = select i1 %438, float %433, float %435
  %440 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 24, i64 0
  %441 = load volatile float* %440, align 4
  %442 = fcmp oge float %439, %441
  %443 = fcmp ueq float %439, 0.000000e+00
  %444 = or i1 %442, %443
  %445 = select i1 %444, float %439, float %441
  %446 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 25, i64 0
  %447 = load volatile float* %446, align 4
  %448 = fcmp oge float %445, %447
  %449 = fcmp ueq float %445, 0.000000e+00
  %450 = or i1 %448, %449
  %451 = select i1 %450, float %445, float %447
  %452 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 26, i64 0
  %453 = load volatile float* %452, align 4
  %454 = fcmp oge float %451, %453
  %455 = fcmp ueq float %451, 0.000000e+00
  %456 = or i1 %454, %455
  %457 = select i1 %456, float %451, float %453
  %458 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 24, i64 0
  %459 = load volatile float* %458, align 4
  %460 = fcmp oge float %457, %459
  %461 = fcmp ueq float %457, 0.000000e+00
  %462 = or i1 %460, %461
  %463 = select i1 %462, float %457, float %459
  %464 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 25, i64 0
  %465 = load volatile float* %464, align 4
  %466 = fcmp oge float %463, %465
  %467 = fcmp ueq float %463, 0.000000e+00
  %468 = or i1 %466, %467
  %469 = select i1 %468, float %463, float %465
  %470 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 26, i64 0
  %471 = load volatile float* %470, align 4
  %472 = fcmp oge float %469, %471
  %473 = fcmp ueq float %469, 0.000000e+00
  %474 = or i1 %472, %473
  %475 = select i1 %474, float %469, float %471
  %476 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 0, i64 8, i64 0
  store volatile float %475, float* %476, align 4
  %477 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 27, i64 0
  %478 = load volatile float* %477, align 4
  %479 = fcmp oge float 0xFFF0000000000000, %478
  %480 = select i1 %479, float 0xFFF0000000000000, float %478
  %481 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 28, i64 0
  %482 = load volatile float* %481, align 4
  %483 = fcmp oge float %480, %482
  %484 = fcmp ueq float %480, 0.000000e+00
  %485 = or i1 %483, %484
  %486 = select i1 %485, float %480, float %482
  %487 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 29, i64 0
  %488 = load volatile float* %487, align 4
  %489 = fcmp oge float %486, %488
  %490 = fcmp ueq float %486, 0.000000e+00
  %491 = or i1 %489, %490
  %492 = select i1 %491, float %486, float %488
  %493 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 27, i64 0
  %494 = load volatile float* %493, align 4
  %495 = fcmp oge float %492, %494
  %496 = fcmp ueq float %492, 0.000000e+00
  %497 = or i1 %495, %496
  %498 = select i1 %497, float %492, float %494
  %499 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 28, i64 0
  %500 = load volatile float* %499, align 4
  %501 = fcmp oge float %498, %500
  %502 = fcmp ueq float %498, 0.000000e+00
  %503 = or i1 %501, %502
  %504 = select i1 %503, float %498, float %500
  %505 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 29, i64 0
  %506 = load volatile float* %505, align 4
  %507 = fcmp oge float %504, %506
  %508 = fcmp ueq float %504, 0.000000e+00
  %509 = or i1 %507, %508
  %510 = select i1 %509, float %504, float %506
  %511 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 27, i64 0
  %512 = load volatile float* %511, align 4
  %513 = fcmp oge float %510, %512
  %514 = fcmp ueq float %510, 0.000000e+00
  %515 = or i1 %513, %514
  %516 = select i1 %515, float %510, float %512
  %517 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 28, i64 0
  %518 = load volatile float* %517, align 4
  %519 = fcmp oge float %516, %518
  %520 = fcmp ueq float %516, 0.000000e+00
  %521 = or i1 %519, %520
  %522 = select i1 %521, float %516, float %518
  %523 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 29, i64 0
  %524 = load volatile float* %523, align 4
  %525 = fcmp oge float %522, %524
  %526 = fcmp ueq float %522, 0.000000e+00
  %527 = or i1 %525, %526
  %528 = select i1 %527, float %522, float %524
  %529 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 0, i64 9, i64 0
  store volatile float %528, float* %529, align 4
  %530 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 0, i64 0
  %531 = load volatile float* %530, align 4
  %532 = fcmp oge float 0xFFF0000000000000, %531
  %533 = select i1 %532, float 0xFFF0000000000000, float %531
  %534 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 1, i64 0
  %535 = load volatile float* %534, align 4
  %536 = fcmp oge float %533, %535
  %537 = fcmp ueq float %533, 0.000000e+00
  %538 = or i1 %536, %537
  %539 = select i1 %538, float %533, float %535
  %540 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 2, i64 0
  %541 = load volatile float* %540, align 4
  %542 = fcmp oge float %539, %541
  %543 = fcmp ueq float %539, 0.000000e+00
  %544 = or i1 %542, %543
  %545 = select i1 %544, float %539, float %541
  %546 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 0, i64 0
  %547 = load volatile float* %546, align 4
  %548 = fcmp oge float %545, %547
  %549 = fcmp ueq float %545, 0.000000e+00
  %550 = or i1 %548, %549
  %551 = select i1 %550, float %545, float %547
  %552 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 1, i64 0
  %553 = load volatile float* %552, align 4
  %554 = fcmp oge float %551, %553
  %555 = fcmp ueq float %551, 0.000000e+00
  %556 = or i1 %554, %555
  %557 = select i1 %556, float %551, float %553
  %558 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 2, i64 0
  %559 = load volatile float* %558, align 4
  %560 = fcmp oge float %557, %559
  %561 = fcmp ueq float %557, 0.000000e+00
  %562 = or i1 %560, %561
  %563 = select i1 %562, float %557, float %559
  %564 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 0, i64 0
  %565 = load volatile float* %564, align 4
  %566 = fcmp oge float %563, %565
  %567 = fcmp ueq float %563, 0.000000e+00
  %568 = or i1 %566, %567
  %569 = select i1 %568, float %563, float %565
  %570 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 1, i64 0
  %571 = load volatile float* %570, align 4
  %572 = fcmp oge float %569, %571
  %573 = fcmp ueq float %569, 0.000000e+00
  %574 = or i1 %572, %573
  %575 = select i1 %574, float %569, float %571
  %576 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 2, i64 0
  %577 = load volatile float* %576, align 4
  %578 = fcmp oge float %575, %577
  %579 = fcmp ueq float %575, 0.000000e+00
  %580 = or i1 %578, %579
  %581 = select i1 %580, float %575, float %577
  %582 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 1, i64 0, i64 0
  store volatile float %581, float* %582, align 4
  %583 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 3, i64 0
  %584 = load volatile float* %583, align 4
  %585 = fcmp oge float 0xFFF0000000000000, %584
  %586 = select i1 %585, float 0xFFF0000000000000, float %584
  %587 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 4, i64 0
  %588 = load volatile float* %587, align 4
  %589 = fcmp oge float %586, %588
  %590 = fcmp ueq float %586, 0.000000e+00
  %591 = or i1 %589, %590
  %592 = select i1 %591, float %586, float %588
  %593 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 5, i64 0
  %594 = load volatile float* %593, align 4
  %595 = fcmp oge float %592, %594
  %596 = fcmp ueq float %592, 0.000000e+00
  %597 = or i1 %595, %596
  %598 = select i1 %597, float %592, float %594
  %599 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 3, i64 0
  %600 = load volatile float* %599, align 4
  %601 = fcmp oge float %598, %600
  %602 = fcmp ueq float %598, 0.000000e+00
  %603 = or i1 %601, %602
  %604 = select i1 %603, float %598, float %600
  %605 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 4, i64 0
  %606 = load volatile float* %605, align 4
  %607 = fcmp oge float %604, %606
  %608 = fcmp ueq float %604, 0.000000e+00
  %609 = or i1 %607, %608
  %610 = select i1 %609, float %604, float %606
  %611 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 5, i64 0
  %612 = load volatile float* %611, align 4
  %613 = fcmp oge float %610, %612
  %614 = fcmp ueq float %610, 0.000000e+00
  %615 = or i1 %613, %614
  %616 = select i1 %615, float %610, float %612
  %617 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 3, i64 0
  %618 = load volatile float* %617, align 4
  %619 = fcmp oge float %616, %618
  %620 = fcmp ueq float %616, 0.000000e+00
  %621 = or i1 %619, %620
  %622 = select i1 %621, float %616, float %618
  %623 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 4, i64 0
  %624 = load volatile float* %623, align 4
  %625 = fcmp oge float %622, %624
  %626 = fcmp ueq float %622, 0.000000e+00
  %627 = or i1 %625, %626
  %628 = select i1 %627, float %622, float %624
  %629 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 5, i64 0
  %630 = load volatile float* %629, align 4
  %631 = fcmp oge float %628, %630
  %632 = fcmp ueq float %628, 0.000000e+00
  %633 = or i1 %631, %632
  %634 = select i1 %633, float %628, float %630
  %635 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 1, i64 1, i64 0
  store volatile float %634, float* %635, align 4
  %636 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 6, i64 0
  %637 = load volatile float* %636, align 4
  %638 = fcmp oge float 0xFFF0000000000000, %637
  %639 = select i1 %638, float 0xFFF0000000000000, float %637
  %640 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 7, i64 0
  %641 = load volatile float* %640, align 4
  %642 = fcmp oge float %639, %641
  %643 = fcmp ueq float %639, 0.000000e+00
  %644 = or i1 %642, %643
  %645 = select i1 %644, float %639, float %641
  %646 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 8, i64 0
  %647 = load volatile float* %646, align 4
  %648 = fcmp oge float %645, %647
  %649 = fcmp ueq float %645, 0.000000e+00
  %650 = or i1 %648, %649
  %651 = select i1 %650, float %645, float %647
  %652 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 6, i64 0
  %653 = load volatile float* %652, align 4
  %654 = fcmp oge float %651, %653
  %655 = fcmp ueq float %651, 0.000000e+00
  %656 = or i1 %654, %655
  %657 = select i1 %656, float %651, float %653
  %658 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 7, i64 0
  %659 = load volatile float* %658, align 4
  %660 = fcmp oge float %657, %659
  %661 = fcmp ueq float %657, 0.000000e+00
  %662 = or i1 %660, %661
  %663 = select i1 %662, float %657, float %659
  %664 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 8, i64 0
  %665 = load volatile float* %664, align 4
  %666 = fcmp oge float %663, %665
  %667 = fcmp ueq float %663, 0.000000e+00
  %668 = or i1 %666, %667
  %669 = select i1 %668, float %663, float %665
  %670 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 6, i64 0
  %671 = load volatile float* %670, align 4
  %672 = fcmp oge float %669, %671
  %673 = fcmp ueq float %669, 0.000000e+00
  %674 = or i1 %672, %673
  %675 = select i1 %674, float %669, float %671
  %676 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 7, i64 0
  %677 = load volatile float* %676, align 4
  %678 = fcmp oge float %675, %677
  %679 = fcmp ueq float %675, 0.000000e+00
  %680 = or i1 %678, %679
  %681 = select i1 %680, float %675, float %677
  %682 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 8, i64 0
  %683 = load volatile float* %682, align 4
  %684 = fcmp oge float %681, %683
  %685 = fcmp ueq float %681, 0.000000e+00
  %686 = or i1 %684, %685
  %687 = select i1 %686, float %681, float %683
  %688 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 1, i64 2, i64 0
  store volatile float %687, float* %688, align 4
  %689 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 9, i64 0
  %690 = load volatile float* %689, align 4
  %691 = fcmp oge float 0xFFF0000000000000, %690
  %692 = select i1 %691, float 0xFFF0000000000000, float %690
  %693 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 10, i64 0
  %694 = load volatile float* %693, align 4
  %695 = fcmp oge float %692, %694
  %696 = fcmp ueq float %692, 0.000000e+00
  %697 = or i1 %695, %696
  %698 = select i1 %697, float %692, float %694
  %699 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 11, i64 0
  %700 = load volatile float* %699, align 4
  %701 = fcmp oge float %698, %700
  %702 = fcmp ueq float %698, 0.000000e+00
  %703 = or i1 %701, %702
  %704 = select i1 %703, float %698, float %700
  %705 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 9, i64 0
  %706 = load volatile float* %705, align 4
  %707 = fcmp oge float %704, %706
  %708 = fcmp ueq float %704, 0.000000e+00
  %709 = or i1 %707, %708
  %710 = select i1 %709, float %704, float %706
  %711 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 10, i64 0
  %712 = load volatile float* %711, align 4
  %713 = fcmp oge float %710, %712
  %714 = fcmp ueq float %710, 0.000000e+00
  %715 = or i1 %713, %714
  %716 = select i1 %715, float %710, float %712
  %717 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 11, i64 0
  %718 = load volatile float* %717, align 4
  %719 = fcmp oge float %716, %718
  %720 = fcmp ueq float %716, 0.000000e+00
  %721 = or i1 %719, %720
  %722 = select i1 %721, float %716, float %718
  %723 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 9, i64 0
  %724 = load volatile float* %723, align 4
  %725 = fcmp oge float %722, %724
  %726 = fcmp ueq float %722, 0.000000e+00
  %727 = or i1 %725, %726
  %728 = select i1 %727, float %722, float %724
  %729 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 10, i64 0
  %730 = load volatile float* %729, align 4
  %731 = fcmp oge float %728, %730
  %732 = fcmp ueq float %728, 0.000000e+00
  %733 = or i1 %731, %732
  %734 = select i1 %733, float %728, float %730
  %735 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 11, i64 0
  %736 = load volatile float* %735, align 4
  %737 = fcmp oge float %734, %736
  %738 = fcmp ueq float %734, 0.000000e+00
  %739 = or i1 %737, %738
  %740 = select i1 %739, float %734, float %736
  %741 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 1, i64 3, i64 0
  store volatile float %740, float* %741, align 4
  %742 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 12, i64 0
  %743 = load volatile float* %742, align 4
  %744 = fcmp oge float 0xFFF0000000000000, %743
  %745 = select i1 %744, float 0xFFF0000000000000, float %743
  %746 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 13, i64 0
  %747 = load volatile float* %746, align 4
  %748 = fcmp oge float %745, %747
  %749 = fcmp ueq float %745, 0.000000e+00
  %750 = or i1 %748, %749
  %751 = select i1 %750, float %745, float %747
  %752 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 14, i64 0
  %753 = load volatile float* %752, align 4
  %754 = fcmp oge float %751, %753
  %755 = fcmp ueq float %751, 0.000000e+00
  %756 = or i1 %754, %755
  %757 = select i1 %756, float %751, float %753
  %758 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 12, i64 0
  %759 = load volatile float* %758, align 4
  %760 = fcmp oge float %757, %759
  %761 = fcmp ueq float %757, 0.000000e+00
  %762 = or i1 %760, %761
  %763 = select i1 %762, float %757, float %759
  %764 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 13, i64 0
  %765 = load volatile float* %764, align 4
  %766 = fcmp oge float %763, %765
  %767 = fcmp ueq float %763, 0.000000e+00
  %768 = or i1 %766, %767
  %769 = select i1 %768, float %763, float %765
  %770 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 14, i64 0
  %771 = load volatile float* %770, align 4
  %772 = fcmp oge float %769, %771
  %773 = fcmp ueq float %769, 0.000000e+00
  %774 = or i1 %772, %773
  %775 = select i1 %774, float %769, float %771
  %776 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 12, i64 0
  %777 = load volatile float* %776, align 4
  %778 = fcmp oge float %775, %777
  %779 = fcmp ueq float %775, 0.000000e+00
  %780 = or i1 %778, %779
  %781 = select i1 %780, float %775, float %777
  %782 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 13, i64 0
  %783 = load volatile float* %782, align 4
  %784 = fcmp oge float %781, %783
  %785 = fcmp ueq float %781, 0.000000e+00
  %786 = or i1 %784, %785
  %787 = select i1 %786, float %781, float %783
  %788 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 14, i64 0
  %789 = load volatile float* %788, align 4
  %790 = fcmp oge float %787, %789
  %791 = fcmp ueq float %787, 0.000000e+00
  %792 = or i1 %790, %791
  %793 = select i1 %792, float %787, float %789
  %794 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 1, i64 4, i64 0
  store volatile float %793, float* %794, align 4
  %795 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 15, i64 0
  %796 = load volatile float* %795, align 4
  %797 = fcmp oge float 0xFFF0000000000000, %796
  %798 = select i1 %797, float 0xFFF0000000000000, float %796
  %799 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 16, i64 0
  %800 = load volatile float* %799, align 4
  %801 = fcmp oge float %798, %800
  %802 = fcmp ueq float %798, 0.000000e+00
  %803 = or i1 %801, %802
  %804 = select i1 %803, float %798, float %800
  %805 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 17, i64 0
  %806 = load volatile float* %805, align 4
  %807 = fcmp oge float %804, %806
  %808 = fcmp ueq float %804, 0.000000e+00
  %809 = or i1 %807, %808
  %810 = select i1 %809, float %804, float %806
  %811 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 15, i64 0
  %812 = load volatile float* %811, align 4
  %813 = fcmp oge float %810, %812
  %814 = fcmp ueq float %810, 0.000000e+00
  %815 = or i1 %813, %814
  %816 = select i1 %815, float %810, float %812
  %817 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 16, i64 0
  %818 = load volatile float* %817, align 4
  %819 = fcmp oge float %816, %818
  %820 = fcmp ueq float %816, 0.000000e+00
  %821 = or i1 %819, %820
  %822 = select i1 %821, float %816, float %818
  %823 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 17, i64 0
  %824 = load volatile float* %823, align 4
  %825 = fcmp oge float %822, %824
  %826 = fcmp ueq float %822, 0.000000e+00
  %827 = or i1 %825, %826
  %828 = select i1 %827, float %822, float %824
  %829 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 15, i64 0
  %830 = load volatile float* %829, align 4
  %831 = fcmp oge float %828, %830
  %832 = fcmp ueq float %828, 0.000000e+00
  %833 = or i1 %831, %832
  %834 = select i1 %833, float %828, float %830
  %835 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 16, i64 0
  %836 = load volatile float* %835, align 4
  %837 = fcmp oge float %834, %836
  %838 = fcmp ueq float %834, 0.000000e+00
  %839 = or i1 %837, %838
  %840 = select i1 %839, float %834, float %836
  %841 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 17, i64 0
  %842 = load volatile float* %841, align 4
  %843 = fcmp oge float %840, %842
  %844 = fcmp ueq float %840, 0.000000e+00
  %845 = or i1 %843, %844
  %846 = select i1 %845, float %840, float %842
  %847 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 1, i64 5, i64 0
  store volatile float %846, float* %847, align 4
  %848 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 18, i64 0
  %849 = load volatile float* %848, align 4
  %850 = fcmp oge float 0xFFF0000000000000, %849
  %851 = select i1 %850, float 0xFFF0000000000000, float %849
  %852 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 19, i64 0
  %853 = load volatile float* %852, align 4
  %854 = fcmp oge float %851, %853
  %855 = fcmp ueq float %851, 0.000000e+00
  %856 = or i1 %854, %855
  %857 = select i1 %856, float %851, float %853
  %858 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 20, i64 0
  %859 = load volatile float* %858, align 4
  %860 = fcmp oge float %857, %859
  %861 = fcmp ueq float %857, 0.000000e+00
  %862 = or i1 %860, %861
  %863 = select i1 %862, float %857, float %859
  %864 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 18, i64 0
  %865 = load volatile float* %864, align 4
  %866 = fcmp oge float %863, %865
  %867 = fcmp ueq float %863, 0.000000e+00
  %868 = or i1 %866, %867
  %869 = select i1 %868, float %863, float %865
  %870 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 19, i64 0
  %871 = load volatile float* %870, align 4
  %872 = fcmp oge float %869, %871
  %873 = fcmp ueq float %869, 0.000000e+00
  %874 = or i1 %872, %873
  %875 = select i1 %874, float %869, float %871
  %876 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 20, i64 0
  %877 = load volatile float* %876, align 4
  %878 = fcmp oge float %875, %877
  %879 = fcmp ueq float %875, 0.000000e+00
  %880 = or i1 %878, %879
  %881 = select i1 %880, float %875, float %877
  %882 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 18, i64 0
  %883 = load volatile float* %882, align 4
  %884 = fcmp oge float %881, %883
  %885 = fcmp ueq float %881, 0.000000e+00
  %886 = or i1 %884, %885
  %887 = select i1 %886, float %881, float %883
  %888 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 19, i64 0
  %889 = load volatile float* %888, align 4
  %890 = fcmp oge float %887, %889
  %891 = fcmp ueq float %887, 0.000000e+00
  %892 = or i1 %890, %891
  %893 = select i1 %892, float %887, float %889
  %894 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 20, i64 0
  %895 = load volatile float* %894, align 4
  %896 = fcmp oge float %893, %895
  %897 = fcmp ueq float %893, 0.000000e+00
  %898 = or i1 %896, %897
  %899 = select i1 %898, float %893, float %895
  %900 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 1, i64 6, i64 0
  store volatile float %899, float* %900, align 4
  %901 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 21, i64 0
  %902 = load volatile float* %901, align 4
  %903 = fcmp oge float 0xFFF0000000000000, %902
  %904 = select i1 %903, float 0xFFF0000000000000, float %902
  %905 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 22, i64 0
  %906 = load volatile float* %905, align 4
  %907 = fcmp oge float %904, %906
  %908 = fcmp ueq float %904, 0.000000e+00
  %909 = or i1 %907, %908
  %910 = select i1 %909, float %904, float %906
  %911 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 23, i64 0
  %912 = load volatile float* %911, align 4
  %913 = fcmp oge float %910, %912
  %914 = fcmp ueq float %910, 0.000000e+00
  %915 = or i1 %913, %914
  %916 = select i1 %915, float %910, float %912
  %917 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 21, i64 0
  %918 = load volatile float* %917, align 4
  %919 = fcmp oge float %916, %918
  %920 = fcmp ueq float %916, 0.000000e+00
  %921 = or i1 %919, %920
  %922 = select i1 %921, float %916, float %918
  %923 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 22, i64 0
  %924 = load volatile float* %923, align 4
  %925 = fcmp oge float %922, %924
  %926 = fcmp ueq float %922, 0.000000e+00
  %927 = or i1 %925, %926
  %928 = select i1 %927, float %922, float %924
  %929 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 23, i64 0
  %930 = load volatile float* %929, align 4
  %931 = fcmp oge float %928, %930
  %932 = fcmp ueq float %928, 0.000000e+00
  %933 = or i1 %931, %932
  %934 = select i1 %933, float %928, float %930
  %935 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 21, i64 0
  %936 = load volatile float* %935, align 4
  %937 = fcmp oge float %934, %936
  %938 = fcmp ueq float %934, 0.000000e+00
  %939 = or i1 %937, %938
  %940 = select i1 %939, float %934, float %936
  %941 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 22, i64 0
  %942 = load volatile float* %941, align 4
  %943 = fcmp oge float %940, %942
  %944 = fcmp ueq float %940, 0.000000e+00
  %945 = or i1 %943, %944
  %946 = select i1 %945, float %940, float %942
  %947 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 23, i64 0
  %948 = load volatile float* %947, align 4
  %949 = fcmp oge float %946, %948
  %950 = fcmp ueq float %946, 0.000000e+00
  %951 = or i1 %949, %950
  %952 = select i1 %951, float %946, float %948
  %953 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 1, i64 7, i64 0
  store volatile float %952, float* %953, align 4
  %954 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 24, i64 0
  %955 = load volatile float* %954, align 4
  %956 = fcmp oge float 0xFFF0000000000000, %955
  %957 = select i1 %956, float 0xFFF0000000000000, float %955
  %958 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 25, i64 0
  %959 = load volatile float* %958, align 4
  %960 = fcmp oge float %957, %959
  %961 = fcmp ueq float %957, 0.000000e+00
  %962 = or i1 %960, %961
  %963 = select i1 %962, float %957, float %959
  %964 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 26, i64 0
  %965 = load volatile float* %964, align 4
  %966 = fcmp oge float %963, %965
  %967 = fcmp ueq float %963, 0.000000e+00
  %968 = or i1 %966, %967
  %969 = select i1 %968, float %963, float %965
  %970 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 24, i64 0
  %971 = load volatile float* %970, align 4
  %972 = fcmp oge float %969, %971
  %973 = fcmp ueq float %969, 0.000000e+00
  %974 = or i1 %972, %973
  %975 = select i1 %974, float %969, float %971
  %976 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 25, i64 0
  %977 = load volatile float* %976, align 4
  %978 = fcmp oge float %975, %977
  %979 = fcmp ueq float %975, 0.000000e+00
  %980 = or i1 %978, %979
  %981 = select i1 %980, float %975, float %977
  %982 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 26, i64 0
  %983 = load volatile float* %982, align 4
  %984 = fcmp oge float %981, %983
  %985 = fcmp ueq float %981, 0.000000e+00
  %986 = or i1 %984, %985
  %987 = select i1 %986, float %981, float %983
  %988 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 24, i64 0
  %989 = load volatile float* %988, align 4
  %990 = fcmp oge float %987, %989
  %991 = fcmp ueq float %987, 0.000000e+00
  %992 = or i1 %990, %991
  %993 = select i1 %992, float %987, float %989
  %994 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 25, i64 0
  %995 = load volatile float* %994, align 4
  %996 = fcmp oge float %993, %995
  %997 = fcmp ueq float %993, 0.000000e+00
  %998 = or i1 %996, %997
  %999 = select i1 %998, float %993, float %995
  %1000 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 26, i64 0
  %1001 = load volatile float* %1000, align 4
  %1002 = fcmp oge float %999, %1001
  %1003 = fcmp ueq float %999, 0.000000e+00
  %1004 = or i1 %1002, %1003
  %1005 = select i1 %1004, float %999, float %1001
  %1006 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 1, i64 8, i64 0
  store volatile float %1005, float* %1006, align 4
  %1007 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 27, i64 0
  %1008 = load volatile float* %1007, align 4
  %1009 = fcmp oge float 0xFFF0000000000000, %1008
  %1010 = select i1 %1009, float 0xFFF0000000000000, float %1008
  %1011 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 28, i64 0
  %1012 = load volatile float* %1011, align 4
  %1013 = fcmp oge float %1010, %1012
  %1014 = fcmp ueq float %1010, 0.000000e+00
  %1015 = or i1 %1013, %1014
  %1016 = select i1 %1015, float %1010, float %1012
  %1017 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 29, i64 0
  %1018 = load volatile float* %1017, align 4
  %1019 = fcmp oge float %1016, %1018
  %1020 = fcmp ueq float %1016, 0.000000e+00
  %1021 = or i1 %1019, %1020
  %1022 = select i1 %1021, float %1016, float %1018
  %1023 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 27, i64 0
  %1024 = load volatile float* %1023, align 4
  %1025 = fcmp oge float %1022, %1024
  %1026 = fcmp ueq float %1022, 0.000000e+00
  %1027 = or i1 %1025, %1026
  %1028 = select i1 %1027, float %1022, float %1024
  %1029 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 28, i64 0
  %1030 = load volatile float* %1029, align 4
  %1031 = fcmp oge float %1028, %1030
  %1032 = fcmp ueq float %1028, 0.000000e+00
  %1033 = or i1 %1031, %1032
  %1034 = select i1 %1033, float %1028, float %1030
  %1035 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 29, i64 0
  %1036 = load volatile float* %1035, align 4
  %1037 = fcmp oge float %1034, %1036
  %1038 = fcmp ueq float %1034, 0.000000e+00
  %1039 = or i1 %1037, %1038
  %1040 = select i1 %1039, float %1034, float %1036
  %1041 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 27, i64 0
  %1042 = load volatile float* %1041, align 4
  %1043 = fcmp oge float %1040, %1042
  %1044 = fcmp ueq float %1040, 0.000000e+00
  %1045 = or i1 %1043, %1044
  %1046 = select i1 %1045, float %1040, float %1042
  %1047 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 28, i64 0
  %1048 = load volatile float* %1047, align 4
  %1049 = fcmp oge float %1046, %1048
  %1050 = fcmp ueq float %1046, 0.000000e+00
  %1051 = or i1 %1049, %1050
  %1052 = select i1 %1051, float %1046, float %1048
  %1053 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 29, i64 0
  %1054 = load volatile float* %1053, align 4
  %1055 = fcmp oge float %1052, %1054
  %1056 = fcmp ueq float %1052, 0.000000e+00
  %1057 = or i1 %1055, %1056
  %1058 = select i1 %1057, float %1052, float %1054
  %1059 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 1, i64 9, i64 0
  store volatile float %1058, float* %1059, align 4
  %1060 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 0, i64 0
  %1061 = load volatile float* %1060, align 4
  %1062 = fcmp oge float 0xFFF0000000000000, %1061
  %1063 = select i1 %1062, float 0xFFF0000000000000, float %1061
  %1064 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 1, i64 0
  %1065 = load volatile float* %1064, align 4
  %1066 = fcmp oge float %1063, %1065
  %1067 = fcmp ueq float %1063, 0.000000e+00
  %1068 = or i1 %1066, %1067
  %1069 = select i1 %1068, float %1063, float %1065
  %1070 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 2, i64 0
  %1071 = load volatile float* %1070, align 4
  %1072 = fcmp oge float %1069, %1071
  %1073 = fcmp ueq float %1069, 0.000000e+00
  %1074 = or i1 %1072, %1073
  %1075 = select i1 %1074, float %1069, float %1071
  %1076 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 0, i64 0
  %1077 = load volatile float* %1076, align 4
  %1078 = fcmp oge float %1075, %1077
  %1079 = fcmp ueq float %1075, 0.000000e+00
  %1080 = or i1 %1078, %1079
  %1081 = select i1 %1080, float %1075, float %1077
  %1082 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 1, i64 0
  %1083 = load volatile float* %1082, align 4
  %1084 = fcmp oge float %1081, %1083
  %1085 = fcmp ueq float %1081, 0.000000e+00
  %1086 = or i1 %1084, %1085
  %1087 = select i1 %1086, float %1081, float %1083
  %1088 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 2, i64 0
  %1089 = load volatile float* %1088, align 4
  %1090 = fcmp oge float %1087, %1089
  %1091 = fcmp ueq float %1087, 0.000000e+00
  %1092 = or i1 %1090, %1091
  %1093 = select i1 %1092, float %1087, float %1089
  %1094 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 0, i64 0
  %1095 = load volatile float* %1094, align 4
  %1096 = fcmp oge float %1093, %1095
  %1097 = fcmp ueq float %1093, 0.000000e+00
  %1098 = or i1 %1096, %1097
  %1099 = select i1 %1098, float %1093, float %1095
  %1100 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 1, i64 0
  %1101 = load volatile float* %1100, align 4
  %1102 = fcmp oge float %1099, %1101
  %1103 = fcmp ueq float %1099, 0.000000e+00
  %1104 = or i1 %1102, %1103
  %1105 = select i1 %1104, float %1099, float %1101
  %1106 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 2, i64 0
  %1107 = load volatile float* %1106, align 4
  %1108 = fcmp oge float %1105, %1107
  %1109 = fcmp ueq float %1105, 0.000000e+00
  %1110 = or i1 %1108, %1109
  %1111 = select i1 %1110, float %1105, float %1107
  %1112 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 2, i64 0, i64 0
  store volatile float %1111, float* %1112, align 4
  %1113 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 3, i64 0
  %1114 = load volatile float* %1113, align 4
  %1115 = fcmp oge float 0xFFF0000000000000, %1114
  %1116 = select i1 %1115, float 0xFFF0000000000000, float %1114
  %1117 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 4, i64 0
  %1118 = load volatile float* %1117, align 4
  %1119 = fcmp oge float %1116, %1118
  %1120 = fcmp ueq float %1116, 0.000000e+00
  %1121 = or i1 %1119, %1120
  %1122 = select i1 %1121, float %1116, float %1118
  %1123 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 5, i64 0
  %1124 = load volatile float* %1123, align 4
  %1125 = fcmp oge float %1122, %1124
  %1126 = fcmp ueq float %1122, 0.000000e+00
  %1127 = or i1 %1125, %1126
  %1128 = select i1 %1127, float %1122, float %1124
  %1129 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 3, i64 0
  %1130 = load volatile float* %1129, align 4
  %1131 = fcmp oge float %1128, %1130
  %1132 = fcmp ueq float %1128, 0.000000e+00
  %1133 = or i1 %1131, %1132
  %1134 = select i1 %1133, float %1128, float %1130
  %1135 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 4, i64 0
  %1136 = load volatile float* %1135, align 4
  %1137 = fcmp oge float %1134, %1136
  %1138 = fcmp ueq float %1134, 0.000000e+00
  %1139 = or i1 %1137, %1138
  %1140 = select i1 %1139, float %1134, float %1136
  %1141 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 5, i64 0
  %1142 = load volatile float* %1141, align 4
  %1143 = fcmp oge float %1140, %1142
  %1144 = fcmp ueq float %1140, 0.000000e+00
  %1145 = or i1 %1143, %1144
  %1146 = select i1 %1145, float %1140, float %1142
  %1147 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 3, i64 0
  %1148 = load volatile float* %1147, align 4
  %1149 = fcmp oge float %1146, %1148
  %1150 = fcmp ueq float %1146, 0.000000e+00
  %1151 = or i1 %1149, %1150
  %1152 = select i1 %1151, float %1146, float %1148
  %1153 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 4, i64 0
  %1154 = load volatile float* %1153, align 4
  %1155 = fcmp oge float %1152, %1154
  %1156 = fcmp ueq float %1152, 0.000000e+00
  %1157 = or i1 %1155, %1156
  %1158 = select i1 %1157, float %1152, float %1154
  %1159 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 5, i64 0
  %1160 = load volatile float* %1159, align 4
  %1161 = fcmp oge float %1158, %1160
  %1162 = fcmp ueq float %1158, 0.000000e+00
  %1163 = or i1 %1161, %1162
  %1164 = select i1 %1163, float %1158, float %1160
  %1165 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 2, i64 1, i64 0
  store volatile float %1164, float* %1165, align 4
  %1166 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 6, i64 0
  %1167 = load volatile float* %1166, align 4
  %1168 = fcmp oge float 0xFFF0000000000000, %1167
  %1169 = select i1 %1168, float 0xFFF0000000000000, float %1167
  %1170 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 7, i64 0
  %1171 = load volatile float* %1170, align 4
  %1172 = fcmp oge float %1169, %1171
  %1173 = fcmp ueq float %1169, 0.000000e+00
  %1174 = or i1 %1172, %1173
  %1175 = select i1 %1174, float %1169, float %1171
  %1176 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 8, i64 0
  %1177 = load volatile float* %1176, align 4
  %1178 = fcmp oge float %1175, %1177
  %1179 = fcmp ueq float %1175, 0.000000e+00
  %1180 = or i1 %1178, %1179
  %1181 = select i1 %1180, float %1175, float %1177
  %1182 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 6, i64 0
  %1183 = load volatile float* %1182, align 4
  %1184 = fcmp oge float %1181, %1183
  %1185 = fcmp ueq float %1181, 0.000000e+00
  %1186 = or i1 %1184, %1185
  %1187 = select i1 %1186, float %1181, float %1183
  %1188 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 7, i64 0
  %1189 = load volatile float* %1188, align 4
  %1190 = fcmp oge float %1187, %1189
  %1191 = fcmp ueq float %1187, 0.000000e+00
  %1192 = or i1 %1190, %1191
  %1193 = select i1 %1192, float %1187, float %1189
  %1194 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 8, i64 0
  %1195 = load volatile float* %1194, align 4
  %1196 = fcmp oge float %1193, %1195
  %1197 = fcmp ueq float %1193, 0.000000e+00
  %1198 = or i1 %1196, %1197
  %1199 = select i1 %1198, float %1193, float %1195
  %1200 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 6, i64 0
  %1201 = load volatile float* %1200, align 4
  %1202 = fcmp oge float %1199, %1201
  %1203 = fcmp ueq float %1199, 0.000000e+00
  %1204 = or i1 %1202, %1203
  %1205 = select i1 %1204, float %1199, float %1201
  %1206 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 7, i64 0
  %1207 = load volatile float* %1206, align 4
  %1208 = fcmp oge float %1205, %1207
  %1209 = fcmp ueq float %1205, 0.000000e+00
  %1210 = or i1 %1208, %1209
  %1211 = select i1 %1210, float %1205, float %1207
  %1212 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 8, i64 0
  %1213 = load volatile float* %1212, align 4
  %1214 = fcmp oge float %1211, %1213
  %1215 = fcmp ueq float %1211, 0.000000e+00
  %1216 = or i1 %1214, %1215
  %1217 = select i1 %1216, float %1211, float %1213
  %1218 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 2, i64 2, i64 0
  store volatile float %1217, float* %1218, align 4
  %1219 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 9, i64 0
  %1220 = load volatile float* %1219, align 4
  %1221 = fcmp oge float 0xFFF0000000000000, %1220
  %1222 = select i1 %1221, float 0xFFF0000000000000, float %1220
  %1223 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 10, i64 0
  %1224 = load volatile float* %1223, align 4
  %1225 = fcmp oge float %1222, %1224
  %1226 = fcmp ueq float %1222, 0.000000e+00
  %1227 = or i1 %1225, %1226
  %1228 = select i1 %1227, float %1222, float %1224
  %1229 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 11, i64 0
  %1230 = load volatile float* %1229, align 4
  %1231 = fcmp oge float %1228, %1230
  %1232 = fcmp ueq float %1228, 0.000000e+00
  %1233 = or i1 %1231, %1232
  %1234 = select i1 %1233, float %1228, float %1230
  %1235 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 9, i64 0
  %1236 = load volatile float* %1235, align 4
  %1237 = fcmp oge float %1234, %1236
  %1238 = fcmp ueq float %1234, 0.000000e+00
  %1239 = or i1 %1237, %1238
  %1240 = select i1 %1239, float %1234, float %1236
  %1241 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 10, i64 0
  %1242 = load volatile float* %1241, align 4
  %1243 = fcmp oge float %1240, %1242
  %1244 = fcmp ueq float %1240, 0.000000e+00
  %1245 = or i1 %1243, %1244
  %1246 = select i1 %1245, float %1240, float %1242
  %1247 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 11, i64 0
  %1248 = load volatile float* %1247, align 4
  %1249 = fcmp oge float %1246, %1248
  %1250 = fcmp ueq float %1246, 0.000000e+00
  %1251 = or i1 %1249, %1250
  %1252 = select i1 %1251, float %1246, float %1248
  %1253 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 9, i64 0
  %1254 = load volatile float* %1253, align 4
  %1255 = fcmp oge float %1252, %1254
  %1256 = fcmp ueq float %1252, 0.000000e+00
  %1257 = or i1 %1255, %1256
  %1258 = select i1 %1257, float %1252, float %1254
  %1259 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 10, i64 0
  %1260 = load volatile float* %1259, align 4
  %1261 = fcmp oge float %1258, %1260
  %1262 = fcmp ueq float %1258, 0.000000e+00
  %1263 = or i1 %1261, %1262
  %1264 = select i1 %1263, float %1258, float %1260
  %1265 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 11, i64 0
  %1266 = load volatile float* %1265, align 4
  %1267 = fcmp oge float %1264, %1266
  %1268 = fcmp ueq float %1264, 0.000000e+00
  %1269 = or i1 %1267, %1268
  %1270 = select i1 %1269, float %1264, float %1266
  %1271 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 2, i64 3, i64 0
  store volatile float %1270, float* %1271, align 4
  %1272 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 12, i64 0
  %1273 = load volatile float* %1272, align 4
  %1274 = fcmp oge float 0xFFF0000000000000, %1273
  %1275 = select i1 %1274, float 0xFFF0000000000000, float %1273
  %1276 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 13, i64 0
  %1277 = load volatile float* %1276, align 4
  %1278 = fcmp oge float %1275, %1277
  %1279 = fcmp ueq float %1275, 0.000000e+00
  %1280 = or i1 %1278, %1279
  %1281 = select i1 %1280, float %1275, float %1277
  %1282 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 14, i64 0
  %1283 = load volatile float* %1282, align 4
  %1284 = fcmp oge float %1281, %1283
  %1285 = fcmp ueq float %1281, 0.000000e+00
  %1286 = or i1 %1284, %1285
  %1287 = select i1 %1286, float %1281, float %1283
  %1288 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 12, i64 0
  %1289 = load volatile float* %1288, align 4
  %1290 = fcmp oge float %1287, %1289
  %1291 = fcmp ueq float %1287, 0.000000e+00
  %1292 = or i1 %1290, %1291
  %1293 = select i1 %1292, float %1287, float %1289
  %1294 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 13, i64 0
  %1295 = load volatile float* %1294, align 4
  %1296 = fcmp oge float %1293, %1295
  %1297 = fcmp ueq float %1293, 0.000000e+00
  %1298 = or i1 %1296, %1297
  %1299 = select i1 %1298, float %1293, float %1295
  %1300 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 14, i64 0
  %1301 = load volatile float* %1300, align 4
  %1302 = fcmp oge float %1299, %1301
  %1303 = fcmp ueq float %1299, 0.000000e+00
  %1304 = or i1 %1302, %1303
  %1305 = select i1 %1304, float %1299, float %1301
  %1306 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 12, i64 0
  %1307 = load volatile float* %1306, align 4
  %1308 = fcmp oge float %1305, %1307
  %1309 = fcmp ueq float %1305, 0.000000e+00
  %1310 = or i1 %1308, %1309
  %1311 = select i1 %1310, float %1305, float %1307
  %1312 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 13, i64 0
  %1313 = load volatile float* %1312, align 4
  %1314 = fcmp oge float %1311, %1313
  %1315 = fcmp ueq float %1311, 0.000000e+00
  %1316 = or i1 %1314, %1315
  %1317 = select i1 %1316, float %1311, float %1313
  %1318 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 14, i64 0
  %1319 = load volatile float* %1318, align 4
  %1320 = fcmp oge float %1317, %1319
  %1321 = fcmp ueq float %1317, 0.000000e+00
  %1322 = or i1 %1320, %1321
  %1323 = select i1 %1322, float %1317, float %1319
  %1324 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 2, i64 4, i64 0
  store volatile float %1323, float* %1324, align 4
  %1325 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 15, i64 0
  %1326 = load volatile float* %1325, align 4
  %1327 = fcmp oge float 0xFFF0000000000000, %1326
  %1328 = select i1 %1327, float 0xFFF0000000000000, float %1326
  %1329 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 16, i64 0
  %1330 = load volatile float* %1329, align 4
  %1331 = fcmp oge float %1328, %1330
  %1332 = fcmp ueq float %1328, 0.000000e+00
  %1333 = or i1 %1331, %1332
  %1334 = select i1 %1333, float %1328, float %1330
  %1335 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 17, i64 0
  %1336 = load volatile float* %1335, align 4
  %1337 = fcmp oge float %1334, %1336
  %1338 = fcmp ueq float %1334, 0.000000e+00
  %1339 = or i1 %1337, %1338
  %1340 = select i1 %1339, float %1334, float %1336
  %1341 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 15, i64 0
  %1342 = load volatile float* %1341, align 4
  %1343 = fcmp oge float %1340, %1342
  %1344 = fcmp ueq float %1340, 0.000000e+00
  %1345 = or i1 %1343, %1344
  %1346 = select i1 %1345, float %1340, float %1342
  %1347 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 16, i64 0
  %1348 = load volatile float* %1347, align 4
  %1349 = fcmp oge float %1346, %1348
  %1350 = fcmp ueq float %1346, 0.000000e+00
  %1351 = or i1 %1349, %1350
  %1352 = select i1 %1351, float %1346, float %1348
  %1353 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 17, i64 0
  %1354 = load volatile float* %1353, align 4
  %1355 = fcmp oge float %1352, %1354
  %1356 = fcmp ueq float %1352, 0.000000e+00
  %1357 = or i1 %1355, %1356
  %1358 = select i1 %1357, float %1352, float %1354
  %1359 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 15, i64 0
  %1360 = load volatile float* %1359, align 4
  %1361 = fcmp oge float %1358, %1360
  %1362 = fcmp ueq float %1358, 0.000000e+00
  %1363 = or i1 %1361, %1362
  %1364 = select i1 %1363, float %1358, float %1360
  %1365 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 16, i64 0
  %1366 = load volatile float* %1365, align 4
  %1367 = fcmp oge float %1364, %1366
  %1368 = fcmp ueq float %1364, 0.000000e+00
  %1369 = or i1 %1367, %1368
  %1370 = select i1 %1369, float %1364, float %1366
  %1371 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 17, i64 0
  %1372 = load volatile float* %1371, align 4
  %1373 = fcmp oge float %1370, %1372
  %1374 = fcmp ueq float %1370, 0.000000e+00
  %1375 = or i1 %1373, %1374
  %1376 = select i1 %1375, float %1370, float %1372
  %1377 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 2, i64 5, i64 0
  store volatile float %1376, float* %1377, align 4
  %1378 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 18, i64 0
  %1379 = load volatile float* %1378, align 4
  %1380 = fcmp oge float 0xFFF0000000000000, %1379
  %1381 = select i1 %1380, float 0xFFF0000000000000, float %1379
  %1382 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 19, i64 0
  %1383 = load volatile float* %1382, align 4
  %1384 = fcmp oge float %1381, %1383
  %1385 = fcmp ueq float %1381, 0.000000e+00
  %1386 = or i1 %1384, %1385
  %1387 = select i1 %1386, float %1381, float %1383
  %1388 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 20, i64 0
  %1389 = load volatile float* %1388, align 4
  %1390 = fcmp oge float %1387, %1389
  %1391 = fcmp ueq float %1387, 0.000000e+00
  %1392 = or i1 %1390, %1391
  %1393 = select i1 %1392, float %1387, float %1389
  %1394 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 18, i64 0
  %1395 = load volatile float* %1394, align 4
  %1396 = fcmp oge float %1393, %1395
  %1397 = fcmp ueq float %1393, 0.000000e+00
  %1398 = or i1 %1396, %1397
  %1399 = select i1 %1398, float %1393, float %1395
  %1400 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 19, i64 0
  %1401 = load volatile float* %1400, align 4
  %1402 = fcmp oge float %1399, %1401
  %1403 = fcmp ueq float %1399, 0.000000e+00
  %1404 = or i1 %1402, %1403
  %1405 = select i1 %1404, float %1399, float %1401
  %1406 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 20, i64 0
  %1407 = load volatile float* %1406, align 4
  %1408 = fcmp oge float %1405, %1407
  %1409 = fcmp ueq float %1405, 0.000000e+00
  %1410 = or i1 %1408, %1409
  %1411 = select i1 %1410, float %1405, float %1407
  %1412 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 18, i64 0
  %1413 = load volatile float* %1412, align 4
  %1414 = fcmp oge float %1411, %1413
  %1415 = fcmp ueq float %1411, 0.000000e+00
  %1416 = or i1 %1414, %1415
  %1417 = select i1 %1416, float %1411, float %1413
  %1418 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 19, i64 0
  %1419 = load volatile float* %1418, align 4
  %1420 = fcmp oge float %1417, %1419
  %1421 = fcmp ueq float %1417, 0.000000e+00
  %1422 = or i1 %1420, %1421
  %1423 = select i1 %1422, float %1417, float %1419
  %1424 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 20, i64 0
  %1425 = load volatile float* %1424, align 4
  %1426 = fcmp oge float %1423, %1425
  %1427 = fcmp ueq float %1423, 0.000000e+00
  %1428 = or i1 %1426, %1427
  %1429 = select i1 %1428, float %1423, float %1425
  %1430 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 2, i64 6, i64 0
  store volatile float %1429, float* %1430, align 4
  %1431 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 21, i64 0
  %1432 = load volatile float* %1431, align 4
  %1433 = fcmp oge float 0xFFF0000000000000, %1432
  %1434 = select i1 %1433, float 0xFFF0000000000000, float %1432
  %1435 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 22, i64 0
  %1436 = load volatile float* %1435, align 4
  %1437 = fcmp oge float %1434, %1436
  %1438 = fcmp ueq float %1434, 0.000000e+00
  %1439 = or i1 %1437, %1438
  %1440 = select i1 %1439, float %1434, float %1436
  %1441 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 23, i64 0
  %1442 = load volatile float* %1441, align 4
  %1443 = fcmp oge float %1440, %1442
  %1444 = fcmp ueq float %1440, 0.000000e+00
  %1445 = or i1 %1443, %1444
  %1446 = select i1 %1445, float %1440, float %1442
  %1447 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 21, i64 0
  %1448 = load volatile float* %1447, align 4
  %1449 = fcmp oge float %1446, %1448
  %1450 = fcmp ueq float %1446, 0.000000e+00
  %1451 = or i1 %1449, %1450
  %1452 = select i1 %1451, float %1446, float %1448
  %1453 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 22, i64 0
  %1454 = load volatile float* %1453, align 4
  %1455 = fcmp oge float %1452, %1454
  %1456 = fcmp ueq float %1452, 0.000000e+00
  %1457 = or i1 %1455, %1456
  %1458 = select i1 %1457, float %1452, float %1454
  %1459 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 23, i64 0
  %1460 = load volatile float* %1459, align 4
  %1461 = fcmp oge float %1458, %1460
  %1462 = fcmp ueq float %1458, 0.000000e+00
  %1463 = or i1 %1461, %1462
  %1464 = select i1 %1463, float %1458, float %1460
  %1465 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 21, i64 0
  %1466 = load volatile float* %1465, align 4
  %1467 = fcmp oge float %1464, %1466
  %1468 = fcmp ueq float %1464, 0.000000e+00
  %1469 = or i1 %1467, %1468
  %1470 = select i1 %1469, float %1464, float %1466
  %1471 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 22, i64 0
  %1472 = load volatile float* %1471, align 4
  %1473 = fcmp oge float %1470, %1472
  %1474 = fcmp ueq float %1470, 0.000000e+00
  %1475 = or i1 %1473, %1474
  %1476 = select i1 %1475, float %1470, float %1472
  %1477 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 23, i64 0
  %1478 = load volatile float* %1477, align 4
  %1479 = fcmp oge float %1476, %1478
  %1480 = fcmp ueq float %1476, 0.000000e+00
  %1481 = or i1 %1479, %1480
  %1482 = select i1 %1481, float %1476, float %1478
  %1483 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 2, i64 7, i64 0
  store volatile float %1482, float* %1483, align 4
  %1484 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 24, i64 0
  %1485 = load volatile float* %1484, align 4
  %1486 = fcmp oge float 0xFFF0000000000000, %1485
  %1487 = select i1 %1486, float 0xFFF0000000000000, float %1485
  %1488 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 25, i64 0
  %1489 = load volatile float* %1488, align 4
  %1490 = fcmp oge float %1487, %1489
  %1491 = fcmp ueq float %1487, 0.000000e+00
  %1492 = or i1 %1490, %1491
  %1493 = select i1 %1492, float %1487, float %1489
  %1494 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 26, i64 0
  %1495 = load volatile float* %1494, align 4
  %1496 = fcmp oge float %1493, %1495
  %1497 = fcmp ueq float %1493, 0.000000e+00
  %1498 = or i1 %1496, %1497
  %1499 = select i1 %1498, float %1493, float %1495
  %1500 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 24, i64 0
  %1501 = load volatile float* %1500, align 4
  %1502 = fcmp oge float %1499, %1501
  %1503 = fcmp ueq float %1499, 0.000000e+00
  %1504 = or i1 %1502, %1503
  %1505 = select i1 %1504, float %1499, float %1501
  %1506 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 25, i64 0
  %1507 = load volatile float* %1506, align 4
  %1508 = fcmp oge float %1505, %1507
  %1509 = fcmp ueq float %1505, 0.000000e+00
  %1510 = or i1 %1508, %1509
  %1511 = select i1 %1510, float %1505, float %1507
  %1512 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 26, i64 0
  %1513 = load volatile float* %1512, align 4
  %1514 = fcmp oge float %1511, %1513
  %1515 = fcmp ueq float %1511, 0.000000e+00
  %1516 = or i1 %1514, %1515
  %1517 = select i1 %1516, float %1511, float %1513
  %1518 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 24, i64 0
  %1519 = load volatile float* %1518, align 4
  %1520 = fcmp oge float %1517, %1519
  %1521 = fcmp ueq float %1517, 0.000000e+00
  %1522 = or i1 %1520, %1521
  %1523 = select i1 %1522, float %1517, float %1519
  %1524 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 25, i64 0
  %1525 = load volatile float* %1524, align 4
  %1526 = fcmp oge float %1523, %1525
  %1527 = fcmp ueq float %1523, 0.000000e+00
  %1528 = or i1 %1526, %1527
  %1529 = select i1 %1528, float %1523, float %1525
  %1530 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 26, i64 0
  %1531 = load volatile float* %1530, align 4
  %1532 = fcmp oge float %1529, %1531
  %1533 = fcmp ueq float %1529, 0.000000e+00
  %1534 = or i1 %1532, %1533
  %1535 = select i1 %1534, float %1529, float %1531
  %1536 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 2, i64 8, i64 0
  store volatile float %1535, float* %1536, align 4
  %1537 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 27, i64 0
  %1538 = load volatile float* %1537, align 4
  %1539 = fcmp oge float 0xFFF0000000000000, %1538
  %1540 = select i1 %1539, float 0xFFF0000000000000, float %1538
  %1541 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 28, i64 0
  %1542 = load volatile float* %1541, align 4
  %1543 = fcmp oge float %1540, %1542
  %1544 = fcmp ueq float %1540, 0.000000e+00
  %1545 = or i1 %1543, %1544
  %1546 = select i1 %1545, float %1540, float %1542
  %1547 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 29, i64 0
  %1548 = load volatile float* %1547, align 4
  %1549 = fcmp oge float %1546, %1548
  %1550 = fcmp ueq float %1546, 0.000000e+00
  %1551 = or i1 %1549, %1550
  %1552 = select i1 %1551, float %1546, float %1548
  %1553 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 27, i64 0
  %1554 = load volatile float* %1553, align 4
  %1555 = fcmp oge float %1552, %1554
  %1556 = fcmp ueq float %1552, 0.000000e+00
  %1557 = or i1 %1555, %1556
  %1558 = select i1 %1557, float %1552, float %1554
  %1559 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 28, i64 0
  %1560 = load volatile float* %1559, align 4
  %1561 = fcmp oge float %1558, %1560
  %1562 = fcmp ueq float %1558, 0.000000e+00
  %1563 = or i1 %1561, %1562
  %1564 = select i1 %1563, float %1558, float %1560
  %1565 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 29, i64 0
  %1566 = load volatile float* %1565, align 4
  %1567 = fcmp oge float %1564, %1566
  %1568 = fcmp ueq float %1564, 0.000000e+00
  %1569 = or i1 %1567, %1568
  %1570 = select i1 %1569, float %1564, float %1566
  %1571 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 27, i64 0
  %1572 = load volatile float* %1571, align 4
  %1573 = fcmp oge float %1570, %1572
  %1574 = fcmp ueq float %1570, 0.000000e+00
  %1575 = or i1 %1573, %1574
  %1576 = select i1 %1575, float %1570, float %1572
  %1577 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 28, i64 0
  %1578 = load volatile float* %1577, align 4
  %1579 = fcmp oge float %1576, %1578
  %1580 = fcmp ueq float %1576, 0.000000e+00
  %1581 = or i1 %1579, %1580
  %1582 = select i1 %1581, float %1576, float %1578
  %1583 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 29, i64 0
  %1584 = load volatile float* %1583, align 4
  %1585 = fcmp oge float %1582, %1584
  %1586 = fcmp ueq float %1582, 0.000000e+00
  %1587 = or i1 %1585, %1586
  %1588 = select i1 %1587, float %1582, float %1584
  %1589 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 2, i64 9, i64 0
  store volatile float %1588, float* %1589, align 4
  %1590 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 0, i64 0
  %1591 = load volatile float* %1590, align 4
  %1592 = fcmp oge float 0xFFF0000000000000, %1591
  %1593 = select i1 %1592, float 0xFFF0000000000000, float %1591
  %1594 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 1, i64 0
  %1595 = load volatile float* %1594, align 4
  %1596 = fcmp oge float %1593, %1595
  %1597 = fcmp ueq float %1593, 0.000000e+00
  %1598 = or i1 %1596, %1597
  %1599 = select i1 %1598, float %1593, float %1595
  %1600 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 2, i64 0
  %1601 = load volatile float* %1600, align 4
  %1602 = fcmp oge float %1599, %1601
  %1603 = fcmp ueq float %1599, 0.000000e+00
  %1604 = or i1 %1602, %1603
  %1605 = select i1 %1604, float %1599, float %1601
  %1606 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 0, i64 0
  %1607 = load volatile float* %1606, align 4
  %1608 = fcmp oge float %1605, %1607
  %1609 = fcmp ueq float %1605, 0.000000e+00
  %1610 = or i1 %1608, %1609
  %1611 = select i1 %1610, float %1605, float %1607
  %1612 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 1, i64 0
  %1613 = load volatile float* %1612, align 4
  %1614 = fcmp oge float %1611, %1613
  %1615 = fcmp ueq float %1611, 0.000000e+00
  %1616 = or i1 %1614, %1615
  %1617 = select i1 %1616, float %1611, float %1613
  %1618 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 2, i64 0
  %1619 = load volatile float* %1618, align 4
  %1620 = fcmp oge float %1617, %1619
  %1621 = fcmp ueq float %1617, 0.000000e+00
  %1622 = or i1 %1620, %1621
  %1623 = select i1 %1622, float %1617, float %1619
  %1624 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 0, i64 0
  %1625 = load volatile float* %1624, align 4
  %1626 = fcmp oge float %1623, %1625
  %1627 = fcmp ueq float %1623, 0.000000e+00
  %1628 = or i1 %1626, %1627
  %1629 = select i1 %1628, float %1623, float %1625
  %1630 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 1, i64 0
  %1631 = load volatile float* %1630, align 4
  %1632 = fcmp oge float %1629, %1631
  %1633 = fcmp ueq float %1629, 0.000000e+00
  %1634 = or i1 %1632, %1633
  %1635 = select i1 %1634, float %1629, float %1631
  %1636 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 2, i64 0
  %1637 = load volatile float* %1636, align 4
  %1638 = fcmp oge float %1635, %1637
  %1639 = fcmp ueq float %1635, 0.000000e+00
  %1640 = or i1 %1638, %1639
  %1641 = select i1 %1640, float %1635, float %1637
  %1642 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 3, i64 0, i64 0
  store volatile float %1641, float* %1642, align 4
  %1643 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 3, i64 0
  %1644 = load volatile float* %1643, align 4
  %1645 = fcmp oge float 0xFFF0000000000000, %1644
  %1646 = select i1 %1645, float 0xFFF0000000000000, float %1644
  %1647 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 4, i64 0
  %1648 = load volatile float* %1647, align 4
  %1649 = fcmp oge float %1646, %1648
  %1650 = fcmp ueq float %1646, 0.000000e+00
  %1651 = or i1 %1649, %1650
  %1652 = select i1 %1651, float %1646, float %1648
  %1653 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 5, i64 0
  %1654 = load volatile float* %1653, align 4
  %1655 = fcmp oge float %1652, %1654
  %1656 = fcmp ueq float %1652, 0.000000e+00
  %1657 = or i1 %1655, %1656
  %1658 = select i1 %1657, float %1652, float %1654
  %1659 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 3, i64 0
  %1660 = load volatile float* %1659, align 4
  %1661 = fcmp oge float %1658, %1660
  %1662 = fcmp ueq float %1658, 0.000000e+00
  %1663 = or i1 %1661, %1662
  %1664 = select i1 %1663, float %1658, float %1660
  %1665 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 4, i64 0
  %1666 = load volatile float* %1665, align 4
  %1667 = fcmp oge float %1664, %1666
  %1668 = fcmp ueq float %1664, 0.000000e+00
  %1669 = or i1 %1667, %1668
  %1670 = select i1 %1669, float %1664, float %1666
  %1671 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 5, i64 0
  %1672 = load volatile float* %1671, align 4
  %1673 = fcmp oge float %1670, %1672
  %1674 = fcmp ueq float %1670, 0.000000e+00
  %1675 = or i1 %1673, %1674
  %1676 = select i1 %1675, float %1670, float %1672
  %1677 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 3, i64 0
  %1678 = load volatile float* %1677, align 4
  %1679 = fcmp oge float %1676, %1678
  %1680 = fcmp ueq float %1676, 0.000000e+00
  %1681 = or i1 %1679, %1680
  %1682 = select i1 %1681, float %1676, float %1678
  %1683 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 4, i64 0
  %1684 = load volatile float* %1683, align 4
  %1685 = fcmp oge float %1682, %1684
  %1686 = fcmp ueq float %1682, 0.000000e+00
  %1687 = or i1 %1685, %1686
  %1688 = select i1 %1687, float %1682, float %1684
  %1689 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 5, i64 0
  %1690 = load volatile float* %1689, align 4
  %1691 = fcmp oge float %1688, %1690
  %1692 = fcmp ueq float %1688, 0.000000e+00
  %1693 = or i1 %1691, %1692
  %1694 = select i1 %1693, float %1688, float %1690
  %1695 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 3, i64 1, i64 0
  store volatile float %1694, float* %1695, align 4
  %1696 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 6, i64 0
  %1697 = load volatile float* %1696, align 4
  %1698 = fcmp oge float 0xFFF0000000000000, %1697
  %1699 = select i1 %1698, float 0xFFF0000000000000, float %1697
  %1700 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 7, i64 0
  %1701 = load volatile float* %1700, align 4
  %1702 = fcmp oge float %1699, %1701
  %1703 = fcmp ueq float %1699, 0.000000e+00
  %1704 = or i1 %1702, %1703
  %1705 = select i1 %1704, float %1699, float %1701
  %1706 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 8, i64 0
  %1707 = load volatile float* %1706, align 4
  %1708 = fcmp oge float %1705, %1707
  %1709 = fcmp ueq float %1705, 0.000000e+00
  %1710 = or i1 %1708, %1709
  %1711 = select i1 %1710, float %1705, float %1707
  %1712 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 6, i64 0
  %1713 = load volatile float* %1712, align 4
  %1714 = fcmp oge float %1711, %1713
  %1715 = fcmp ueq float %1711, 0.000000e+00
  %1716 = or i1 %1714, %1715
  %1717 = select i1 %1716, float %1711, float %1713
  %1718 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 7, i64 0
  %1719 = load volatile float* %1718, align 4
  %1720 = fcmp oge float %1717, %1719
  %1721 = fcmp ueq float %1717, 0.000000e+00
  %1722 = or i1 %1720, %1721
  %1723 = select i1 %1722, float %1717, float %1719
  %1724 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 8, i64 0
  %1725 = load volatile float* %1724, align 4
  %1726 = fcmp oge float %1723, %1725
  %1727 = fcmp ueq float %1723, 0.000000e+00
  %1728 = or i1 %1726, %1727
  %1729 = select i1 %1728, float %1723, float %1725
  %1730 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 6, i64 0
  %1731 = load volatile float* %1730, align 4
  %1732 = fcmp oge float %1729, %1731
  %1733 = fcmp ueq float %1729, 0.000000e+00
  %1734 = or i1 %1732, %1733
  %1735 = select i1 %1734, float %1729, float %1731
  %1736 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 7, i64 0
  %1737 = load volatile float* %1736, align 4
  %1738 = fcmp oge float %1735, %1737
  %1739 = fcmp ueq float %1735, 0.000000e+00
  %1740 = or i1 %1738, %1739
  %1741 = select i1 %1740, float %1735, float %1737
  %1742 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 8, i64 0
  %1743 = load volatile float* %1742, align 4
  %1744 = fcmp oge float %1741, %1743
  %1745 = fcmp ueq float %1741, 0.000000e+00
  %1746 = or i1 %1744, %1745
  %1747 = select i1 %1746, float %1741, float %1743
  %1748 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 3, i64 2, i64 0
  store volatile float %1747, float* %1748, align 4
  %1749 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 9, i64 0
  %1750 = load volatile float* %1749, align 4
  %1751 = fcmp oge float 0xFFF0000000000000, %1750
  %1752 = select i1 %1751, float 0xFFF0000000000000, float %1750
  %1753 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 10, i64 0
  %1754 = load volatile float* %1753, align 4
  %1755 = fcmp oge float %1752, %1754
  %1756 = fcmp ueq float %1752, 0.000000e+00
  %1757 = or i1 %1755, %1756
  %1758 = select i1 %1757, float %1752, float %1754
  %1759 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 11, i64 0
  %1760 = load volatile float* %1759, align 4
  %1761 = fcmp oge float %1758, %1760
  %1762 = fcmp ueq float %1758, 0.000000e+00
  %1763 = or i1 %1761, %1762
  %1764 = select i1 %1763, float %1758, float %1760
  %1765 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 9, i64 0
  %1766 = load volatile float* %1765, align 4
  %1767 = fcmp oge float %1764, %1766
  %1768 = fcmp ueq float %1764, 0.000000e+00
  %1769 = or i1 %1767, %1768
  %1770 = select i1 %1769, float %1764, float %1766
  %1771 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 10, i64 0
  %1772 = load volatile float* %1771, align 4
  %1773 = fcmp oge float %1770, %1772
  %1774 = fcmp ueq float %1770, 0.000000e+00
  %1775 = or i1 %1773, %1774
  %1776 = select i1 %1775, float %1770, float %1772
  %1777 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 11, i64 0
  %1778 = load volatile float* %1777, align 4
  %1779 = fcmp oge float %1776, %1778
  %1780 = fcmp ueq float %1776, 0.000000e+00
  %1781 = or i1 %1779, %1780
  %1782 = select i1 %1781, float %1776, float %1778
  %1783 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 9, i64 0
  %1784 = load volatile float* %1783, align 4
  %1785 = fcmp oge float %1782, %1784
  %1786 = fcmp ueq float %1782, 0.000000e+00
  %1787 = or i1 %1785, %1786
  %1788 = select i1 %1787, float %1782, float %1784
  %1789 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 10, i64 0
  %1790 = load volatile float* %1789, align 4
  %1791 = fcmp oge float %1788, %1790
  %1792 = fcmp ueq float %1788, 0.000000e+00
  %1793 = or i1 %1791, %1792
  %1794 = select i1 %1793, float %1788, float %1790
  %1795 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 11, i64 0
  %1796 = load volatile float* %1795, align 4
  %1797 = fcmp oge float %1794, %1796
  %1798 = fcmp ueq float %1794, 0.000000e+00
  %1799 = or i1 %1797, %1798
  %1800 = select i1 %1799, float %1794, float %1796
  %1801 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 3, i64 3, i64 0
  store volatile float %1800, float* %1801, align 4
  %1802 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 12, i64 0
  %1803 = load volatile float* %1802, align 4
  %1804 = fcmp oge float 0xFFF0000000000000, %1803
  %1805 = select i1 %1804, float 0xFFF0000000000000, float %1803
  %1806 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 13, i64 0
  %1807 = load volatile float* %1806, align 4
  %1808 = fcmp oge float %1805, %1807
  %1809 = fcmp ueq float %1805, 0.000000e+00
  %1810 = or i1 %1808, %1809
  %1811 = select i1 %1810, float %1805, float %1807
  %1812 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 14, i64 0
  %1813 = load volatile float* %1812, align 4
  %1814 = fcmp oge float %1811, %1813
  %1815 = fcmp ueq float %1811, 0.000000e+00
  %1816 = or i1 %1814, %1815
  %1817 = select i1 %1816, float %1811, float %1813
  %1818 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 12, i64 0
  %1819 = load volatile float* %1818, align 4
  %1820 = fcmp oge float %1817, %1819
  %1821 = fcmp ueq float %1817, 0.000000e+00
  %1822 = or i1 %1820, %1821
  %1823 = select i1 %1822, float %1817, float %1819
  %1824 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 13, i64 0
  %1825 = load volatile float* %1824, align 4
  %1826 = fcmp oge float %1823, %1825
  %1827 = fcmp ueq float %1823, 0.000000e+00
  %1828 = or i1 %1826, %1827
  %1829 = select i1 %1828, float %1823, float %1825
  %1830 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 14, i64 0
  %1831 = load volatile float* %1830, align 4
  %1832 = fcmp oge float %1829, %1831
  %1833 = fcmp ueq float %1829, 0.000000e+00
  %1834 = or i1 %1832, %1833
  %1835 = select i1 %1834, float %1829, float %1831
  %1836 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 12, i64 0
  %1837 = load volatile float* %1836, align 4
  %1838 = fcmp oge float %1835, %1837
  %1839 = fcmp ueq float %1835, 0.000000e+00
  %1840 = or i1 %1838, %1839
  %1841 = select i1 %1840, float %1835, float %1837
  %1842 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 13, i64 0
  %1843 = load volatile float* %1842, align 4
  %1844 = fcmp oge float %1841, %1843
  %1845 = fcmp ueq float %1841, 0.000000e+00
  %1846 = or i1 %1844, %1845
  %1847 = select i1 %1846, float %1841, float %1843
  %1848 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 14, i64 0
  %1849 = load volatile float* %1848, align 4
  %1850 = fcmp oge float %1847, %1849
  %1851 = fcmp ueq float %1847, 0.000000e+00
  %1852 = or i1 %1850, %1851
  %1853 = select i1 %1852, float %1847, float %1849
  %1854 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 3, i64 4, i64 0
  store volatile float %1853, float* %1854, align 4
  %1855 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 15, i64 0
  %1856 = load volatile float* %1855, align 4
  %1857 = fcmp oge float 0xFFF0000000000000, %1856
  %1858 = select i1 %1857, float 0xFFF0000000000000, float %1856
  %1859 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 16, i64 0
  %1860 = load volatile float* %1859, align 4
  %1861 = fcmp oge float %1858, %1860
  %1862 = fcmp ueq float %1858, 0.000000e+00
  %1863 = or i1 %1861, %1862
  %1864 = select i1 %1863, float %1858, float %1860
  %1865 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 17, i64 0
  %1866 = load volatile float* %1865, align 4
  %1867 = fcmp oge float %1864, %1866
  %1868 = fcmp ueq float %1864, 0.000000e+00
  %1869 = or i1 %1867, %1868
  %1870 = select i1 %1869, float %1864, float %1866
  %1871 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 15, i64 0
  %1872 = load volatile float* %1871, align 4
  %1873 = fcmp oge float %1870, %1872
  %1874 = fcmp ueq float %1870, 0.000000e+00
  %1875 = or i1 %1873, %1874
  %1876 = select i1 %1875, float %1870, float %1872
  %1877 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 16, i64 0
  %1878 = load volatile float* %1877, align 4
  %1879 = fcmp oge float %1876, %1878
  %1880 = fcmp ueq float %1876, 0.000000e+00
  %1881 = or i1 %1879, %1880
  %1882 = select i1 %1881, float %1876, float %1878
  %1883 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 17, i64 0
  %1884 = load volatile float* %1883, align 4
  %1885 = fcmp oge float %1882, %1884
  %1886 = fcmp ueq float %1882, 0.000000e+00
  %1887 = or i1 %1885, %1886
  %1888 = select i1 %1887, float %1882, float %1884
  %1889 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 15, i64 0
  %1890 = load volatile float* %1889, align 4
  %1891 = fcmp oge float %1888, %1890
  %1892 = fcmp ueq float %1888, 0.000000e+00
  %1893 = or i1 %1891, %1892
  %1894 = select i1 %1893, float %1888, float %1890
  %1895 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 16, i64 0
  %1896 = load volatile float* %1895, align 4
  %1897 = fcmp oge float %1894, %1896
  %1898 = fcmp ueq float %1894, 0.000000e+00
  %1899 = or i1 %1897, %1898
  %1900 = select i1 %1899, float %1894, float %1896
  %1901 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 17, i64 0
  %1902 = load volatile float* %1901, align 4
  %1903 = fcmp oge float %1900, %1902
  %1904 = fcmp ueq float %1900, 0.000000e+00
  %1905 = or i1 %1903, %1904
  %1906 = select i1 %1905, float %1900, float %1902
  %1907 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 3, i64 5, i64 0
  store volatile float %1906, float* %1907, align 4
  %1908 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 18, i64 0
  %1909 = load volatile float* %1908, align 4
  %1910 = fcmp oge float 0xFFF0000000000000, %1909
  %1911 = select i1 %1910, float 0xFFF0000000000000, float %1909
  %1912 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 19, i64 0
  %1913 = load volatile float* %1912, align 4
  %1914 = fcmp oge float %1911, %1913
  %1915 = fcmp ueq float %1911, 0.000000e+00
  %1916 = or i1 %1914, %1915
  %1917 = select i1 %1916, float %1911, float %1913
  %1918 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 20, i64 0
  %1919 = load volatile float* %1918, align 4
  %1920 = fcmp oge float %1917, %1919
  %1921 = fcmp ueq float %1917, 0.000000e+00
  %1922 = or i1 %1920, %1921
  %1923 = select i1 %1922, float %1917, float %1919
  %1924 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 18, i64 0
  %1925 = load volatile float* %1924, align 4
  %1926 = fcmp oge float %1923, %1925
  %1927 = fcmp ueq float %1923, 0.000000e+00
  %1928 = or i1 %1926, %1927
  %1929 = select i1 %1928, float %1923, float %1925
  %1930 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 19, i64 0
  %1931 = load volatile float* %1930, align 4
  %1932 = fcmp oge float %1929, %1931
  %1933 = fcmp ueq float %1929, 0.000000e+00
  %1934 = or i1 %1932, %1933
  %1935 = select i1 %1934, float %1929, float %1931
  %1936 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 20, i64 0
  %1937 = load volatile float* %1936, align 4
  %1938 = fcmp oge float %1935, %1937
  %1939 = fcmp ueq float %1935, 0.000000e+00
  %1940 = or i1 %1938, %1939
  %1941 = select i1 %1940, float %1935, float %1937
  %1942 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 18, i64 0
  %1943 = load volatile float* %1942, align 4
  %1944 = fcmp oge float %1941, %1943
  %1945 = fcmp ueq float %1941, 0.000000e+00
  %1946 = or i1 %1944, %1945
  %1947 = select i1 %1946, float %1941, float %1943
  %1948 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 19, i64 0
  %1949 = load volatile float* %1948, align 4
  %1950 = fcmp oge float %1947, %1949
  %1951 = fcmp ueq float %1947, 0.000000e+00
  %1952 = or i1 %1950, %1951
  %1953 = select i1 %1952, float %1947, float %1949
  %1954 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 20, i64 0
  %1955 = load volatile float* %1954, align 4
  %1956 = fcmp oge float %1953, %1955
  %1957 = fcmp ueq float %1953, 0.000000e+00
  %1958 = or i1 %1956, %1957
  %1959 = select i1 %1958, float %1953, float %1955
  %1960 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 3, i64 6, i64 0
  store volatile float %1959, float* %1960, align 4
  %1961 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 21, i64 0
  %1962 = load volatile float* %1961, align 4
  %1963 = fcmp oge float 0xFFF0000000000000, %1962
  %1964 = select i1 %1963, float 0xFFF0000000000000, float %1962
  %1965 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 22, i64 0
  %1966 = load volatile float* %1965, align 4
  %1967 = fcmp oge float %1964, %1966
  %1968 = fcmp ueq float %1964, 0.000000e+00
  %1969 = or i1 %1967, %1968
  %1970 = select i1 %1969, float %1964, float %1966
  %1971 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 23, i64 0
  %1972 = load volatile float* %1971, align 4
  %1973 = fcmp oge float %1970, %1972
  %1974 = fcmp ueq float %1970, 0.000000e+00
  %1975 = or i1 %1973, %1974
  %1976 = select i1 %1975, float %1970, float %1972
  %1977 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 21, i64 0
  %1978 = load volatile float* %1977, align 4
  %1979 = fcmp oge float %1976, %1978
  %1980 = fcmp ueq float %1976, 0.000000e+00
  %1981 = or i1 %1979, %1980
  %1982 = select i1 %1981, float %1976, float %1978
  %1983 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 22, i64 0
  %1984 = load volatile float* %1983, align 4
  %1985 = fcmp oge float %1982, %1984
  %1986 = fcmp ueq float %1982, 0.000000e+00
  %1987 = or i1 %1985, %1986
  %1988 = select i1 %1987, float %1982, float %1984
  %1989 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 23, i64 0
  %1990 = load volatile float* %1989, align 4
  %1991 = fcmp oge float %1988, %1990
  %1992 = fcmp ueq float %1988, 0.000000e+00
  %1993 = or i1 %1991, %1992
  %1994 = select i1 %1993, float %1988, float %1990
  %1995 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 21, i64 0
  %1996 = load volatile float* %1995, align 4
  %1997 = fcmp oge float %1994, %1996
  %1998 = fcmp ueq float %1994, 0.000000e+00
  %1999 = or i1 %1997, %1998
  %2000 = select i1 %1999, float %1994, float %1996
  %2001 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 22, i64 0
  %2002 = load volatile float* %2001, align 4
  %2003 = fcmp oge float %2000, %2002
  %2004 = fcmp ueq float %2000, 0.000000e+00
  %2005 = or i1 %2003, %2004
  %2006 = select i1 %2005, float %2000, float %2002
  %2007 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 23, i64 0
  %2008 = load volatile float* %2007, align 4
  %2009 = fcmp oge float %2006, %2008
  %2010 = fcmp ueq float %2006, 0.000000e+00
  %2011 = or i1 %2009, %2010
  %2012 = select i1 %2011, float %2006, float %2008
  %2013 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 3, i64 7, i64 0
  store volatile float %2012, float* %2013, align 4
  %2014 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 24, i64 0
  %2015 = load volatile float* %2014, align 4
  %2016 = fcmp oge float 0xFFF0000000000000, %2015
  %2017 = select i1 %2016, float 0xFFF0000000000000, float %2015
  %2018 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 25, i64 0
  %2019 = load volatile float* %2018, align 4
  %2020 = fcmp oge float %2017, %2019
  %2021 = fcmp ueq float %2017, 0.000000e+00
  %2022 = or i1 %2020, %2021
  %2023 = select i1 %2022, float %2017, float %2019
  %2024 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 26, i64 0
  %2025 = load volatile float* %2024, align 4
  %2026 = fcmp oge float %2023, %2025
  %2027 = fcmp ueq float %2023, 0.000000e+00
  %2028 = or i1 %2026, %2027
  %2029 = select i1 %2028, float %2023, float %2025
  %2030 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 24, i64 0
  %2031 = load volatile float* %2030, align 4
  %2032 = fcmp oge float %2029, %2031
  %2033 = fcmp ueq float %2029, 0.000000e+00
  %2034 = or i1 %2032, %2033
  %2035 = select i1 %2034, float %2029, float %2031
  %2036 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 25, i64 0
  %2037 = load volatile float* %2036, align 4
  %2038 = fcmp oge float %2035, %2037
  %2039 = fcmp ueq float %2035, 0.000000e+00
  %2040 = or i1 %2038, %2039
  %2041 = select i1 %2040, float %2035, float %2037
  %2042 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 26, i64 0
  %2043 = load volatile float* %2042, align 4
  %2044 = fcmp oge float %2041, %2043
  %2045 = fcmp ueq float %2041, 0.000000e+00
  %2046 = or i1 %2044, %2045
  %2047 = select i1 %2046, float %2041, float %2043
  %2048 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 24, i64 0
  %2049 = load volatile float* %2048, align 4
  %2050 = fcmp oge float %2047, %2049
  %2051 = fcmp ueq float %2047, 0.000000e+00
  %2052 = or i1 %2050, %2051
  %2053 = select i1 %2052, float %2047, float %2049
  %2054 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 25, i64 0
  %2055 = load volatile float* %2054, align 4
  %2056 = fcmp oge float %2053, %2055
  %2057 = fcmp ueq float %2053, 0.000000e+00
  %2058 = or i1 %2056, %2057
  %2059 = select i1 %2058, float %2053, float %2055
  %2060 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 26, i64 0
  %2061 = load volatile float* %2060, align 4
  %2062 = fcmp oge float %2059, %2061
  %2063 = fcmp ueq float %2059, 0.000000e+00
  %2064 = or i1 %2062, %2063
  %2065 = select i1 %2064, float %2059, float %2061
  %2066 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 3, i64 8, i64 0
  store volatile float %2065, float* %2066, align 4
  %2067 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 27, i64 0
  %2068 = load volatile float* %2067, align 4
  %2069 = fcmp oge float 0xFFF0000000000000, %2068
  %2070 = select i1 %2069, float 0xFFF0000000000000, float %2068
  %2071 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 28, i64 0
  %2072 = load volatile float* %2071, align 4
  %2073 = fcmp oge float %2070, %2072
  %2074 = fcmp ueq float %2070, 0.000000e+00
  %2075 = or i1 %2073, %2074
  %2076 = select i1 %2075, float %2070, float %2072
  %2077 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 29, i64 0
  %2078 = load volatile float* %2077, align 4
  %2079 = fcmp oge float %2076, %2078
  %2080 = fcmp ueq float %2076, 0.000000e+00
  %2081 = or i1 %2079, %2080
  %2082 = select i1 %2081, float %2076, float %2078
  %2083 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 27, i64 0
  %2084 = load volatile float* %2083, align 4
  %2085 = fcmp oge float %2082, %2084
  %2086 = fcmp ueq float %2082, 0.000000e+00
  %2087 = or i1 %2085, %2086
  %2088 = select i1 %2087, float %2082, float %2084
  %2089 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 28, i64 0
  %2090 = load volatile float* %2089, align 4
  %2091 = fcmp oge float %2088, %2090
  %2092 = fcmp ueq float %2088, 0.000000e+00
  %2093 = or i1 %2091, %2092
  %2094 = select i1 %2093, float %2088, float %2090
  %2095 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 29, i64 0
  %2096 = load volatile float* %2095, align 4
  %2097 = fcmp oge float %2094, %2096
  %2098 = fcmp ueq float %2094, 0.000000e+00
  %2099 = or i1 %2097, %2098
  %2100 = select i1 %2099, float %2094, float %2096
  %2101 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 27, i64 0
  %2102 = load volatile float* %2101, align 4
  %2103 = fcmp oge float %2100, %2102
  %2104 = fcmp ueq float %2100, 0.000000e+00
  %2105 = or i1 %2103, %2104
  %2106 = select i1 %2105, float %2100, float %2102
  %2107 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 28, i64 0
  %2108 = load volatile float* %2107, align 4
  %2109 = fcmp oge float %2106, %2108
  %2110 = fcmp ueq float %2106, 0.000000e+00
  %2111 = or i1 %2109, %2110
  %2112 = select i1 %2111, float %2106, float %2108
  %2113 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 29, i64 0
  %2114 = load volatile float* %2113, align 4
  %2115 = fcmp oge float %2112, %2114
  %2116 = fcmp ueq float %2112, 0.000000e+00
  %2117 = or i1 %2115, %2116
  %2118 = select i1 %2117, float %2112, float %2114
  %2119 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 3, i64 9, i64 0
  store volatile float %2118, float* %2119, align 4
  %2120 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 0, i64 0
  %2121 = load volatile float* %2120, align 4
  %2122 = fcmp oge float 0xFFF0000000000000, %2121
  %2123 = select i1 %2122, float 0xFFF0000000000000, float %2121
  %2124 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 1, i64 0
  %2125 = load volatile float* %2124, align 4
  %2126 = fcmp oge float %2123, %2125
  %2127 = fcmp ueq float %2123, 0.000000e+00
  %2128 = or i1 %2126, %2127
  %2129 = select i1 %2128, float %2123, float %2125
  %2130 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 2, i64 0
  %2131 = load volatile float* %2130, align 4
  %2132 = fcmp oge float %2129, %2131
  %2133 = fcmp ueq float %2129, 0.000000e+00
  %2134 = or i1 %2132, %2133
  %2135 = select i1 %2134, float %2129, float %2131
  %2136 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 0, i64 0
  %2137 = load volatile float* %2136, align 4
  %2138 = fcmp oge float %2135, %2137
  %2139 = fcmp ueq float %2135, 0.000000e+00
  %2140 = or i1 %2138, %2139
  %2141 = select i1 %2140, float %2135, float %2137
  %2142 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 1, i64 0
  %2143 = load volatile float* %2142, align 4
  %2144 = fcmp oge float %2141, %2143
  %2145 = fcmp ueq float %2141, 0.000000e+00
  %2146 = or i1 %2144, %2145
  %2147 = select i1 %2146, float %2141, float %2143
  %2148 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 2, i64 0
  %2149 = load volatile float* %2148, align 4
  %2150 = fcmp oge float %2147, %2149
  %2151 = fcmp ueq float %2147, 0.000000e+00
  %2152 = or i1 %2150, %2151
  %2153 = select i1 %2152, float %2147, float %2149
  %2154 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 0, i64 0
  %2155 = load volatile float* %2154, align 4
  %2156 = fcmp oge float %2153, %2155
  %2157 = fcmp ueq float %2153, 0.000000e+00
  %2158 = or i1 %2156, %2157
  %2159 = select i1 %2158, float %2153, float %2155
  %2160 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 1, i64 0
  %2161 = load volatile float* %2160, align 4
  %2162 = fcmp oge float %2159, %2161
  %2163 = fcmp ueq float %2159, 0.000000e+00
  %2164 = or i1 %2162, %2163
  %2165 = select i1 %2164, float %2159, float %2161
  %2166 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 2, i64 0
  %2167 = load volatile float* %2166, align 4
  %2168 = fcmp oge float %2165, %2167
  %2169 = fcmp ueq float %2165, 0.000000e+00
  %2170 = or i1 %2168, %2169
  %2171 = select i1 %2170, float %2165, float %2167
  %2172 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 4, i64 0, i64 0
  store volatile float %2171, float* %2172, align 4
  %2173 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 3, i64 0
  %2174 = load volatile float* %2173, align 4
  %2175 = fcmp oge float 0xFFF0000000000000, %2174
  %2176 = select i1 %2175, float 0xFFF0000000000000, float %2174
  %2177 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 4, i64 0
  %2178 = load volatile float* %2177, align 4
  %2179 = fcmp oge float %2176, %2178
  %2180 = fcmp ueq float %2176, 0.000000e+00
  %2181 = or i1 %2179, %2180
  %2182 = select i1 %2181, float %2176, float %2178
  %2183 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 5, i64 0
  %2184 = load volatile float* %2183, align 4
  %2185 = fcmp oge float %2182, %2184
  %2186 = fcmp ueq float %2182, 0.000000e+00
  %2187 = or i1 %2185, %2186
  %2188 = select i1 %2187, float %2182, float %2184
  %2189 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 3, i64 0
  %2190 = load volatile float* %2189, align 4
  %2191 = fcmp oge float %2188, %2190
  %2192 = fcmp ueq float %2188, 0.000000e+00
  %2193 = or i1 %2191, %2192
  %2194 = select i1 %2193, float %2188, float %2190
  %2195 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 4, i64 0
  %2196 = load volatile float* %2195, align 4
  %2197 = fcmp oge float %2194, %2196
  %2198 = fcmp ueq float %2194, 0.000000e+00
  %2199 = or i1 %2197, %2198
  %2200 = select i1 %2199, float %2194, float %2196
  %2201 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 5, i64 0
  %2202 = load volatile float* %2201, align 4
  %2203 = fcmp oge float %2200, %2202
  %2204 = fcmp ueq float %2200, 0.000000e+00
  %2205 = or i1 %2203, %2204
  %2206 = select i1 %2205, float %2200, float %2202
  %2207 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 3, i64 0
  %2208 = load volatile float* %2207, align 4
  %2209 = fcmp oge float %2206, %2208
  %2210 = fcmp ueq float %2206, 0.000000e+00
  %2211 = or i1 %2209, %2210
  %2212 = select i1 %2211, float %2206, float %2208
  %2213 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 4, i64 0
  %2214 = load volatile float* %2213, align 4
  %2215 = fcmp oge float %2212, %2214
  %2216 = fcmp ueq float %2212, 0.000000e+00
  %2217 = or i1 %2215, %2216
  %2218 = select i1 %2217, float %2212, float %2214
  %2219 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 5, i64 0
  %2220 = load volatile float* %2219, align 4
  %2221 = fcmp oge float %2218, %2220
  %2222 = fcmp ueq float %2218, 0.000000e+00
  %2223 = or i1 %2221, %2222
  %2224 = select i1 %2223, float %2218, float %2220
  %2225 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 4, i64 1, i64 0
  store volatile float %2224, float* %2225, align 4
  %2226 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 6, i64 0
  %2227 = load volatile float* %2226, align 4
  %2228 = fcmp oge float 0xFFF0000000000000, %2227
  %2229 = select i1 %2228, float 0xFFF0000000000000, float %2227
  %2230 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 7, i64 0
  %2231 = load volatile float* %2230, align 4
  %2232 = fcmp oge float %2229, %2231
  %2233 = fcmp ueq float %2229, 0.000000e+00
  %2234 = or i1 %2232, %2233
  %2235 = select i1 %2234, float %2229, float %2231
  %2236 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 8, i64 0
  %2237 = load volatile float* %2236, align 4
  %2238 = fcmp oge float %2235, %2237
  %2239 = fcmp ueq float %2235, 0.000000e+00
  %2240 = or i1 %2238, %2239
  %2241 = select i1 %2240, float %2235, float %2237
  %2242 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 6, i64 0
  %2243 = load volatile float* %2242, align 4
  %2244 = fcmp oge float %2241, %2243
  %2245 = fcmp ueq float %2241, 0.000000e+00
  %2246 = or i1 %2244, %2245
  %2247 = select i1 %2246, float %2241, float %2243
  %2248 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 7, i64 0
  %2249 = load volatile float* %2248, align 4
  %2250 = fcmp oge float %2247, %2249
  %2251 = fcmp ueq float %2247, 0.000000e+00
  %2252 = or i1 %2250, %2251
  %2253 = select i1 %2252, float %2247, float %2249
  %2254 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 8, i64 0
  %2255 = load volatile float* %2254, align 4
  %2256 = fcmp oge float %2253, %2255
  %2257 = fcmp ueq float %2253, 0.000000e+00
  %2258 = or i1 %2256, %2257
  %2259 = select i1 %2258, float %2253, float %2255
  %2260 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 6, i64 0
  %2261 = load volatile float* %2260, align 4
  %2262 = fcmp oge float %2259, %2261
  %2263 = fcmp ueq float %2259, 0.000000e+00
  %2264 = or i1 %2262, %2263
  %2265 = select i1 %2264, float %2259, float %2261
  %2266 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 7, i64 0
  %2267 = load volatile float* %2266, align 4
  %2268 = fcmp oge float %2265, %2267
  %2269 = fcmp ueq float %2265, 0.000000e+00
  %2270 = or i1 %2268, %2269
  %2271 = select i1 %2270, float %2265, float %2267
  %2272 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 8, i64 0
  %2273 = load volatile float* %2272, align 4
  %2274 = fcmp oge float %2271, %2273
  %2275 = fcmp ueq float %2271, 0.000000e+00
  %2276 = or i1 %2274, %2275
  %2277 = select i1 %2276, float %2271, float %2273
  %2278 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 4, i64 2, i64 0
  store volatile float %2277, float* %2278, align 4
  %2279 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 9, i64 0
  %2280 = load volatile float* %2279, align 4
  %2281 = fcmp oge float 0xFFF0000000000000, %2280
  %2282 = select i1 %2281, float 0xFFF0000000000000, float %2280
  %2283 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 10, i64 0
  %2284 = load volatile float* %2283, align 4
  %2285 = fcmp oge float %2282, %2284
  %2286 = fcmp ueq float %2282, 0.000000e+00
  %2287 = or i1 %2285, %2286
  %2288 = select i1 %2287, float %2282, float %2284
  %2289 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 11, i64 0
  %2290 = load volatile float* %2289, align 4
  %2291 = fcmp oge float %2288, %2290
  %2292 = fcmp ueq float %2288, 0.000000e+00
  %2293 = or i1 %2291, %2292
  %2294 = select i1 %2293, float %2288, float %2290
  %2295 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 9, i64 0
  %2296 = load volatile float* %2295, align 4
  %2297 = fcmp oge float %2294, %2296
  %2298 = fcmp ueq float %2294, 0.000000e+00
  %2299 = or i1 %2297, %2298
  %2300 = select i1 %2299, float %2294, float %2296
  %2301 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 10, i64 0
  %2302 = load volatile float* %2301, align 4
  %2303 = fcmp oge float %2300, %2302
  %2304 = fcmp ueq float %2300, 0.000000e+00
  %2305 = or i1 %2303, %2304
  %2306 = select i1 %2305, float %2300, float %2302
  %2307 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 11, i64 0
  %2308 = load volatile float* %2307, align 4
  %2309 = fcmp oge float %2306, %2308
  %2310 = fcmp ueq float %2306, 0.000000e+00
  %2311 = or i1 %2309, %2310
  %2312 = select i1 %2311, float %2306, float %2308
  %2313 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 9, i64 0
  %2314 = load volatile float* %2313, align 4
  %2315 = fcmp oge float %2312, %2314
  %2316 = fcmp ueq float %2312, 0.000000e+00
  %2317 = or i1 %2315, %2316
  %2318 = select i1 %2317, float %2312, float %2314
  %2319 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 10, i64 0
  %2320 = load volatile float* %2319, align 4
  %2321 = fcmp oge float %2318, %2320
  %2322 = fcmp ueq float %2318, 0.000000e+00
  %2323 = or i1 %2321, %2322
  %2324 = select i1 %2323, float %2318, float %2320
  %2325 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 11, i64 0
  %2326 = load volatile float* %2325, align 4
  %2327 = fcmp oge float %2324, %2326
  %2328 = fcmp ueq float %2324, 0.000000e+00
  %2329 = or i1 %2327, %2328
  %2330 = select i1 %2329, float %2324, float %2326
  %2331 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 4, i64 3, i64 0
  store volatile float %2330, float* %2331, align 4
  %2332 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 12, i64 0
  %2333 = load volatile float* %2332, align 4
  %2334 = fcmp oge float 0xFFF0000000000000, %2333
  %2335 = select i1 %2334, float 0xFFF0000000000000, float %2333
  %2336 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 13, i64 0
  %2337 = load volatile float* %2336, align 4
  %2338 = fcmp oge float %2335, %2337
  %2339 = fcmp ueq float %2335, 0.000000e+00
  %2340 = or i1 %2338, %2339
  %2341 = select i1 %2340, float %2335, float %2337
  %2342 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 14, i64 0
  %2343 = load volatile float* %2342, align 4
  %2344 = fcmp oge float %2341, %2343
  %2345 = fcmp ueq float %2341, 0.000000e+00
  %2346 = or i1 %2344, %2345
  %2347 = select i1 %2346, float %2341, float %2343
  %2348 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 12, i64 0
  %2349 = load volatile float* %2348, align 4
  %2350 = fcmp oge float %2347, %2349
  %2351 = fcmp ueq float %2347, 0.000000e+00
  %2352 = or i1 %2350, %2351
  %2353 = select i1 %2352, float %2347, float %2349
  %2354 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 13, i64 0
  %2355 = load volatile float* %2354, align 4
  %2356 = fcmp oge float %2353, %2355
  %2357 = fcmp ueq float %2353, 0.000000e+00
  %2358 = or i1 %2356, %2357
  %2359 = select i1 %2358, float %2353, float %2355
  %2360 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 14, i64 0
  %2361 = load volatile float* %2360, align 4
  %2362 = fcmp oge float %2359, %2361
  %2363 = fcmp ueq float %2359, 0.000000e+00
  %2364 = or i1 %2362, %2363
  %2365 = select i1 %2364, float %2359, float %2361
  %2366 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 12, i64 0
  %2367 = load volatile float* %2366, align 4
  %2368 = fcmp oge float %2365, %2367
  %2369 = fcmp ueq float %2365, 0.000000e+00
  %2370 = or i1 %2368, %2369
  %2371 = select i1 %2370, float %2365, float %2367
  %2372 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 13, i64 0
  %2373 = load volatile float* %2372, align 4
  %2374 = fcmp oge float %2371, %2373
  %2375 = fcmp ueq float %2371, 0.000000e+00
  %2376 = or i1 %2374, %2375
  %2377 = select i1 %2376, float %2371, float %2373
  %2378 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 14, i64 0
  %2379 = load volatile float* %2378, align 4
  %2380 = fcmp oge float %2377, %2379
  %2381 = fcmp ueq float %2377, 0.000000e+00
  %2382 = or i1 %2380, %2381
  %2383 = select i1 %2382, float %2377, float %2379
  %2384 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 4, i64 4, i64 0
  store volatile float %2383, float* %2384, align 4
  %2385 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 15, i64 0
  %2386 = load volatile float* %2385, align 4
  %2387 = fcmp oge float 0xFFF0000000000000, %2386
  %2388 = select i1 %2387, float 0xFFF0000000000000, float %2386
  %2389 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 16, i64 0
  %2390 = load volatile float* %2389, align 4
  %2391 = fcmp oge float %2388, %2390
  %2392 = fcmp ueq float %2388, 0.000000e+00
  %2393 = or i1 %2391, %2392
  %2394 = select i1 %2393, float %2388, float %2390
  %2395 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 17, i64 0
  %2396 = load volatile float* %2395, align 4
  %2397 = fcmp oge float %2394, %2396
  %2398 = fcmp ueq float %2394, 0.000000e+00
  %2399 = or i1 %2397, %2398
  %2400 = select i1 %2399, float %2394, float %2396
  %2401 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 15, i64 0
  %2402 = load volatile float* %2401, align 4
  %2403 = fcmp oge float %2400, %2402
  %2404 = fcmp ueq float %2400, 0.000000e+00
  %2405 = or i1 %2403, %2404
  %2406 = select i1 %2405, float %2400, float %2402
  %2407 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 16, i64 0
  %2408 = load volatile float* %2407, align 4
  %2409 = fcmp oge float %2406, %2408
  %2410 = fcmp ueq float %2406, 0.000000e+00
  %2411 = or i1 %2409, %2410
  %2412 = select i1 %2411, float %2406, float %2408
  %2413 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 17, i64 0
  %2414 = load volatile float* %2413, align 4
  %2415 = fcmp oge float %2412, %2414
  %2416 = fcmp ueq float %2412, 0.000000e+00
  %2417 = or i1 %2415, %2416
  %2418 = select i1 %2417, float %2412, float %2414
  %2419 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 15, i64 0
  %2420 = load volatile float* %2419, align 4
  %2421 = fcmp oge float %2418, %2420
  %2422 = fcmp ueq float %2418, 0.000000e+00
  %2423 = or i1 %2421, %2422
  %2424 = select i1 %2423, float %2418, float %2420
  %2425 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 16, i64 0
  %2426 = load volatile float* %2425, align 4
  %2427 = fcmp oge float %2424, %2426
  %2428 = fcmp ueq float %2424, 0.000000e+00
  %2429 = or i1 %2427, %2428
  %2430 = select i1 %2429, float %2424, float %2426
  %2431 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 17, i64 0
  %2432 = load volatile float* %2431, align 4
  %2433 = fcmp oge float %2430, %2432
  %2434 = fcmp ueq float %2430, 0.000000e+00
  %2435 = or i1 %2433, %2434
  %2436 = select i1 %2435, float %2430, float %2432
  %2437 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 4, i64 5, i64 0
  store volatile float %2436, float* %2437, align 4
  %2438 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 18, i64 0
  %2439 = load volatile float* %2438, align 4
  %2440 = fcmp oge float 0xFFF0000000000000, %2439
  %2441 = select i1 %2440, float 0xFFF0000000000000, float %2439
  %2442 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 19, i64 0
  %2443 = load volatile float* %2442, align 4
  %2444 = fcmp oge float %2441, %2443
  %2445 = fcmp ueq float %2441, 0.000000e+00
  %2446 = or i1 %2444, %2445
  %2447 = select i1 %2446, float %2441, float %2443
  %2448 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 20, i64 0
  %2449 = load volatile float* %2448, align 4
  %2450 = fcmp oge float %2447, %2449
  %2451 = fcmp ueq float %2447, 0.000000e+00
  %2452 = or i1 %2450, %2451
  %2453 = select i1 %2452, float %2447, float %2449
  %2454 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 18, i64 0
  %2455 = load volatile float* %2454, align 4
  %2456 = fcmp oge float %2453, %2455
  %2457 = fcmp ueq float %2453, 0.000000e+00
  %2458 = or i1 %2456, %2457
  %2459 = select i1 %2458, float %2453, float %2455
  %2460 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 19, i64 0
  %2461 = load volatile float* %2460, align 4
  %2462 = fcmp oge float %2459, %2461
  %2463 = fcmp ueq float %2459, 0.000000e+00
  %2464 = or i1 %2462, %2463
  %2465 = select i1 %2464, float %2459, float %2461
  %2466 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 20, i64 0
  %2467 = load volatile float* %2466, align 4
  %2468 = fcmp oge float %2465, %2467
  %2469 = fcmp ueq float %2465, 0.000000e+00
  %2470 = or i1 %2468, %2469
  %2471 = select i1 %2470, float %2465, float %2467
  %2472 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 18, i64 0
  %2473 = load volatile float* %2472, align 4
  %2474 = fcmp oge float %2471, %2473
  %2475 = fcmp ueq float %2471, 0.000000e+00
  %2476 = or i1 %2474, %2475
  %2477 = select i1 %2476, float %2471, float %2473
  %2478 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 19, i64 0
  %2479 = load volatile float* %2478, align 4
  %2480 = fcmp oge float %2477, %2479
  %2481 = fcmp ueq float %2477, 0.000000e+00
  %2482 = or i1 %2480, %2481
  %2483 = select i1 %2482, float %2477, float %2479
  %2484 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 20, i64 0
  %2485 = load volatile float* %2484, align 4
  %2486 = fcmp oge float %2483, %2485
  %2487 = fcmp ueq float %2483, 0.000000e+00
  %2488 = or i1 %2486, %2487
  %2489 = select i1 %2488, float %2483, float %2485
  %2490 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 4, i64 6, i64 0
  store volatile float %2489, float* %2490, align 4
  %2491 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 21, i64 0
  %2492 = load volatile float* %2491, align 4
  %2493 = fcmp oge float 0xFFF0000000000000, %2492
  %2494 = select i1 %2493, float 0xFFF0000000000000, float %2492
  %2495 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 22, i64 0
  %2496 = load volatile float* %2495, align 4
  %2497 = fcmp oge float %2494, %2496
  %2498 = fcmp ueq float %2494, 0.000000e+00
  %2499 = or i1 %2497, %2498
  %2500 = select i1 %2499, float %2494, float %2496
  %2501 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 23, i64 0
  %2502 = load volatile float* %2501, align 4
  %2503 = fcmp oge float %2500, %2502
  %2504 = fcmp ueq float %2500, 0.000000e+00
  %2505 = or i1 %2503, %2504
  %2506 = select i1 %2505, float %2500, float %2502
  %2507 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 21, i64 0
  %2508 = load volatile float* %2507, align 4
  %2509 = fcmp oge float %2506, %2508
  %2510 = fcmp ueq float %2506, 0.000000e+00
  %2511 = or i1 %2509, %2510
  %2512 = select i1 %2511, float %2506, float %2508
  %2513 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 22, i64 0
  %2514 = load volatile float* %2513, align 4
  %2515 = fcmp oge float %2512, %2514
  %2516 = fcmp ueq float %2512, 0.000000e+00
  %2517 = or i1 %2515, %2516
  %2518 = select i1 %2517, float %2512, float %2514
  %2519 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 23, i64 0
  %2520 = load volatile float* %2519, align 4
  %2521 = fcmp oge float %2518, %2520
  %2522 = fcmp ueq float %2518, 0.000000e+00
  %2523 = or i1 %2521, %2522
  %2524 = select i1 %2523, float %2518, float %2520
  %2525 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 21, i64 0
  %2526 = load volatile float* %2525, align 4
  %2527 = fcmp oge float %2524, %2526
  %2528 = fcmp ueq float %2524, 0.000000e+00
  %2529 = or i1 %2527, %2528
  %2530 = select i1 %2529, float %2524, float %2526
  %2531 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 22, i64 0
  %2532 = load volatile float* %2531, align 4
  %2533 = fcmp oge float %2530, %2532
  %2534 = fcmp ueq float %2530, 0.000000e+00
  %2535 = or i1 %2533, %2534
  %2536 = select i1 %2535, float %2530, float %2532
  %2537 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 23, i64 0
  %2538 = load volatile float* %2537, align 4
  %2539 = fcmp oge float %2536, %2538
  %2540 = fcmp ueq float %2536, 0.000000e+00
  %2541 = or i1 %2539, %2540
  %2542 = select i1 %2541, float %2536, float %2538
  %2543 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 4, i64 7, i64 0
  store volatile float %2542, float* %2543, align 4
  %2544 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 24, i64 0
  %2545 = load volatile float* %2544, align 4
  %2546 = fcmp oge float 0xFFF0000000000000, %2545
  %2547 = select i1 %2546, float 0xFFF0000000000000, float %2545
  %2548 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 25, i64 0
  %2549 = load volatile float* %2548, align 4
  %2550 = fcmp oge float %2547, %2549
  %2551 = fcmp ueq float %2547, 0.000000e+00
  %2552 = or i1 %2550, %2551
  %2553 = select i1 %2552, float %2547, float %2549
  %2554 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 26, i64 0
  %2555 = load volatile float* %2554, align 4
  %2556 = fcmp oge float %2553, %2555
  %2557 = fcmp ueq float %2553, 0.000000e+00
  %2558 = or i1 %2556, %2557
  %2559 = select i1 %2558, float %2553, float %2555
  %2560 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 24, i64 0
  %2561 = load volatile float* %2560, align 4
  %2562 = fcmp oge float %2559, %2561
  %2563 = fcmp ueq float %2559, 0.000000e+00
  %2564 = or i1 %2562, %2563
  %2565 = select i1 %2564, float %2559, float %2561
  %2566 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 25, i64 0
  %2567 = load volatile float* %2566, align 4
  %2568 = fcmp oge float %2565, %2567
  %2569 = fcmp ueq float %2565, 0.000000e+00
  %2570 = or i1 %2568, %2569
  %2571 = select i1 %2570, float %2565, float %2567
  %2572 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 26, i64 0
  %2573 = load volatile float* %2572, align 4
  %2574 = fcmp oge float %2571, %2573
  %2575 = fcmp ueq float %2571, 0.000000e+00
  %2576 = or i1 %2574, %2575
  %2577 = select i1 %2576, float %2571, float %2573
  %2578 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 24, i64 0
  %2579 = load volatile float* %2578, align 4
  %2580 = fcmp oge float %2577, %2579
  %2581 = fcmp ueq float %2577, 0.000000e+00
  %2582 = or i1 %2580, %2581
  %2583 = select i1 %2582, float %2577, float %2579
  %2584 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 25, i64 0
  %2585 = load volatile float* %2584, align 4
  %2586 = fcmp oge float %2583, %2585
  %2587 = fcmp ueq float %2583, 0.000000e+00
  %2588 = or i1 %2586, %2587
  %2589 = select i1 %2588, float %2583, float %2585
  %2590 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 26, i64 0
  %2591 = load volatile float* %2590, align 4
  %2592 = fcmp oge float %2589, %2591
  %2593 = fcmp ueq float %2589, 0.000000e+00
  %2594 = or i1 %2592, %2593
  %2595 = select i1 %2594, float %2589, float %2591
  %2596 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 4, i64 8, i64 0
  store volatile float %2595, float* %2596, align 4
  %2597 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 27, i64 0
  %2598 = load volatile float* %2597, align 4
  %2599 = fcmp oge float 0xFFF0000000000000, %2598
  %2600 = select i1 %2599, float 0xFFF0000000000000, float %2598
  %2601 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 28, i64 0
  %2602 = load volatile float* %2601, align 4
  %2603 = fcmp oge float %2600, %2602
  %2604 = fcmp ueq float %2600, 0.000000e+00
  %2605 = or i1 %2603, %2604
  %2606 = select i1 %2605, float %2600, float %2602
  %2607 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 29, i64 0
  %2608 = load volatile float* %2607, align 4
  %2609 = fcmp oge float %2606, %2608
  %2610 = fcmp ueq float %2606, 0.000000e+00
  %2611 = or i1 %2609, %2610
  %2612 = select i1 %2611, float %2606, float %2608
  %2613 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 27, i64 0
  %2614 = load volatile float* %2613, align 4
  %2615 = fcmp oge float %2612, %2614
  %2616 = fcmp ueq float %2612, 0.000000e+00
  %2617 = or i1 %2615, %2616
  %2618 = select i1 %2617, float %2612, float %2614
  %2619 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 28, i64 0
  %2620 = load volatile float* %2619, align 4
  %2621 = fcmp oge float %2618, %2620
  %2622 = fcmp ueq float %2618, 0.000000e+00
  %2623 = or i1 %2621, %2622
  %2624 = select i1 %2623, float %2618, float %2620
  %2625 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 29, i64 0
  %2626 = load volatile float* %2625, align 4
  %2627 = fcmp oge float %2624, %2626
  %2628 = fcmp ueq float %2624, 0.000000e+00
  %2629 = or i1 %2627, %2628
  %2630 = select i1 %2629, float %2624, float %2626
  %2631 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 27, i64 0
  %2632 = load volatile float* %2631, align 4
  %2633 = fcmp oge float %2630, %2632
  %2634 = fcmp ueq float %2630, 0.000000e+00
  %2635 = or i1 %2633, %2634
  %2636 = select i1 %2635, float %2630, float %2632
  %2637 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 28, i64 0
  %2638 = load volatile float* %2637, align 4
  %2639 = fcmp oge float %2636, %2638
  %2640 = fcmp ueq float %2636, 0.000000e+00
  %2641 = or i1 %2639, %2640
  %2642 = select i1 %2641, float %2636, float %2638
  %2643 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 29, i64 0
  %2644 = load volatile float* %2643, align 4
  %2645 = fcmp oge float %2642, %2644
  %2646 = fcmp ueq float %2642, 0.000000e+00
  %2647 = or i1 %2645, %2646
  %2648 = select i1 %2647, float %2642, float %2644
  %2649 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 4, i64 9, i64 0
  store volatile float %2648, float* %2649, align 4
  %2650 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 0, i64 0
  %2651 = load volatile float* %2650, align 4
  %2652 = fcmp oge float 0xFFF0000000000000, %2651
  %2653 = select i1 %2652, float 0xFFF0000000000000, float %2651
  %2654 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 1, i64 0
  %2655 = load volatile float* %2654, align 4
  %2656 = fcmp oge float %2653, %2655
  %2657 = fcmp ueq float %2653, 0.000000e+00
  %2658 = or i1 %2656, %2657
  %2659 = select i1 %2658, float %2653, float %2655
  %2660 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 2, i64 0
  %2661 = load volatile float* %2660, align 4
  %2662 = fcmp oge float %2659, %2661
  %2663 = fcmp ueq float %2659, 0.000000e+00
  %2664 = or i1 %2662, %2663
  %2665 = select i1 %2664, float %2659, float %2661
  %2666 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 0, i64 0
  %2667 = load volatile float* %2666, align 4
  %2668 = fcmp oge float %2665, %2667
  %2669 = fcmp ueq float %2665, 0.000000e+00
  %2670 = or i1 %2668, %2669
  %2671 = select i1 %2670, float %2665, float %2667
  %2672 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 1, i64 0
  %2673 = load volatile float* %2672, align 4
  %2674 = fcmp oge float %2671, %2673
  %2675 = fcmp ueq float %2671, 0.000000e+00
  %2676 = or i1 %2674, %2675
  %2677 = select i1 %2676, float %2671, float %2673
  %2678 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 2, i64 0
  %2679 = load volatile float* %2678, align 4
  %2680 = fcmp oge float %2677, %2679
  %2681 = fcmp ueq float %2677, 0.000000e+00
  %2682 = or i1 %2680, %2681
  %2683 = select i1 %2682, float %2677, float %2679
  %2684 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 0, i64 0
  %2685 = load volatile float* %2684, align 4
  %2686 = fcmp oge float %2683, %2685
  %2687 = fcmp ueq float %2683, 0.000000e+00
  %2688 = or i1 %2686, %2687
  %2689 = select i1 %2688, float %2683, float %2685
  %2690 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 1, i64 0
  %2691 = load volatile float* %2690, align 4
  %2692 = fcmp oge float %2689, %2691
  %2693 = fcmp ueq float %2689, 0.000000e+00
  %2694 = or i1 %2692, %2693
  %2695 = select i1 %2694, float %2689, float %2691
  %2696 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 2, i64 0
  %2697 = load volatile float* %2696, align 4
  %2698 = fcmp oge float %2695, %2697
  %2699 = fcmp ueq float %2695, 0.000000e+00
  %2700 = or i1 %2698, %2699
  %2701 = select i1 %2700, float %2695, float %2697
  %2702 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 5, i64 0, i64 0
  store volatile float %2701, float* %2702, align 4
  %2703 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 3, i64 0
  %2704 = load volatile float* %2703, align 4
  %2705 = fcmp oge float 0xFFF0000000000000, %2704
  %2706 = select i1 %2705, float 0xFFF0000000000000, float %2704
  %2707 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 4, i64 0
  %2708 = load volatile float* %2707, align 4
  %2709 = fcmp oge float %2706, %2708
  %2710 = fcmp ueq float %2706, 0.000000e+00
  %2711 = or i1 %2709, %2710
  %2712 = select i1 %2711, float %2706, float %2708
  %2713 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 5, i64 0
  %2714 = load volatile float* %2713, align 4
  %2715 = fcmp oge float %2712, %2714
  %2716 = fcmp ueq float %2712, 0.000000e+00
  %2717 = or i1 %2715, %2716
  %2718 = select i1 %2717, float %2712, float %2714
  %2719 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 3, i64 0
  %2720 = load volatile float* %2719, align 4
  %2721 = fcmp oge float %2718, %2720
  %2722 = fcmp ueq float %2718, 0.000000e+00
  %2723 = or i1 %2721, %2722
  %2724 = select i1 %2723, float %2718, float %2720
  %2725 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 4, i64 0
  %2726 = load volatile float* %2725, align 4
  %2727 = fcmp oge float %2724, %2726
  %2728 = fcmp ueq float %2724, 0.000000e+00
  %2729 = or i1 %2727, %2728
  %2730 = select i1 %2729, float %2724, float %2726
  %2731 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 5, i64 0
  %2732 = load volatile float* %2731, align 4
  %2733 = fcmp oge float %2730, %2732
  %2734 = fcmp ueq float %2730, 0.000000e+00
  %2735 = or i1 %2733, %2734
  %2736 = select i1 %2735, float %2730, float %2732
  %2737 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 3, i64 0
  %2738 = load volatile float* %2737, align 4
  %2739 = fcmp oge float %2736, %2738
  %2740 = fcmp ueq float %2736, 0.000000e+00
  %2741 = or i1 %2739, %2740
  %2742 = select i1 %2741, float %2736, float %2738
  %2743 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 4, i64 0
  %2744 = load volatile float* %2743, align 4
  %2745 = fcmp oge float %2742, %2744
  %2746 = fcmp ueq float %2742, 0.000000e+00
  %2747 = or i1 %2745, %2746
  %2748 = select i1 %2747, float %2742, float %2744
  %2749 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 5, i64 0
  %2750 = load volatile float* %2749, align 4
  %2751 = fcmp oge float %2748, %2750
  %2752 = fcmp ueq float %2748, 0.000000e+00
  %2753 = or i1 %2751, %2752
  %2754 = select i1 %2753, float %2748, float %2750
  %2755 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 5, i64 1, i64 0
  store volatile float %2754, float* %2755, align 4
  %2756 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 6, i64 0
  %2757 = load volatile float* %2756, align 4
  %2758 = fcmp oge float 0xFFF0000000000000, %2757
  %2759 = select i1 %2758, float 0xFFF0000000000000, float %2757
  %2760 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 7, i64 0
  %2761 = load volatile float* %2760, align 4
  %2762 = fcmp oge float %2759, %2761
  %2763 = fcmp ueq float %2759, 0.000000e+00
  %2764 = or i1 %2762, %2763
  %2765 = select i1 %2764, float %2759, float %2761
  %2766 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 8, i64 0
  %2767 = load volatile float* %2766, align 4
  %2768 = fcmp oge float %2765, %2767
  %2769 = fcmp ueq float %2765, 0.000000e+00
  %2770 = or i1 %2768, %2769
  %2771 = select i1 %2770, float %2765, float %2767
  %2772 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 6, i64 0
  %2773 = load volatile float* %2772, align 4
  %2774 = fcmp oge float %2771, %2773
  %2775 = fcmp ueq float %2771, 0.000000e+00
  %2776 = or i1 %2774, %2775
  %2777 = select i1 %2776, float %2771, float %2773
  %2778 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 7, i64 0
  %2779 = load volatile float* %2778, align 4
  %2780 = fcmp oge float %2777, %2779
  %2781 = fcmp ueq float %2777, 0.000000e+00
  %2782 = or i1 %2780, %2781
  %2783 = select i1 %2782, float %2777, float %2779
  %2784 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 8, i64 0
  %2785 = load volatile float* %2784, align 4
  %2786 = fcmp oge float %2783, %2785
  %2787 = fcmp ueq float %2783, 0.000000e+00
  %2788 = or i1 %2786, %2787
  %2789 = select i1 %2788, float %2783, float %2785
  %2790 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 6, i64 0
  %2791 = load volatile float* %2790, align 4
  %2792 = fcmp oge float %2789, %2791
  %2793 = fcmp ueq float %2789, 0.000000e+00
  %2794 = or i1 %2792, %2793
  %2795 = select i1 %2794, float %2789, float %2791
  %2796 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 7, i64 0
  %2797 = load volatile float* %2796, align 4
  %2798 = fcmp oge float %2795, %2797
  %2799 = fcmp ueq float %2795, 0.000000e+00
  %2800 = or i1 %2798, %2799
  %2801 = select i1 %2800, float %2795, float %2797
  %2802 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 8, i64 0
  %2803 = load volatile float* %2802, align 4
  %2804 = fcmp oge float %2801, %2803
  %2805 = fcmp ueq float %2801, 0.000000e+00
  %2806 = or i1 %2804, %2805
  %2807 = select i1 %2806, float %2801, float %2803
  %2808 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 5, i64 2, i64 0
  store volatile float %2807, float* %2808, align 4
  %2809 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 9, i64 0
  %2810 = load volatile float* %2809, align 4
  %2811 = fcmp oge float 0xFFF0000000000000, %2810
  %2812 = select i1 %2811, float 0xFFF0000000000000, float %2810
  %2813 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 10, i64 0
  %2814 = load volatile float* %2813, align 4
  %2815 = fcmp oge float %2812, %2814
  %2816 = fcmp ueq float %2812, 0.000000e+00
  %2817 = or i1 %2815, %2816
  %2818 = select i1 %2817, float %2812, float %2814
  %2819 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 11, i64 0
  %2820 = load volatile float* %2819, align 4
  %2821 = fcmp oge float %2818, %2820
  %2822 = fcmp ueq float %2818, 0.000000e+00
  %2823 = or i1 %2821, %2822
  %2824 = select i1 %2823, float %2818, float %2820
  %2825 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 9, i64 0
  %2826 = load volatile float* %2825, align 4
  %2827 = fcmp oge float %2824, %2826
  %2828 = fcmp ueq float %2824, 0.000000e+00
  %2829 = or i1 %2827, %2828
  %2830 = select i1 %2829, float %2824, float %2826
  %2831 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 10, i64 0
  %2832 = load volatile float* %2831, align 4
  %2833 = fcmp oge float %2830, %2832
  %2834 = fcmp ueq float %2830, 0.000000e+00
  %2835 = or i1 %2833, %2834
  %2836 = select i1 %2835, float %2830, float %2832
  %2837 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 11, i64 0
  %2838 = load volatile float* %2837, align 4
  %2839 = fcmp oge float %2836, %2838
  %2840 = fcmp ueq float %2836, 0.000000e+00
  %2841 = or i1 %2839, %2840
  %2842 = select i1 %2841, float %2836, float %2838
  %2843 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 9, i64 0
  %2844 = load volatile float* %2843, align 4
  %2845 = fcmp oge float %2842, %2844
  %2846 = fcmp ueq float %2842, 0.000000e+00
  %2847 = or i1 %2845, %2846
  %2848 = select i1 %2847, float %2842, float %2844
  %2849 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 10, i64 0
  %2850 = load volatile float* %2849, align 4
  %2851 = fcmp oge float %2848, %2850
  %2852 = fcmp ueq float %2848, 0.000000e+00
  %2853 = or i1 %2851, %2852
  %2854 = select i1 %2853, float %2848, float %2850
  %2855 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 11, i64 0
  %2856 = load volatile float* %2855, align 4
  %2857 = fcmp oge float %2854, %2856
  %2858 = fcmp ueq float %2854, 0.000000e+00
  %2859 = or i1 %2857, %2858
  %2860 = select i1 %2859, float %2854, float %2856
  %2861 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 5, i64 3, i64 0
  store volatile float %2860, float* %2861, align 4
  %2862 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 12, i64 0
  %2863 = load volatile float* %2862, align 4
  %2864 = fcmp oge float 0xFFF0000000000000, %2863
  %2865 = select i1 %2864, float 0xFFF0000000000000, float %2863
  %2866 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 13, i64 0
  %2867 = load volatile float* %2866, align 4
  %2868 = fcmp oge float %2865, %2867
  %2869 = fcmp ueq float %2865, 0.000000e+00
  %2870 = or i1 %2868, %2869
  %2871 = select i1 %2870, float %2865, float %2867
  %2872 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 14, i64 0
  %2873 = load volatile float* %2872, align 4
  %2874 = fcmp oge float %2871, %2873
  %2875 = fcmp ueq float %2871, 0.000000e+00
  %2876 = or i1 %2874, %2875
  %2877 = select i1 %2876, float %2871, float %2873
  %2878 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 12, i64 0
  %2879 = load volatile float* %2878, align 4
  %2880 = fcmp oge float %2877, %2879
  %2881 = fcmp ueq float %2877, 0.000000e+00
  %2882 = or i1 %2880, %2881
  %2883 = select i1 %2882, float %2877, float %2879
  %2884 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 13, i64 0
  %2885 = load volatile float* %2884, align 4
  %2886 = fcmp oge float %2883, %2885
  %2887 = fcmp ueq float %2883, 0.000000e+00
  %2888 = or i1 %2886, %2887
  %2889 = select i1 %2888, float %2883, float %2885
  %2890 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 14, i64 0
  %2891 = load volatile float* %2890, align 4
  %2892 = fcmp oge float %2889, %2891
  %2893 = fcmp ueq float %2889, 0.000000e+00
  %2894 = or i1 %2892, %2893
  %2895 = select i1 %2894, float %2889, float %2891
  %2896 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 12, i64 0
  %2897 = load volatile float* %2896, align 4
  %2898 = fcmp oge float %2895, %2897
  %2899 = fcmp ueq float %2895, 0.000000e+00
  %2900 = or i1 %2898, %2899
  %2901 = select i1 %2900, float %2895, float %2897
  %2902 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 13, i64 0
  %2903 = load volatile float* %2902, align 4
  %2904 = fcmp oge float %2901, %2903
  %2905 = fcmp ueq float %2901, 0.000000e+00
  %2906 = or i1 %2904, %2905
  %2907 = select i1 %2906, float %2901, float %2903
  %2908 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 14, i64 0
  %2909 = load volatile float* %2908, align 4
  %2910 = fcmp oge float %2907, %2909
  %2911 = fcmp ueq float %2907, 0.000000e+00
  %2912 = or i1 %2910, %2911
  %2913 = select i1 %2912, float %2907, float %2909
  %2914 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 5, i64 4, i64 0
  store volatile float %2913, float* %2914, align 4
  %2915 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 15, i64 0
  %2916 = load volatile float* %2915, align 4
  %2917 = fcmp oge float 0xFFF0000000000000, %2916
  %2918 = select i1 %2917, float 0xFFF0000000000000, float %2916
  %2919 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 16, i64 0
  %2920 = load volatile float* %2919, align 4
  %2921 = fcmp oge float %2918, %2920
  %2922 = fcmp ueq float %2918, 0.000000e+00
  %2923 = or i1 %2921, %2922
  %2924 = select i1 %2923, float %2918, float %2920
  %2925 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 17, i64 0
  %2926 = load volatile float* %2925, align 4
  %2927 = fcmp oge float %2924, %2926
  %2928 = fcmp ueq float %2924, 0.000000e+00
  %2929 = or i1 %2927, %2928
  %2930 = select i1 %2929, float %2924, float %2926
  %2931 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 15, i64 0
  %2932 = load volatile float* %2931, align 4
  %2933 = fcmp oge float %2930, %2932
  %2934 = fcmp ueq float %2930, 0.000000e+00
  %2935 = or i1 %2933, %2934
  %2936 = select i1 %2935, float %2930, float %2932
  %2937 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 16, i64 0
  %2938 = load volatile float* %2937, align 4
  %2939 = fcmp oge float %2936, %2938
  %2940 = fcmp ueq float %2936, 0.000000e+00
  %2941 = or i1 %2939, %2940
  %2942 = select i1 %2941, float %2936, float %2938
  %2943 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 17, i64 0
  %2944 = load volatile float* %2943, align 4
  %2945 = fcmp oge float %2942, %2944
  %2946 = fcmp ueq float %2942, 0.000000e+00
  %2947 = or i1 %2945, %2946
  %2948 = select i1 %2947, float %2942, float %2944
  %2949 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 15, i64 0
  %2950 = load volatile float* %2949, align 4
  %2951 = fcmp oge float %2948, %2950
  %2952 = fcmp ueq float %2948, 0.000000e+00
  %2953 = or i1 %2951, %2952
  %2954 = select i1 %2953, float %2948, float %2950
  %2955 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 16, i64 0
  %2956 = load volatile float* %2955, align 4
  %2957 = fcmp oge float %2954, %2956
  %2958 = fcmp ueq float %2954, 0.000000e+00
  %2959 = or i1 %2957, %2958
  %2960 = select i1 %2959, float %2954, float %2956
  %2961 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 17, i64 0
  %2962 = load volatile float* %2961, align 4
  %2963 = fcmp oge float %2960, %2962
  %2964 = fcmp ueq float %2960, 0.000000e+00
  %2965 = or i1 %2963, %2964
  %2966 = select i1 %2965, float %2960, float %2962
  %2967 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 5, i64 5, i64 0
  store volatile float %2966, float* %2967, align 4
  %2968 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 18, i64 0
  %2969 = load volatile float* %2968, align 4
  %2970 = fcmp oge float 0xFFF0000000000000, %2969
  %2971 = select i1 %2970, float 0xFFF0000000000000, float %2969
  %2972 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 19, i64 0
  %2973 = load volatile float* %2972, align 4
  %2974 = fcmp oge float %2971, %2973
  %2975 = fcmp ueq float %2971, 0.000000e+00
  %2976 = or i1 %2974, %2975
  %2977 = select i1 %2976, float %2971, float %2973
  %2978 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 20, i64 0
  %2979 = load volatile float* %2978, align 4
  %2980 = fcmp oge float %2977, %2979
  %2981 = fcmp ueq float %2977, 0.000000e+00
  %2982 = or i1 %2980, %2981
  %2983 = select i1 %2982, float %2977, float %2979
  %2984 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 18, i64 0
  %2985 = load volatile float* %2984, align 4
  %2986 = fcmp oge float %2983, %2985
  %2987 = fcmp ueq float %2983, 0.000000e+00
  %2988 = or i1 %2986, %2987
  %2989 = select i1 %2988, float %2983, float %2985
  %2990 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 19, i64 0
  %2991 = load volatile float* %2990, align 4
  %2992 = fcmp oge float %2989, %2991
  %2993 = fcmp ueq float %2989, 0.000000e+00
  %2994 = or i1 %2992, %2993
  %2995 = select i1 %2994, float %2989, float %2991
  %2996 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 20, i64 0
  %2997 = load volatile float* %2996, align 4
  %2998 = fcmp oge float %2995, %2997
  %2999 = fcmp ueq float %2995, 0.000000e+00
  %3000 = or i1 %2998, %2999
  %3001 = select i1 %3000, float %2995, float %2997
  %3002 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 18, i64 0
  %3003 = load volatile float* %3002, align 4
  %3004 = fcmp oge float %3001, %3003
  %3005 = fcmp ueq float %3001, 0.000000e+00
  %3006 = or i1 %3004, %3005
  %3007 = select i1 %3006, float %3001, float %3003
  %3008 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 19, i64 0
  %3009 = load volatile float* %3008, align 4
  %3010 = fcmp oge float %3007, %3009
  %3011 = fcmp ueq float %3007, 0.000000e+00
  %3012 = or i1 %3010, %3011
  %3013 = select i1 %3012, float %3007, float %3009
  %3014 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 20, i64 0
  %3015 = load volatile float* %3014, align 4
  %3016 = fcmp oge float %3013, %3015
  %3017 = fcmp ueq float %3013, 0.000000e+00
  %3018 = or i1 %3016, %3017
  %3019 = select i1 %3018, float %3013, float %3015
  %3020 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 5, i64 6, i64 0
  store volatile float %3019, float* %3020, align 4
  %3021 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 21, i64 0
  %3022 = load volatile float* %3021, align 4
  %3023 = fcmp oge float 0xFFF0000000000000, %3022
  %3024 = select i1 %3023, float 0xFFF0000000000000, float %3022
  %3025 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 22, i64 0
  %3026 = load volatile float* %3025, align 4
  %3027 = fcmp oge float %3024, %3026
  %3028 = fcmp ueq float %3024, 0.000000e+00
  %3029 = or i1 %3027, %3028
  %3030 = select i1 %3029, float %3024, float %3026
  %3031 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 23, i64 0
  %3032 = load volatile float* %3031, align 4
  %3033 = fcmp oge float %3030, %3032
  %3034 = fcmp ueq float %3030, 0.000000e+00
  %3035 = or i1 %3033, %3034
  %3036 = select i1 %3035, float %3030, float %3032
  %3037 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 21, i64 0
  %3038 = load volatile float* %3037, align 4
  %3039 = fcmp oge float %3036, %3038
  %3040 = fcmp ueq float %3036, 0.000000e+00
  %3041 = or i1 %3039, %3040
  %3042 = select i1 %3041, float %3036, float %3038
  %3043 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 22, i64 0
  %3044 = load volatile float* %3043, align 4
  %3045 = fcmp oge float %3042, %3044
  %3046 = fcmp ueq float %3042, 0.000000e+00
  %3047 = or i1 %3045, %3046
  %3048 = select i1 %3047, float %3042, float %3044
  %3049 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 23, i64 0
  %3050 = load volatile float* %3049, align 4
  %3051 = fcmp oge float %3048, %3050
  %3052 = fcmp ueq float %3048, 0.000000e+00
  %3053 = or i1 %3051, %3052
  %3054 = select i1 %3053, float %3048, float %3050
  %3055 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 21, i64 0
  %3056 = load volatile float* %3055, align 4
  %3057 = fcmp oge float %3054, %3056
  %3058 = fcmp ueq float %3054, 0.000000e+00
  %3059 = or i1 %3057, %3058
  %3060 = select i1 %3059, float %3054, float %3056
  %3061 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 22, i64 0
  %3062 = load volatile float* %3061, align 4
  %3063 = fcmp oge float %3060, %3062
  %3064 = fcmp ueq float %3060, 0.000000e+00
  %3065 = or i1 %3063, %3064
  %3066 = select i1 %3065, float %3060, float %3062
  %3067 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 23, i64 0
  %3068 = load volatile float* %3067, align 4
  %3069 = fcmp oge float %3066, %3068
  %3070 = fcmp ueq float %3066, 0.000000e+00
  %3071 = or i1 %3069, %3070
  %3072 = select i1 %3071, float %3066, float %3068
  %3073 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 5, i64 7, i64 0
  store volatile float %3072, float* %3073, align 4
  %3074 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 24, i64 0
  %3075 = load volatile float* %3074, align 4
  %3076 = fcmp oge float 0xFFF0000000000000, %3075
  %3077 = select i1 %3076, float 0xFFF0000000000000, float %3075
  %3078 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 25, i64 0
  %3079 = load volatile float* %3078, align 4
  %3080 = fcmp oge float %3077, %3079
  %3081 = fcmp ueq float %3077, 0.000000e+00
  %3082 = or i1 %3080, %3081
  %3083 = select i1 %3082, float %3077, float %3079
  %3084 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 26, i64 0
  %3085 = load volatile float* %3084, align 4
  %3086 = fcmp oge float %3083, %3085
  %3087 = fcmp ueq float %3083, 0.000000e+00
  %3088 = or i1 %3086, %3087
  %3089 = select i1 %3088, float %3083, float %3085
  %3090 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 24, i64 0
  %3091 = load volatile float* %3090, align 4
  %3092 = fcmp oge float %3089, %3091
  %3093 = fcmp ueq float %3089, 0.000000e+00
  %3094 = or i1 %3092, %3093
  %3095 = select i1 %3094, float %3089, float %3091
  %3096 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 25, i64 0
  %3097 = load volatile float* %3096, align 4
  %3098 = fcmp oge float %3095, %3097
  %3099 = fcmp ueq float %3095, 0.000000e+00
  %3100 = or i1 %3098, %3099
  %3101 = select i1 %3100, float %3095, float %3097
  %3102 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 26, i64 0
  %3103 = load volatile float* %3102, align 4
  %3104 = fcmp oge float %3101, %3103
  %3105 = fcmp ueq float %3101, 0.000000e+00
  %3106 = or i1 %3104, %3105
  %3107 = select i1 %3106, float %3101, float %3103
  %3108 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 24, i64 0
  %3109 = load volatile float* %3108, align 4
  %3110 = fcmp oge float %3107, %3109
  %3111 = fcmp ueq float %3107, 0.000000e+00
  %3112 = or i1 %3110, %3111
  %3113 = select i1 %3112, float %3107, float %3109
  %3114 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 25, i64 0
  %3115 = load volatile float* %3114, align 4
  %3116 = fcmp oge float %3113, %3115
  %3117 = fcmp ueq float %3113, 0.000000e+00
  %3118 = or i1 %3116, %3117
  %3119 = select i1 %3118, float %3113, float %3115
  %3120 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 26, i64 0
  %3121 = load volatile float* %3120, align 4
  %3122 = fcmp oge float %3119, %3121
  %3123 = fcmp ueq float %3119, 0.000000e+00
  %3124 = or i1 %3122, %3123
  %3125 = select i1 %3124, float %3119, float %3121
  %3126 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 5, i64 8, i64 0
  store volatile float %3125, float* %3126, align 4
  %3127 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 27, i64 0
  %3128 = load volatile float* %3127, align 4
  %3129 = fcmp oge float 0xFFF0000000000000, %3128
  %3130 = select i1 %3129, float 0xFFF0000000000000, float %3128
  %3131 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 28, i64 0
  %3132 = load volatile float* %3131, align 4
  %3133 = fcmp oge float %3130, %3132
  %3134 = fcmp ueq float %3130, 0.000000e+00
  %3135 = or i1 %3133, %3134
  %3136 = select i1 %3135, float %3130, float %3132
  %3137 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 29, i64 0
  %3138 = load volatile float* %3137, align 4
  %3139 = fcmp oge float %3136, %3138
  %3140 = fcmp ueq float %3136, 0.000000e+00
  %3141 = or i1 %3139, %3140
  %3142 = select i1 %3141, float %3136, float %3138
  %3143 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 27, i64 0
  %3144 = load volatile float* %3143, align 4
  %3145 = fcmp oge float %3142, %3144
  %3146 = fcmp ueq float %3142, 0.000000e+00
  %3147 = or i1 %3145, %3146
  %3148 = select i1 %3147, float %3142, float %3144
  %3149 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 28, i64 0
  %3150 = load volatile float* %3149, align 4
  %3151 = fcmp oge float %3148, %3150
  %3152 = fcmp ueq float %3148, 0.000000e+00
  %3153 = or i1 %3151, %3152
  %3154 = select i1 %3153, float %3148, float %3150
  %3155 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 29, i64 0
  %3156 = load volatile float* %3155, align 4
  %3157 = fcmp oge float %3154, %3156
  %3158 = fcmp ueq float %3154, 0.000000e+00
  %3159 = or i1 %3157, %3158
  %3160 = select i1 %3159, float %3154, float %3156
  %3161 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 27, i64 0
  %3162 = load volatile float* %3161, align 4
  %3163 = fcmp oge float %3160, %3162
  %3164 = fcmp ueq float %3160, 0.000000e+00
  %3165 = or i1 %3163, %3164
  %3166 = select i1 %3165, float %3160, float %3162
  %3167 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 28, i64 0
  %3168 = load volatile float* %3167, align 4
  %3169 = fcmp oge float %3166, %3168
  %3170 = fcmp ueq float %3166, 0.000000e+00
  %3171 = or i1 %3169, %3170
  %3172 = select i1 %3171, float %3166, float %3168
  %3173 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 29, i64 0
  %3174 = load volatile float* %3173, align 4
  %3175 = fcmp oge float %3172, %3174
  %3176 = fcmp ueq float %3172, 0.000000e+00
  %3177 = or i1 %3175, %3176
  %3178 = select i1 %3177, float %3172, float %3174
  %3179 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 5, i64 9, i64 0
  store volatile float %3178, float* %3179, align 4
  %3180 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 0, i64 0
  %3181 = load volatile float* %3180, align 4
  %3182 = fcmp oge float 0xFFF0000000000000, %3181
  %3183 = select i1 %3182, float 0xFFF0000000000000, float %3181
  %3184 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 1, i64 0
  %3185 = load volatile float* %3184, align 4
  %3186 = fcmp oge float %3183, %3185
  %3187 = fcmp ueq float %3183, 0.000000e+00
  %3188 = or i1 %3186, %3187
  %3189 = select i1 %3188, float %3183, float %3185
  %3190 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 2, i64 0
  %3191 = load volatile float* %3190, align 4
  %3192 = fcmp oge float %3189, %3191
  %3193 = fcmp ueq float %3189, 0.000000e+00
  %3194 = or i1 %3192, %3193
  %3195 = select i1 %3194, float %3189, float %3191
  %3196 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 0, i64 0
  %3197 = load volatile float* %3196, align 4
  %3198 = fcmp oge float %3195, %3197
  %3199 = fcmp ueq float %3195, 0.000000e+00
  %3200 = or i1 %3198, %3199
  %3201 = select i1 %3200, float %3195, float %3197
  %3202 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 1, i64 0
  %3203 = load volatile float* %3202, align 4
  %3204 = fcmp oge float %3201, %3203
  %3205 = fcmp ueq float %3201, 0.000000e+00
  %3206 = or i1 %3204, %3205
  %3207 = select i1 %3206, float %3201, float %3203
  %3208 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 2, i64 0
  %3209 = load volatile float* %3208, align 4
  %3210 = fcmp oge float %3207, %3209
  %3211 = fcmp ueq float %3207, 0.000000e+00
  %3212 = or i1 %3210, %3211
  %3213 = select i1 %3212, float %3207, float %3209
  %3214 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 0, i64 0
  %3215 = load volatile float* %3214, align 4
  %3216 = fcmp oge float %3213, %3215
  %3217 = fcmp ueq float %3213, 0.000000e+00
  %3218 = or i1 %3216, %3217
  %3219 = select i1 %3218, float %3213, float %3215
  %3220 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 1, i64 0
  %3221 = load volatile float* %3220, align 4
  %3222 = fcmp oge float %3219, %3221
  %3223 = fcmp ueq float %3219, 0.000000e+00
  %3224 = or i1 %3222, %3223
  %3225 = select i1 %3224, float %3219, float %3221
  %3226 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 2, i64 0
  %3227 = load volatile float* %3226, align 4
  %3228 = fcmp oge float %3225, %3227
  %3229 = fcmp ueq float %3225, 0.000000e+00
  %3230 = or i1 %3228, %3229
  %3231 = select i1 %3230, float %3225, float %3227
  %3232 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 6, i64 0, i64 0
  store volatile float %3231, float* %3232, align 4
  %3233 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 3, i64 0
  %3234 = load volatile float* %3233, align 4
  %3235 = fcmp oge float 0xFFF0000000000000, %3234
  %3236 = select i1 %3235, float 0xFFF0000000000000, float %3234
  %3237 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 4, i64 0
  %3238 = load volatile float* %3237, align 4
  %3239 = fcmp oge float %3236, %3238
  %3240 = fcmp ueq float %3236, 0.000000e+00
  %3241 = or i1 %3239, %3240
  %3242 = select i1 %3241, float %3236, float %3238
  %3243 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 5, i64 0
  %3244 = load volatile float* %3243, align 4
  %3245 = fcmp oge float %3242, %3244
  %3246 = fcmp ueq float %3242, 0.000000e+00
  %3247 = or i1 %3245, %3246
  %3248 = select i1 %3247, float %3242, float %3244
  %3249 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 3, i64 0
  %3250 = load volatile float* %3249, align 4
  %3251 = fcmp oge float %3248, %3250
  %3252 = fcmp ueq float %3248, 0.000000e+00
  %3253 = or i1 %3251, %3252
  %3254 = select i1 %3253, float %3248, float %3250
  %3255 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 4, i64 0
  %3256 = load volatile float* %3255, align 4
  %3257 = fcmp oge float %3254, %3256
  %3258 = fcmp ueq float %3254, 0.000000e+00
  %3259 = or i1 %3257, %3258
  %3260 = select i1 %3259, float %3254, float %3256
  %3261 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 5, i64 0
  %3262 = load volatile float* %3261, align 4
  %3263 = fcmp oge float %3260, %3262
  %3264 = fcmp ueq float %3260, 0.000000e+00
  %3265 = or i1 %3263, %3264
  %3266 = select i1 %3265, float %3260, float %3262
  %3267 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 3, i64 0
  %3268 = load volatile float* %3267, align 4
  %3269 = fcmp oge float %3266, %3268
  %3270 = fcmp ueq float %3266, 0.000000e+00
  %3271 = or i1 %3269, %3270
  %3272 = select i1 %3271, float %3266, float %3268
  %3273 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 4, i64 0
  %3274 = load volatile float* %3273, align 4
  %3275 = fcmp oge float %3272, %3274
  %3276 = fcmp ueq float %3272, 0.000000e+00
  %3277 = or i1 %3275, %3276
  %3278 = select i1 %3277, float %3272, float %3274
  %3279 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 5, i64 0
  %3280 = load volatile float* %3279, align 4
  %3281 = fcmp oge float %3278, %3280
  %3282 = fcmp ueq float %3278, 0.000000e+00
  %3283 = or i1 %3281, %3282
  %3284 = select i1 %3283, float %3278, float %3280
  %3285 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 6, i64 1, i64 0
  store volatile float %3284, float* %3285, align 4
  %3286 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 6, i64 0
  %3287 = load volatile float* %3286, align 4
  %3288 = fcmp oge float 0xFFF0000000000000, %3287
  %3289 = select i1 %3288, float 0xFFF0000000000000, float %3287
  %3290 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 7, i64 0
  %3291 = load volatile float* %3290, align 4
  %3292 = fcmp oge float %3289, %3291
  %3293 = fcmp ueq float %3289, 0.000000e+00
  %3294 = or i1 %3292, %3293
  %3295 = select i1 %3294, float %3289, float %3291
  %3296 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 8, i64 0
  %3297 = load volatile float* %3296, align 4
  %3298 = fcmp oge float %3295, %3297
  %3299 = fcmp ueq float %3295, 0.000000e+00
  %3300 = or i1 %3298, %3299
  %3301 = select i1 %3300, float %3295, float %3297
  %3302 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 6, i64 0
  %3303 = load volatile float* %3302, align 4
  %3304 = fcmp oge float %3301, %3303
  %3305 = fcmp ueq float %3301, 0.000000e+00
  %3306 = or i1 %3304, %3305
  %3307 = select i1 %3306, float %3301, float %3303
  %3308 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 7, i64 0
  %3309 = load volatile float* %3308, align 4
  %3310 = fcmp oge float %3307, %3309
  %3311 = fcmp ueq float %3307, 0.000000e+00
  %3312 = or i1 %3310, %3311
  %3313 = select i1 %3312, float %3307, float %3309
  %3314 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 8, i64 0
  %3315 = load volatile float* %3314, align 4
  %3316 = fcmp oge float %3313, %3315
  %3317 = fcmp ueq float %3313, 0.000000e+00
  %3318 = or i1 %3316, %3317
  %3319 = select i1 %3318, float %3313, float %3315
  %3320 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 6, i64 0
  %3321 = load volatile float* %3320, align 4
  %3322 = fcmp oge float %3319, %3321
  %3323 = fcmp ueq float %3319, 0.000000e+00
  %3324 = or i1 %3322, %3323
  %3325 = select i1 %3324, float %3319, float %3321
  %3326 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 7, i64 0
  %3327 = load volatile float* %3326, align 4
  %3328 = fcmp oge float %3325, %3327
  %3329 = fcmp ueq float %3325, 0.000000e+00
  %3330 = or i1 %3328, %3329
  %3331 = select i1 %3330, float %3325, float %3327
  %3332 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 8, i64 0
  %3333 = load volatile float* %3332, align 4
  %3334 = fcmp oge float %3331, %3333
  %3335 = fcmp ueq float %3331, 0.000000e+00
  %3336 = or i1 %3334, %3335
  %3337 = select i1 %3336, float %3331, float %3333
  %3338 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 6, i64 2, i64 0
  store volatile float %3337, float* %3338, align 4
  %3339 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 9, i64 0
  %3340 = load volatile float* %3339, align 4
  %3341 = fcmp oge float 0xFFF0000000000000, %3340
  %3342 = select i1 %3341, float 0xFFF0000000000000, float %3340
  %3343 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 10, i64 0
  %3344 = load volatile float* %3343, align 4
  %3345 = fcmp oge float %3342, %3344
  %3346 = fcmp ueq float %3342, 0.000000e+00
  %3347 = or i1 %3345, %3346
  %3348 = select i1 %3347, float %3342, float %3344
  %3349 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 11, i64 0
  %3350 = load volatile float* %3349, align 4
  %3351 = fcmp oge float %3348, %3350
  %3352 = fcmp ueq float %3348, 0.000000e+00
  %3353 = or i1 %3351, %3352
  %3354 = select i1 %3353, float %3348, float %3350
  %3355 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 9, i64 0
  %3356 = load volatile float* %3355, align 4
  %3357 = fcmp oge float %3354, %3356
  %3358 = fcmp ueq float %3354, 0.000000e+00
  %3359 = or i1 %3357, %3358
  %3360 = select i1 %3359, float %3354, float %3356
  %3361 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 10, i64 0
  %3362 = load volatile float* %3361, align 4
  %3363 = fcmp oge float %3360, %3362
  %3364 = fcmp ueq float %3360, 0.000000e+00
  %3365 = or i1 %3363, %3364
  %3366 = select i1 %3365, float %3360, float %3362
  %3367 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 11, i64 0
  %3368 = load volatile float* %3367, align 4
  %3369 = fcmp oge float %3366, %3368
  %3370 = fcmp ueq float %3366, 0.000000e+00
  %3371 = or i1 %3369, %3370
  %3372 = select i1 %3371, float %3366, float %3368
  %3373 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 9, i64 0
  %3374 = load volatile float* %3373, align 4
  %3375 = fcmp oge float %3372, %3374
  %3376 = fcmp ueq float %3372, 0.000000e+00
  %3377 = or i1 %3375, %3376
  %3378 = select i1 %3377, float %3372, float %3374
  %3379 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 10, i64 0
  %3380 = load volatile float* %3379, align 4
  %3381 = fcmp oge float %3378, %3380
  %3382 = fcmp ueq float %3378, 0.000000e+00
  %3383 = or i1 %3381, %3382
  %3384 = select i1 %3383, float %3378, float %3380
  %3385 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 11, i64 0
  %3386 = load volatile float* %3385, align 4
  %3387 = fcmp oge float %3384, %3386
  %3388 = fcmp ueq float %3384, 0.000000e+00
  %3389 = or i1 %3387, %3388
  %3390 = select i1 %3389, float %3384, float %3386
  %3391 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 6, i64 3, i64 0
  store volatile float %3390, float* %3391, align 4
  %3392 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 12, i64 0
  %3393 = load volatile float* %3392, align 4
  %3394 = fcmp oge float 0xFFF0000000000000, %3393
  %3395 = select i1 %3394, float 0xFFF0000000000000, float %3393
  %3396 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 13, i64 0
  %3397 = load volatile float* %3396, align 4
  %3398 = fcmp oge float %3395, %3397
  %3399 = fcmp ueq float %3395, 0.000000e+00
  %3400 = or i1 %3398, %3399
  %3401 = select i1 %3400, float %3395, float %3397
  %3402 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 14, i64 0
  %3403 = load volatile float* %3402, align 4
  %3404 = fcmp oge float %3401, %3403
  %3405 = fcmp ueq float %3401, 0.000000e+00
  %3406 = or i1 %3404, %3405
  %3407 = select i1 %3406, float %3401, float %3403
  %3408 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 12, i64 0
  %3409 = load volatile float* %3408, align 4
  %3410 = fcmp oge float %3407, %3409
  %3411 = fcmp ueq float %3407, 0.000000e+00
  %3412 = or i1 %3410, %3411
  %3413 = select i1 %3412, float %3407, float %3409
  %3414 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 13, i64 0
  %3415 = load volatile float* %3414, align 4
  %3416 = fcmp oge float %3413, %3415
  %3417 = fcmp ueq float %3413, 0.000000e+00
  %3418 = or i1 %3416, %3417
  %3419 = select i1 %3418, float %3413, float %3415
  %3420 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 14, i64 0
  %3421 = load volatile float* %3420, align 4
  %3422 = fcmp oge float %3419, %3421
  %3423 = fcmp ueq float %3419, 0.000000e+00
  %3424 = or i1 %3422, %3423
  %3425 = select i1 %3424, float %3419, float %3421
  %3426 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 12, i64 0
  %3427 = load volatile float* %3426, align 4
  %3428 = fcmp oge float %3425, %3427
  %3429 = fcmp ueq float %3425, 0.000000e+00
  %3430 = or i1 %3428, %3429
  %3431 = select i1 %3430, float %3425, float %3427
  %3432 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 13, i64 0
  %3433 = load volatile float* %3432, align 4
  %3434 = fcmp oge float %3431, %3433
  %3435 = fcmp ueq float %3431, 0.000000e+00
  %3436 = or i1 %3434, %3435
  %3437 = select i1 %3436, float %3431, float %3433
  %3438 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 14, i64 0
  %3439 = load volatile float* %3438, align 4
  %3440 = fcmp oge float %3437, %3439
  %3441 = fcmp ueq float %3437, 0.000000e+00
  %3442 = or i1 %3440, %3441
  %3443 = select i1 %3442, float %3437, float %3439
  %3444 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 6, i64 4, i64 0
  store volatile float %3443, float* %3444, align 4
  %3445 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 15, i64 0
  %3446 = load volatile float* %3445, align 4
  %3447 = fcmp oge float 0xFFF0000000000000, %3446
  %3448 = select i1 %3447, float 0xFFF0000000000000, float %3446
  %3449 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 16, i64 0
  %3450 = load volatile float* %3449, align 4
  %3451 = fcmp oge float %3448, %3450
  %3452 = fcmp ueq float %3448, 0.000000e+00
  %3453 = or i1 %3451, %3452
  %3454 = select i1 %3453, float %3448, float %3450
  %3455 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 17, i64 0
  %3456 = load volatile float* %3455, align 4
  %3457 = fcmp oge float %3454, %3456
  %3458 = fcmp ueq float %3454, 0.000000e+00
  %3459 = or i1 %3457, %3458
  %3460 = select i1 %3459, float %3454, float %3456
  %3461 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 15, i64 0
  %3462 = load volatile float* %3461, align 4
  %3463 = fcmp oge float %3460, %3462
  %3464 = fcmp ueq float %3460, 0.000000e+00
  %3465 = or i1 %3463, %3464
  %3466 = select i1 %3465, float %3460, float %3462
  %3467 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 16, i64 0
  %3468 = load volatile float* %3467, align 4
  %3469 = fcmp oge float %3466, %3468
  %3470 = fcmp ueq float %3466, 0.000000e+00
  %3471 = or i1 %3469, %3470
  %3472 = select i1 %3471, float %3466, float %3468
  %3473 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 17, i64 0
  %3474 = load volatile float* %3473, align 4
  %3475 = fcmp oge float %3472, %3474
  %3476 = fcmp ueq float %3472, 0.000000e+00
  %3477 = or i1 %3475, %3476
  %3478 = select i1 %3477, float %3472, float %3474
  %3479 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 15, i64 0
  %3480 = load volatile float* %3479, align 4
  %3481 = fcmp oge float %3478, %3480
  %3482 = fcmp ueq float %3478, 0.000000e+00
  %3483 = or i1 %3481, %3482
  %3484 = select i1 %3483, float %3478, float %3480
  %3485 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 16, i64 0
  %3486 = load volatile float* %3485, align 4
  %3487 = fcmp oge float %3484, %3486
  %3488 = fcmp ueq float %3484, 0.000000e+00
  %3489 = or i1 %3487, %3488
  %3490 = select i1 %3489, float %3484, float %3486
  %3491 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 17, i64 0
  %3492 = load volatile float* %3491, align 4
  %3493 = fcmp oge float %3490, %3492
  %3494 = fcmp ueq float %3490, 0.000000e+00
  %3495 = or i1 %3493, %3494
  %3496 = select i1 %3495, float %3490, float %3492
  %3497 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 6, i64 5, i64 0
  store volatile float %3496, float* %3497, align 4
  %3498 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 18, i64 0
  %3499 = load volatile float* %3498, align 4
  %3500 = fcmp oge float 0xFFF0000000000000, %3499
  %3501 = select i1 %3500, float 0xFFF0000000000000, float %3499
  %3502 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 19, i64 0
  %3503 = load volatile float* %3502, align 4
  %3504 = fcmp oge float %3501, %3503
  %3505 = fcmp ueq float %3501, 0.000000e+00
  %3506 = or i1 %3504, %3505
  %3507 = select i1 %3506, float %3501, float %3503
  %3508 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 20, i64 0
  %3509 = load volatile float* %3508, align 4
  %3510 = fcmp oge float %3507, %3509
  %3511 = fcmp ueq float %3507, 0.000000e+00
  %3512 = or i1 %3510, %3511
  %3513 = select i1 %3512, float %3507, float %3509
  %3514 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 18, i64 0
  %3515 = load volatile float* %3514, align 4
  %3516 = fcmp oge float %3513, %3515
  %3517 = fcmp ueq float %3513, 0.000000e+00
  %3518 = or i1 %3516, %3517
  %3519 = select i1 %3518, float %3513, float %3515
  %3520 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 19, i64 0
  %3521 = load volatile float* %3520, align 4
  %3522 = fcmp oge float %3519, %3521
  %3523 = fcmp ueq float %3519, 0.000000e+00
  %3524 = or i1 %3522, %3523
  %3525 = select i1 %3524, float %3519, float %3521
  %3526 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 20, i64 0
  %3527 = load volatile float* %3526, align 4
  %3528 = fcmp oge float %3525, %3527
  %3529 = fcmp ueq float %3525, 0.000000e+00
  %3530 = or i1 %3528, %3529
  %3531 = select i1 %3530, float %3525, float %3527
  %3532 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 18, i64 0
  %3533 = load volatile float* %3532, align 4
  %3534 = fcmp oge float %3531, %3533
  %3535 = fcmp ueq float %3531, 0.000000e+00
  %3536 = or i1 %3534, %3535
  %3537 = select i1 %3536, float %3531, float %3533
  %3538 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 19, i64 0
  %3539 = load volatile float* %3538, align 4
  %3540 = fcmp oge float %3537, %3539
  %3541 = fcmp ueq float %3537, 0.000000e+00
  %3542 = or i1 %3540, %3541
  %3543 = select i1 %3542, float %3537, float %3539
  %3544 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 20, i64 0
  %3545 = load volatile float* %3544, align 4
  %3546 = fcmp oge float %3543, %3545
  %3547 = fcmp ueq float %3543, 0.000000e+00
  %3548 = or i1 %3546, %3547
  %3549 = select i1 %3548, float %3543, float %3545
  %3550 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 6, i64 6, i64 0
  store volatile float %3549, float* %3550, align 4
  %3551 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 21, i64 0
  %3552 = load volatile float* %3551, align 4
  %3553 = fcmp oge float 0xFFF0000000000000, %3552
  %3554 = select i1 %3553, float 0xFFF0000000000000, float %3552
  %3555 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 22, i64 0
  %3556 = load volatile float* %3555, align 4
  %3557 = fcmp oge float %3554, %3556
  %3558 = fcmp ueq float %3554, 0.000000e+00
  %3559 = or i1 %3557, %3558
  %3560 = select i1 %3559, float %3554, float %3556
  %3561 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 23, i64 0
  %3562 = load volatile float* %3561, align 4
  %3563 = fcmp oge float %3560, %3562
  %3564 = fcmp ueq float %3560, 0.000000e+00
  %3565 = or i1 %3563, %3564
  %3566 = select i1 %3565, float %3560, float %3562
  %3567 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 21, i64 0
  %3568 = load volatile float* %3567, align 4
  %3569 = fcmp oge float %3566, %3568
  %3570 = fcmp ueq float %3566, 0.000000e+00
  %3571 = or i1 %3569, %3570
  %3572 = select i1 %3571, float %3566, float %3568
  %3573 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 22, i64 0
  %3574 = load volatile float* %3573, align 4
  %3575 = fcmp oge float %3572, %3574
  %3576 = fcmp ueq float %3572, 0.000000e+00
  %3577 = or i1 %3575, %3576
  %3578 = select i1 %3577, float %3572, float %3574
  %3579 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 23, i64 0
  %3580 = load volatile float* %3579, align 4
  %3581 = fcmp oge float %3578, %3580
  %3582 = fcmp ueq float %3578, 0.000000e+00
  %3583 = or i1 %3581, %3582
  %3584 = select i1 %3583, float %3578, float %3580
  %3585 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 21, i64 0
  %3586 = load volatile float* %3585, align 4
  %3587 = fcmp oge float %3584, %3586
  %3588 = fcmp ueq float %3584, 0.000000e+00
  %3589 = or i1 %3587, %3588
  %3590 = select i1 %3589, float %3584, float %3586
  %3591 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 22, i64 0
  %3592 = load volatile float* %3591, align 4
  %3593 = fcmp oge float %3590, %3592
  %3594 = fcmp ueq float %3590, 0.000000e+00
  %3595 = or i1 %3593, %3594
  %3596 = select i1 %3595, float %3590, float %3592
  %3597 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 23, i64 0
  %3598 = load volatile float* %3597, align 4
  %3599 = fcmp oge float %3596, %3598
  %3600 = fcmp ueq float %3596, 0.000000e+00
  %3601 = or i1 %3599, %3600
  %3602 = select i1 %3601, float %3596, float %3598
  %3603 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 6, i64 7, i64 0
  store volatile float %3602, float* %3603, align 4
  %3604 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 24, i64 0
  %3605 = load volatile float* %3604, align 4
  %3606 = fcmp oge float 0xFFF0000000000000, %3605
  %3607 = select i1 %3606, float 0xFFF0000000000000, float %3605
  %3608 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 25, i64 0
  %3609 = load volatile float* %3608, align 4
  %3610 = fcmp oge float %3607, %3609
  %3611 = fcmp ueq float %3607, 0.000000e+00
  %3612 = or i1 %3610, %3611
  %3613 = select i1 %3612, float %3607, float %3609
  %3614 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 26, i64 0
  %3615 = load volatile float* %3614, align 4
  %3616 = fcmp oge float %3613, %3615
  %3617 = fcmp ueq float %3613, 0.000000e+00
  %3618 = or i1 %3616, %3617
  %3619 = select i1 %3618, float %3613, float %3615
  %3620 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 24, i64 0
  %3621 = load volatile float* %3620, align 4
  %3622 = fcmp oge float %3619, %3621
  %3623 = fcmp ueq float %3619, 0.000000e+00
  %3624 = or i1 %3622, %3623
  %3625 = select i1 %3624, float %3619, float %3621
  %3626 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 25, i64 0
  %3627 = load volatile float* %3626, align 4
  %3628 = fcmp oge float %3625, %3627
  %3629 = fcmp ueq float %3625, 0.000000e+00
  %3630 = or i1 %3628, %3629
  %3631 = select i1 %3630, float %3625, float %3627
  %3632 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 26, i64 0
  %3633 = load volatile float* %3632, align 4
  %3634 = fcmp oge float %3631, %3633
  %3635 = fcmp ueq float %3631, 0.000000e+00
  %3636 = or i1 %3634, %3635
  %3637 = select i1 %3636, float %3631, float %3633
  %3638 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 24, i64 0
  %3639 = load volatile float* %3638, align 4
  %3640 = fcmp oge float %3637, %3639
  %3641 = fcmp ueq float %3637, 0.000000e+00
  %3642 = or i1 %3640, %3641
  %3643 = select i1 %3642, float %3637, float %3639
  %3644 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 25, i64 0
  %3645 = load volatile float* %3644, align 4
  %3646 = fcmp oge float %3643, %3645
  %3647 = fcmp ueq float %3643, 0.000000e+00
  %3648 = or i1 %3646, %3647
  %3649 = select i1 %3648, float %3643, float %3645
  %3650 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 26, i64 0
  %3651 = load volatile float* %3650, align 4
  %3652 = fcmp oge float %3649, %3651
  %3653 = fcmp ueq float %3649, 0.000000e+00
  %3654 = or i1 %3652, %3653
  %3655 = select i1 %3654, float %3649, float %3651
  %3656 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 6, i64 8, i64 0
  store volatile float %3655, float* %3656, align 4
  %3657 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 27, i64 0
  %3658 = load volatile float* %3657, align 4
  %3659 = fcmp oge float 0xFFF0000000000000, %3658
  %3660 = select i1 %3659, float 0xFFF0000000000000, float %3658
  %3661 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 28, i64 0
  %3662 = load volatile float* %3661, align 4
  %3663 = fcmp oge float %3660, %3662
  %3664 = fcmp ueq float %3660, 0.000000e+00
  %3665 = or i1 %3663, %3664
  %3666 = select i1 %3665, float %3660, float %3662
  %3667 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 29, i64 0
  %3668 = load volatile float* %3667, align 4
  %3669 = fcmp oge float %3666, %3668
  %3670 = fcmp ueq float %3666, 0.000000e+00
  %3671 = or i1 %3669, %3670
  %3672 = select i1 %3671, float %3666, float %3668
  %3673 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 27, i64 0
  %3674 = load volatile float* %3673, align 4
  %3675 = fcmp oge float %3672, %3674
  %3676 = fcmp ueq float %3672, 0.000000e+00
  %3677 = or i1 %3675, %3676
  %3678 = select i1 %3677, float %3672, float %3674
  %3679 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 28, i64 0
  %3680 = load volatile float* %3679, align 4
  %3681 = fcmp oge float %3678, %3680
  %3682 = fcmp ueq float %3678, 0.000000e+00
  %3683 = or i1 %3681, %3682
  %3684 = select i1 %3683, float %3678, float %3680
  %3685 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 29, i64 0
  %3686 = load volatile float* %3685, align 4
  %3687 = fcmp oge float %3684, %3686
  %3688 = fcmp ueq float %3684, 0.000000e+00
  %3689 = or i1 %3687, %3688
  %3690 = select i1 %3689, float %3684, float %3686
  %3691 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 27, i64 0
  %3692 = load volatile float* %3691, align 4
  %3693 = fcmp oge float %3690, %3692
  %3694 = fcmp ueq float %3690, 0.000000e+00
  %3695 = or i1 %3693, %3694
  %3696 = select i1 %3695, float %3690, float %3692
  %3697 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 28, i64 0
  %3698 = load volatile float* %3697, align 4
  %3699 = fcmp oge float %3696, %3698
  %3700 = fcmp ueq float %3696, 0.000000e+00
  %3701 = or i1 %3699, %3700
  %3702 = select i1 %3701, float %3696, float %3698
  %3703 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 29, i64 0
  %3704 = load volatile float* %3703, align 4
  %3705 = fcmp oge float %3702, %3704
  %3706 = fcmp ueq float %3702, 0.000000e+00
  %3707 = or i1 %3705, %3706
  %3708 = select i1 %3707, float %3702, float %3704
  %3709 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 6, i64 9, i64 0
  store volatile float %3708, float* %3709, align 4
  %3710 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 0, i64 0
  %3711 = load volatile float* %3710, align 4
  %3712 = fcmp oge float 0xFFF0000000000000, %3711
  %3713 = select i1 %3712, float 0xFFF0000000000000, float %3711
  %3714 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 1, i64 0
  %3715 = load volatile float* %3714, align 4
  %3716 = fcmp oge float %3713, %3715
  %3717 = fcmp ueq float %3713, 0.000000e+00
  %3718 = or i1 %3716, %3717
  %3719 = select i1 %3718, float %3713, float %3715
  %3720 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 2, i64 0
  %3721 = load volatile float* %3720, align 4
  %3722 = fcmp oge float %3719, %3721
  %3723 = fcmp ueq float %3719, 0.000000e+00
  %3724 = or i1 %3722, %3723
  %3725 = select i1 %3724, float %3719, float %3721
  %3726 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 0, i64 0
  %3727 = load volatile float* %3726, align 4
  %3728 = fcmp oge float %3725, %3727
  %3729 = fcmp ueq float %3725, 0.000000e+00
  %3730 = or i1 %3728, %3729
  %3731 = select i1 %3730, float %3725, float %3727
  %3732 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 1, i64 0
  %3733 = load volatile float* %3732, align 4
  %3734 = fcmp oge float %3731, %3733
  %3735 = fcmp ueq float %3731, 0.000000e+00
  %3736 = or i1 %3734, %3735
  %3737 = select i1 %3736, float %3731, float %3733
  %3738 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 2, i64 0
  %3739 = load volatile float* %3738, align 4
  %3740 = fcmp oge float %3737, %3739
  %3741 = fcmp ueq float %3737, 0.000000e+00
  %3742 = or i1 %3740, %3741
  %3743 = select i1 %3742, float %3737, float %3739
  %3744 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 0, i64 0
  %3745 = load volatile float* %3744, align 4
  %3746 = fcmp oge float %3743, %3745
  %3747 = fcmp ueq float %3743, 0.000000e+00
  %3748 = or i1 %3746, %3747
  %3749 = select i1 %3748, float %3743, float %3745
  %3750 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 1, i64 0
  %3751 = load volatile float* %3750, align 4
  %3752 = fcmp oge float %3749, %3751
  %3753 = fcmp ueq float %3749, 0.000000e+00
  %3754 = or i1 %3752, %3753
  %3755 = select i1 %3754, float %3749, float %3751
  %3756 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 2, i64 0
  %3757 = load volatile float* %3756, align 4
  %3758 = fcmp oge float %3755, %3757
  %3759 = fcmp ueq float %3755, 0.000000e+00
  %3760 = or i1 %3758, %3759
  %3761 = select i1 %3760, float %3755, float %3757
  %3762 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 7, i64 0, i64 0
  store volatile float %3761, float* %3762, align 4
  %3763 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 3, i64 0
  %3764 = load volatile float* %3763, align 4
  %3765 = fcmp oge float 0xFFF0000000000000, %3764
  %3766 = select i1 %3765, float 0xFFF0000000000000, float %3764
  %3767 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 4, i64 0
  %3768 = load volatile float* %3767, align 4
  %3769 = fcmp oge float %3766, %3768
  %3770 = fcmp ueq float %3766, 0.000000e+00
  %3771 = or i1 %3769, %3770
  %3772 = select i1 %3771, float %3766, float %3768
  %3773 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 5, i64 0
  %3774 = load volatile float* %3773, align 4
  %3775 = fcmp oge float %3772, %3774
  %3776 = fcmp ueq float %3772, 0.000000e+00
  %3777 = or i1 %3775, %3776
  %3778 = select i1 %3777, float %3772, float %3774
  %3779 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 3, i64 0
  %3780 = load volatile float* %3779, align 4
  %3781 = fcmp oge float %3778, %3780
  %3782 = fcmp ueq float %3778, 0.000000e+00
  %3783 = or i1 %3781, %3782
  %3784 = select i1 %3783, float %3778, float %3780
  %3785 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 4, i64 0
  %3786 = load volatile float* %3785, align 4
  %3787 = fcmp oge float %3784, %3786
  %3788 = fcmp ueq float %3784, 0.000000e+00
  %3789 = or i1 %3787, %3788
  %3790 = select i1 %3789, float %3784, float %3786
  %3791 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 5, i64 0
  %3792 = load volatile float* %3791, align 4
  %3793 = fcmp oge float %3790, %3792
  %3794 = fcmp ueq float %3790, 0.000000e+00
  %3795 = or i1 %3793, %3794
  %3796 = select i1 %3795, float %3790, float %3792
  %3797 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 3, i64 0
  %3798 = load volatile float* %3797, align 4
  %3799 = fcmp oge float %3796, %3798
  %3800 = fcmp ueq float %3796, 0.000000e+00
  %3801 = or i1 %3799, %3800
  %3802 = select i1 %3801, float %3796, float %3798
  %3803 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 4, i64 0
  %3804 = load volatile float* %3803, align 4
  %3805 = fcmp oge float %3802, %3804
  %3806 = fcmp ueq float %3802, 0.000000e+00
  %3807 = or i1 %3805, %3806
  %3808 = select i1 %3807, float %3802, float %3804
  %3809 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 5, i64 0
  %3810 = load volatile float* %3809, align 4
  %3811 = fcmp oge float %3808, %3810
  %3812 = fcmp ueq float %3808, 0.000000e+00
  %3813 = or i1 %3811, %3812
  %3814 = select i1 %3813, float %3808, float %3810
  %3815 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 7, i64 1, i64 0
  store volatile float %3814, float* %3815, align 4
  %3816 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 6, i64 0
  %3817 = load volatile float* %3816, align 4
  %3818 = fcmp oge float 0xFFF0000000000000, %3817
  %3819 = select i1 %3818, float 0xFFF0000000000000, float %3817
  %3820 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 7, i64 0
  %3821 = load volatile float* %3820, align 4
  %3822 = fcmp oge float %3819, %3821
  %3823 = fcmp ueq float %3819, 0.000000e+00
  %3824 = or i1 %3822, %3823
  %3825 = select i1 %3824, float %3819, float %3821
  %3826 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 8, i64 0
  %3827 = load volatile float* %3826, align 4
  %3828 = fcmp oge float %3825, %3827
  %3829 = fcmp ueq float %3825, 0.000000e+00
  %3830 = or i1 %3828, %3829
  %3831 = select i1 %3830, float %3825, float %3827
  %3832 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 6, i64 0
  %3833 = load volatile float* %3832, align 4
  %3834 = fcmp oge float %3831, %3833
  %3835 = fcmp ueq float %3831, 0.000000e+00
  %3836 = or i1 %3834, %3835
  %3837 = select i1 %3836, float %3831, float %3833
  %3838 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 7, i64 0
  %3839 = load volatile float* %3838, align 4
  %3840 = fcmp oge float %3837, %3839
  %3841 = fcmp ueq float %3837, 0.000000e+00
  %3842 = or i1 %3840, %3841
  %3843 = select i1 %3842, float %3837, float %3839
  %3844 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 8, i64 0
  %3845 = load volatile float* %3844, align 4
  %3846 = fcmp oge float %3843, %3845
  %3847 = fcmp ueq float %3843, 0.000000e+00
  %3848 = or i1 %3846, %3847
  %3849 = select i1 %3848, float %3843, float %3845
  %3850 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 6, i64 0
  %3851 = load volatile float* %3850, align 4
  %3852 = fcmp oge float %3849, %3851
  %3853 = fcmp ueq float %3849, 0.000000e+00
  %3854 = or i1 %3852, %3853
  %3855 = select i1 %3854, float %3849, float %3851
  %3856 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 7, i64 0
  %3857 = load volatile float* %3856, align 4
  %3858 = fcmp oge float %3855, %3857
  %3859 = fcmp ueq float %3855, 0.000000e+00
  %3860 = or i1 %3858, %3859
  %3861 = select i1 %3860, float %3855, float %3857
  %3862 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 8, i64 0
  %3863 = load volatile float* %3862, align 4
  %3864 = fcmp oge float %3861, %3863
  %3865 = fcmp ueq float %3861, 0.000000e+00
  %3866 = or i1 %3864, %3865
  %3867 = select i1 %3866, float %3861, float %3863
  %3868 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 7, i64 2, i64 0
  store volatile float %3867, float* %3868, align 4
  %3869 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 9, i64 0
  %3870 = load volatile float* %3869, align 4
  %3871 = fcmp oge float 0xFFF0000000000000, %3870
  %3872 = select i1 %3871, float 0xFFF0000000000000, float %3870
  %3873 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 10, i64 0
  %3874 = load volatile float* %3873, align 4
  %3875 = fcmp oge float %3872, %3874
  %3876 = fcmp ueq float %3872, 0.000000e+00
  %3877 = or i1 %3875, %3876
  %3878 = select i1 %3877, float %3872, float %3874
  %3879 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 11, i64 0
  %3880 = load volatile float* %3879, align 4
  %3881 = fcmp oge float %3878, %3880
  %3882 = fcmp ueq float %3878, 0.000000e+00
  %3883 = or i1 %3881, %3882
  %3884 = select i1 %3883, float %3878, float %3880
  %3885 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 9, i64 0
  %3886 = load volatile float* %3885, align 4
  %3887 = fcmp oge float %3884, %3886
  %3888 = fcmp ueq float %3884, 0.000000e+00
  %3889 = or i1 %3887, %3888
  %3890 = select i1 %3889, float %3884, float %3886
  %3891 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 10, i64 0
  %3892 = load volatile float* %3891, align 4
  %3893 = fcmp oge float %3890, %3892
  %3894 = fcmp ueq float %3890, 0.000000e+00
  %3895 = or i1 %3893, %3894
  %3896 = select i1 %3895, float %3890, float %3892
  %3897 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 11, i64 0
  %3898 = load volatile float* %3897, align 4
  %3899 = fcmp oge float %3896, %3898
  %3900 = fcmp ueq float %3896, 0.000000e+00
  %3901 = or i1 %3899, %3900
  %3902 = select i1 %3901, float %3896, float %3898
  %3903 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 9, i64 0
  %3904 = load volatile float* %3903, align 4
  %3905 = fcmp oge float %3902, %3904
  %3906 = fcmp ueq float %3902, 0.000000e+00
  %3907 = or i1 %3905, %3906
  %3908 = select i1 %3907, float %3902, float %3904
  %3909 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 10, i64 0
  %3910 = load volatile float* %3909, align 4
  %3911 = fcmp oge float %3908, %3910
  %3912 = fcmp ueq float %3908, 0.000000e+00
  %3913 = or i1 %3911, %3912
  %3914 = select i1 %3913, float %3908, float %3910
  %3915 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 11, i64 0
  %3916 = load volatile float* %3915, align 4
  %3917 = fcmp oge float %3914, %3916
  %3918 = fcmp ueq float %3914, 0.000000e+00
  %3919 = or i1 %3917, %3918
  %3920 = select i1 %3919, float %3914, float %3916
  %3921 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 7, i64 3, i64 0
  store volatile float %3920, float* %3921, align 4
  %3922 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 12, i64 0
  %3923 = load volatile float* %3922, align 4
  %3924 = fcmp oge float 0xFFF0000000000000, %3923
  %3925 = select i1 %3924, float 0xFFF0000000000000, float %3923
  %3926 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 13, i64 0
  %3927 = load volatile float* %3926, align 4
  %3928 = fcmp oge float %3925, %3927
  %3929 = fcmp ueq float %3925, 0.000000e+00
  %3930 = or i1 %3928, %3929
  %3931 = select i1 %3930, float %3925, float %3927
  %3932 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 14, i64 0
  %3933 = load volatile float* %3932, align 4
  %3934 = fcmp oge float %3931, %3933
  %3935 = fcmp ueq float %3931, 0.000000e+00
  %3936 = or i1 %3934, %3935
  %3937 = select i1 %3936, float %3931, float %3933
  %3938 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 12, i64 0
  %3939 = load volatile float* %3938, align 4
  %3940 = fcmp oge float %3937, %3939
  %3941 = fcmp ueq float %3937, 0.000000e+00
  %3942 = or i1 %3940, %3941
  %3943 = select i1 %3942, float %3937, float %3939
  %3944 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 13, i64 0
  %3945 = load volatile float* %3944, align 4
  %3946 = fcmp oge float %3943, %3945
  %3947 = fcmp ueq float %3943, 0.000000e+00
  %3948 = or i1 %3946, %3947
  %3949 = select i1 %3948, float %3943, float %3945
  %3950 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 14, i64 0
  %3951 = load volatile float* %3950, align 4
  %3952 = fcmp oge float %3949, %3951
  %3953 = fcmp ueq float %3949, 0.000000e+00
  %3954 = or i1 %3952, %3953
  %3955 = select i1 %3954, float %3949, float %3951
  %3956 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 12, i64 0
  %3957 = load volatile float* %3956, align 4
  %3958 = fcmp oge float %3955, %3957
  %3959 = fcmp ueq float %3955, 0.000000e+00
  %3960 = or i1 %3958, %3959
  %3961 = select i1 %3960, float %3955, float %3957
  %3962 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 13, i64 0
  %3963 = load volatile float* %3962, align 4
  %3964 = fcmp oge float %3961, %3963
  %3965 = fcmp ueq float %3961, 0.000000e+00
  %3966 = or i1 %3964, %3965
  %3967 = select i1 %3966, float %3961, float %3963
  %3968 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 14, i64 0
  %3969 = load volatile float* %3968, align 4
  %3970 = fcmp oge float %3967, %3969
  %3971 = fcmp ueq float %3967, 0.000000e+00
  %3972 = or i1 %3970, %3971
  %3973 = select i1 %3972, float %3967, float %3969
  %3974 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 7, i64 4, i64 0
  store volatile float %3973, float* %3974, align 4
  %3975 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 15, i64 0
  %3976 = load volatile float* %3975, align 4
  %3977 = fcmp oge float 0xFFF0000000000000, %3976
  %3978 = select i1 %3977, float 0xFFF0000000000000, float %3976
  %3979 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 16, i64 0
  %3980 = load volatile float* %3979, align 4
  %3981 = fcmp oge float %3978, %3980
  %3982 = fcmp ueq float %3978, 0.000000e+00
  %3983 = or i1 %3981, %3982
  %3984 = select i1 %3983, float %3978, float %3980
  %3985 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 17, i64 0
  %3986 = load volatile float* %3985, align 4
  %3987 = fcmp oge float %3984, %3986
  %3988 = fcmp ueq float %3984, 0.000000e+00
  %3989 = or i1 %3987, %3988
  %3990 = select i1 %3989, float %3984, float %3986
  %3991 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 15, i64 0
  %3992 = load volatile float* %3991, align 4
  %3993 = fcmp oge float %3990, %3992
  %3994 = fcmp ueq float %3990, 0.000000e+00
  %3995 = or i1 %3993, %3994
  %3996 = select i1 %3995, float %3990, float %3992
  %3997 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 16, i64 0
  %3998 = load volatile float* %3997, align 4
  %3999 = fcmp oge float %3996, %3998
  %4000 = fcmp ueq float %3996, 0.000000e+00
  %4001 = or i1 %3999, %4000
  %4002 = select i1 %4001, float %3996, float %3998
  %4003 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 17, i64 0
  %4004 = load volatile float* %4003, align 4
  %4005 = fcmp oge float %4002, %4004
  %4006 = fcmp ueq float %4002, 0.000000e+00
  %4007 = or i1 %4005, %4006
  %4008 = select i1 %4007, float %4002, float %4004
  %4009 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 15, i64 0
  %4010 = load volatile float* %4009, align 4
  %4011 = fcmp oge float %4008, %4010
  %4012 = fcmp ueq float %4008, 0.000000e+00
  %4013 = or i1 %4011, %4012
  %4014 = select i1 %4013, float %4008, float %4010
  %4015 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 16, i64 0
  %4016 = load volatile float* %4015, align 4
  %4017 = fcmp oge float %4014, %4016
  %4018 = fcmp ueq float %4014, 0.000000e+00
  %4019 = or i1 %4017, %4018
  %4020 = select i1 %4019, float %4014, float %4016
  %4021 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 17, i64 0
  %4022 = load volatile float* %4021, align 4
  %4023 = fcmp oge float %4020, %4022
  %4024 = fcmp ueq float %4020, 0.000000e+00
  %4025 = or i1 %4023, %4024
  %4026 = select i1 %4025, float %4020, float %4022
  %4027 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 7, i64 5, i64 0
  store volatile float %4026, float* %4027, align 4
  %4028 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 18, i64 0
  %4029 = load volatile float* %4028, align 4
  %4030 = fcmp oge float 0xFFF0000000000000, %4029
  %4031 = select i1 %4030, float 0xFFF0000000000000, float %4029
  %4032 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 19, i64 0
  %4033 = load volatile float* %4032, align 4
  %4034 = fcmp oge float %4031, %4033
  %4035 = fcmp ueq float %4031, 0.000000e+00
  %4036 = or i1 %4034, %4035
  %4037 = select i1 %4036, float %4031, float %4033
  %4038 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 20, i64 0
  %4039 = load volatile float* %4038, align 4
  %4040 = fcmp oge float %4037, %4039
  %4041 = fcmp ueq float %4037, 0.000000e+00
  %4042 = or i1 %4040, %4041
  %4043 = select i1 %4042, float %4037, float %4039
  %4044 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 18, i64 0
  %4045 = load volatile float* %4044, align 4
  %4046 = fcmp oge float %4043, %4045
  %4047 = fcmp ueq float %4043, 0.000000e+00
  %4048 = or i1 %4046, %4047
  %4049 = select i1 %4048, float %4043, float %4045
  %4050 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 19, i64 0
  %4051 = load volatile float* %4050, align 4
  %4052 = fcmp oge float %4049, %4051
  %4053 = fcmp ueq float %4049, 0.000000e+00
  %4054 = or i1 %4052, %4053
  %4055 = select i1 %4054, float %4049, float %4051
  %4056 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 20, i64 0
  %4057 = load volatile float* %4056, align 4
  %4058 = fcmp oge float %4055, %4057
  %4059 = fcmp ueq float %4055, 0.000000e+00
  %4060 = or i1 %4058, %4059
  %4061 = select i1 %4060, float %4055, float %4057
  %4062 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 18, i64 0
  %4063 = load volatile float* %4062, align 4
  %4064 = fcmp oge float %4061, %4063
  %4065 = fcmp ueq float %4061, 0.000000e+00
  %4066 = or i1 %4064, %4065
  %4067 = select i1 %4066, float %4061, float %4063
  %4068 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 19, i64 0
  %4069 = load volatile float* %4068, align 4
  %4070 = fcmp oge float %4067, %4069
  %4071 = fcmp ueq float %4067, 0.000000e+00
  %4072 = or i1 %4070, %4071
  %4073 = select i1 %4072, float %4067, float %4069
  %4074 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 20, i64 0
  %4075 = load volatile float* %4074, align 4
  %4076 = fcmp oge float %4073, %4075
  %4077 = fcmp ueq float %4073, 0.000000e+00
  %4078 = or i1 %4076, %4077
  %4079 = select i1 %4078, float %4073, float %4075
  %4080 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 7, i64 6, i64 0
  store volatile float %4079, float* %4080, align 4
  %4081 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 21, i64 0
  %4082 = load volatile float* %4081, align 4
  %4083 = fcmp oge float 0xFFF0000000000000, %4082
  %4084 = select i1 %4083, float 0xFFF0000000000000, float %4082
  %4085 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 22, i64 0
  %4086 = load volatile float* %4085, align 4
  %4087 = fcmp oge float %4084, %4086
  %4088 = fcmp ueq float %4084, 0.000000e+00
  %4089 = or i1 %4087, %4088
  %4090 = select i1 %4089, float %4084, float %4086
  %4091 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 23, i64 0
  %4092 = load volatile float* %4091, align 4
  %4093 = fcmp oge float %4090, %4092
  %4094 = fcmp ueq float %4090, 0.000000e+00
  %4095 = or i1 %4093, %4094
  %4096 = select i1 %4095, float %4090, float %4092
  %4097 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 21, i64 0
  %4098 = load volatile float* %4097, align 4
  %4099 = fcmp oge float %4096, %4098
  %4100 = fcmp ueq float %4096, 0.000000e+00
  %4101 = or i1 %4099, %4100
  %4102 = select i1 %4101, float %4096, float %4098
  %4103 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 22, i64 0
  %4104 = load volatile float* %4103, align 4
  %4105 = fcmp oge float %4102, %4104
  %4106 = fcmp ueq float %4102, 0.000000e+00
  %4107 = or i1 %4105, %4106
  %4108 = select i1 %4107, float %4102, float %4104
  %4109 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 23, i64 0
  %4110 = load volatile float* %4109, align 4
  %4111 = fcmp oge float %4108, %4110
  %4112 = fcmp ueq float %4108, 0.000000e+00
  %4113 = or i1 %4111, %4112
  %4114 = select i1 %4113, float %4108, float %4110
  %4115 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 21, i64 0
  %4116 = load volatile float* %4115, align 4
  %4117 = fcmp oge float %4114, %4116
  %4118 = fcmp ueq float %4114, 0.000000e+00
  %4119 = or i1 %4117, %4118
  %4120 = select i1 %4119, float %4114, float %4116
  %4121 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 22, i64 0
  %4122 = load volatile float* %4121, align 4
  %4123 = fcmp oge float %4120, %4122
  %4124 = fcmp ueq float %4120, 0.000000e+00
  %4125 = or i1 %4123, %4124
  %4126 = select i1 %4125, float %4120, float %4122
  %4127 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 23, i64 0
  %4128 = load volatile float* %4127, align 4
  %4129 = fcmp oge float %4126, %4128
  %4130 = fcmp ueq float %4126, 0.000000e+00
  %4131 = or i1 %4129, %4130
  %4132 = select i1 %4131, float %4126, float %4128
  %4133 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 7, i64 7, i64 0
  store volatile float %4132, float* %4133, align 4
  %4134 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 24, i64 0
  %4135 = load volatile float* %4134, align 4
  %4136 = fcmp oge float 0xFFF0000000000000, %4135
  %4137 = select i1 %4136, float 0xFFF0000000000000, float %4135
  %4138 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 25, i64 0
  %4139 = load volatile float* %4138, align 4
  %4140 = fcmp oge float %4137, %4139
  %4141 = fcmp ueq float %4137, 0.000000e+00
  %4142 = or i1 %4140, %4141
  %4143 = select i1 %4142, float %4137, float %4139
  %4144 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 26, i64 0
  %4145 = load volatile float* %4144, align 4
  %4146 = fcmp oge float %4143, %4145
  %4147 = fcmp ueq float %4143, 0.000000e+00
  %4148 = or i1 %4146, %4147
  %4149 = select i1 %4148, float %4143, float %4145
  %4150 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 24, i64 0
  %4151 = load volatile float* %4150, align 4
  %4152 = fcmp oge float %4149, %4151
  %4153 = fcmp ueq float %4149, 0.000000e+00
  %4154 = or i1 %4152, %4153
  %4155 = select i1 %4154, float %4149, float %4151
  %4156 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 25, i64 0
  %4157 = load volatile float* %4156, align 4
  %4158 = fcmp oge float %4155, %4157
  %4159 = fcmp ueq float %4155, 0.000000e+00
  %4160 = or i1 %4158, %4159
  %4161 = select i1 %4160, float %4155, float %4157
  %4162 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 26, i64 0
  %4163 = load volatile float* %4162, align 4
  %4164 = fcmp oge float %4161, %4163
  %4165 = fcmp ueq float %4161, 0.000000e+00
  %4166 = or i1 %4164, %4165
  %4167 = select i1 %4166, float %4161, float %4163
  %4168 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 24, i64 0
  %4169 = load volatile float* %4168, align 4
  %4170 = fcmp oge float %4167, %4169
  %4171 = fcmp ueq float %4167, 0.000000e+00
  %4172 = or i1 %4170, %4171
  %4173 = select i1 %4172, float %4167, float %4169
  %4174 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 25, i64 0
  %4175 = load volatile float* %4174, align 4
  %4176 = fcmp oge float %4173, %4175
  %4177 = fcmp ueq float %4173, 0.000000e+00
  %4178 = or i1 %4176, %4177
  %4179 = select i1 %4178, float %4173, float %4175
  %4180 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 26, i64 0
  %4181 = load volatile float* %4180, align 4
  %4182 = fcmp oge float %4179, %4181
  %4183 = fcmp ueq float %4179, 0.000000e+00
  %4184 = or i1 %4182, %4183
  %4185 = select i1 %4184, float %4179, float %4181
  %4186 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 7, i64 8, i64 0
  store volatile float %4185, float* %4186, align 4
  %4187 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 27, i64 0
  %4188 = load volatile float* %4187, align 4
  %4189 = fcmp oge float 0xFFF0000000000000, %4188
  %4190 = select i1 %4189, float 0xFFF0000000000000, float %4188
  %4191 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 28, i64 0
  %4192 = load volatile float* %4191, align 4
  %4193 = fcmp oge float %4190, %4192
  %4194 = fcmp ueq float %4190, 0.000000e+00
  %4195 = or i1 %4193, %4194
  %4196 = select i1 %4195, float %4190, float %4192
  %4197 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 29, i64 0
  %4198 = load volatile float* %4197, align 4
  %4199 = fcmp oge float %4196, %4198
  %4200 = fcmp ueq float %4196, 0.000000e+00
  %4201 = or i1 %4199, %4200
  %4202 = select i1 %4201, float %4196, float %4198
  %4203 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 27, i64 0
  %4204 = load volatile float* %4203, align 4
  %4205 = fcmp oge float %4202, %4204
  %4206 = fcmp ueq float %4202, 0.000000e+00
  %4207 = or i1 %4205, %4206
  %4208 = select i1 %4207, float %4202, float %4204
  %4209 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 28, i64 0
  %4210 = load volatile float* %4209, align 4
  %4211 = fcmp oge float %4208, %4210
  %4212 = fcmp ueq float %4208, 0.000000e+00
  %4213 = or i1 %4211, %4212
  %4214 = select i1 %4213, float %4208, float %4210
  %4215 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 29, i64 0
  %4216 = load volatile float* %4215, align 4
  %4217 = fcmp oge float %4214, %4216
  %4218 = fcmp ueq float %4214, 0.000000e+00
  %4219 = or i1 %4217, %4218
  %4220 = select i1 %4219, float %4214, float %4216
  %4221 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 27, i64 0
  %4222 = load volatile float* %4221, align 4
  %4223 = fcmp oge float %4220, %4222
  %4224 = fcmp ueq float %4220, 0.000000e+00
  %4225 = or i1 %4223, %4224
  %4226 = select i1 %4225, float %4220, float %4222
  %4227 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 28, i64 0
  %4228 = load volatile float* %4227, align 4
  %4229 = fcmp oge float %4226, %4228
  %4230 = fcmp ueq float %4226, 0.000000e+00
  %4231 = or i1 %4229, %4230
  %4232 = select i1 %4231, float %4226, float %4228
  %4233 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 29, i64 0
  %4234 = load volatile float* %4233, align 4
  %4235 = fcmp oge float %4232, %4234
  %4236 = fcmp ueq float %4232, 0.000000e+00
  %4237 = or i1 %4235, %4236
  %4238 = select i1 %4237, float %4232, float %4234
  %4239 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 7, i64 9, i64 0
  store volatile float %4238, float* %4239, align 4
  %4240 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 0, i64 0
  %4241 = load volatile float* %4240, align 4
  %4242 = fcmp oge float 0xFFF0000000000000, %4241
  %4243 = select i1 %4242, float 0xFFF0000000000000, float %4241
  %4244 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 1, i64 0
  %4245 = load volatile float* %4244, align 4
  %4246 = fcmp oge float %4243, %4245
  %4247 = fcmp ueq float %4243, 0.000000e+00
  %4248 = or i1 %4246, %4247
  %4249 = select i1 %4248, float %4243, float %4245
  %4250 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 2, i64 0
  %4251 = load volatile float* %4250, align 4
  %4252 = fcmp oge float %4249, %4251
  %4253 = fcmp ueq float %4249, 0.000000e+00
  %4254 = or i1 %4252, %4253
  %4255 = select i1 %4254, float %4249, float %4251
  %4256 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 0, i64 0
  %4257 = load volatile float* %4256, align 4
  %4258 = fcmp oge float %4255, %4257
  %4259 = fcmp ueq float %4255, 0.000000e+00
  %4260 = or i1 %4258, %4259
  %4261 = select i1 %4260, float %4255, float %4257
  %4262 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 1, i64 0
  %4263 = load volatile float* %4262, align 4
  %4264 = fcmp oge float %4261, %4263
  %4265 = fcmp ueq float %4261, 0.000000e+00
  %4266 = or i1 %4264, %4265
  %4267 = select i1 %4266, float %4261, float %4263
  %4268 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 2, i64 0
  %4269 = load volatile float* %4268, align 4
  %4270 = fcmp oge float %4267, %4269
  %4271 = fcmp ueq float %4267, 0.000000e+00
  %4272 = or i1 %4270, %4271
  %4273 = select i1 %4272, float %4267, float %4269
  %4274 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 0, i64 0
  %4275 = load volatile float* %4274, align 4
  %4276 = fcmp oge float %4273, %4275
  %4277 = fcmp ueq float %4273, 0.000000e+00
  %4278 = or i1 %4276, %4277
  %4279 = select i1 %4278, float %4273, float %4275
  %4280 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 1, i64 0
  %4281 = load volatile float* %4280, align 4
  %4282 = fcmp oge float %4279, %4281
  %4283 = fcmp ueq float %4279, 0.000000e+00
  %4284 = or i1 %4282, %4283
  %4285 = select i1 %4284, float %4279, float %4281
  %4286 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 2, i64 0
  %4287 = load volatile float* %4286, align 4
  %4288 = fcmp oge float %4285, %4287
  %4289 = fcmp ueq float %4285, 0.000000e+00
  %4290 = or i1 %4288, %4289
  %4291 = select i1 %4290, float %4285, float %4287
  %4292 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 8, i64 0, i64 0
  store volatile float %4291, float* %4292, align 4
  %4293 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 3, i64 0
  %4294 = load volatile float* %4293, align 4
  %4295 = fcmp oge float 0xFFF0000000000000, %4294
  %4296 = select i1 %4295, float 0xFFF0000000000000, float %4294
  %4297 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 4, i64 0
  %4298 = load volatile float* %4297, align 4
  %4299 = fcmp oge float %4296, %4298
  %4300 = fcmp ueq float %4296, 0.000000e+00
  %4301 = or i1 %4299, %4300
  %4302 = select i1 %4301, float %4296, float %4298
  %4303 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 5, i64 0
  %4304 = load volatile float* %4303, align 4
  %4305 = fcmp oge float %4302, %4304
  %4306 = fcmp ueq float %4302, 0.000000e+00
  %4307 = or i1 %4305, %4306
  %4308 = select i1 %4307, float %4302, float %4304
  %4309 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 3, i64 0
  %4310 = load volatile float* %4309, align 4
  %4311 = fcmp oge float %4308, %4310
  %4312 = fcmp ueq float %4308, 0.000000e+00
  %4313 = or i1 %4311, %4312
  %4314 = select i1 %4313, float %4308, float %4310
  %4315 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 4, i64 0
  %4316 = load volatile float* %4315, align 4
  %4317 = fcmp oge float %4314, %4316
  %4318 = fcmp ueq float %4314, 0.000000e+00
  %4319 = or i1 %4317, %4318
  %4320 = select i1 %4319, float %4314, float %4316
  %4321 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 5, i64 0
  %4322 = load volatile float* %4321, align 4
  %4323 = fcmp oge float %4320, %4322
  %4324 = fcmp ueq float %4320, 0.000000e+00
  %4325 = or i1 %4323, %4324
  %4326 = select i1 %4325, float %4320, float %4322
  %4327 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 3, i64 0
  %4328 = load volatile float* %4327, align 4
  %4329 = fcmp oge float %4326, %4328
  %4330 = fcmp ueq float %4326, 0.000000e+00
  %4331 = or i1 %4329, %4330
  %4332 = select i1 %4331, float %4326, float %4328
  %4333 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 4, i64 0
  %4334 = load volatile float* %4333, align 4
  %4335 = fcmp oge float %4332, %4334
  %4336 = fcmp ueq float %4332, 0.000000e+00
  %4337 = or i1 %4335, %4336
  %4338 = select i1 %4337, float %4332, float %4334
  %4339 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 5, i64 0
  %4340 = load volatile float* %4339, align 4
  %4341 = fcmp oge float %4338, %4340
  %4342 = fcmp ueq float %4338, 0.000000e+00
  %4343 = or i1 %4341, %4342
  %4344 = select i1 %4343, float %4338, float %4340
  %4345 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 8, i64 1, i64 0
  store volatile float %4344, float* %4345, align 4
  %4346 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 6, i64 0
  %4347 = load volatile float* %4346, align 4
  %4348 = fcmp oge float 0xFFF0000000000000, %4347
  %4349 = select i1 %4348, float 0xFFF0000000000000, float %4347
  %4350 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 7, i64 0
  %4351 = load volatile float* %4350, align 4
  %4352 = fcmp oge float %4349, %4351
  %4353 = fcmp ueq float %4349, 0.000000e+00
  %4354 = or i1 %4352, %4353
  %4355 = select i1 %4354, float %4349, float %4351
  %4356 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 8, i64 0
  %4357 = load volatile float* %4356, align 4
  %4358 = fcmp oge float %4355, %4357
  %4359 = fcmp ueq float %4355, 0.000000e+00
  %4360 = or i1 %4358, %4359
  %4361 = select i1 %4360, float %4355, float %4357
  %4362 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 6, i64 0
  %4363 = load volatile float* %4362, align 4
  %4364 = fcmp oge float %4361, %4363
  %4365 = fcmp ueq float %4361, 0.000000e+00
  %4366 = or i1 %4364, %4365
  %4367 = select i1 %4366, float %4361, float %4363
  %4368 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 7, i64 0
  %4369 = load volatile float* %4368, align 4
  %4370 = fcmp oge float %4367, %4369
  %4371 = fcmp ueq float %4367, 0.000000e+00
  %4372 = or i1 %4370, %4371
  %4373 = select i1 %4372, float %4367, float %4369
  %4374 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 8, i64 0
  %4375 = load volatile float* %4374, align 4
  %4376 = fcmp oge float %4373, %4375
  %4377 = fcmp ueq float %4373, 0.000000e+00
  %4378 = or i1 %4376, %4377
  %4379 = select i1 %4378, float %4373, float %4375
  %4380 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 6, i64 0
  %4381 = load volatile float* %4380, align 4
  %4382 = fcmp oge float %4379, %4381
  %4383 = fcmp ueq float %4379, 0.000000e+00
  %4384 = or i1 %4382, %4383
  %4385 = select i1 %4384, float %4379, float %4381
  %4386 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 7, i64 0
  %4387 = load volatile float* %4386, align 4
  %4388 = fcmp oge float %4385, %4387
  %4389 = fcmp ueq float %4385, 0.000000e+00
  %4390 = or i1 %4388, %4389
  %4391 = select i1 %4390, float %4385, float %4387
  %4392 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 8, i64 0
  %4393 = load volatile float* %4392, align 4
  %4394 = fcmp oge float %4391, %4393
  %4395 = fcmp ueq float %4391, 0.000000e+00
  %4396 = or i1 %4394, %4395
  %4397 = select i1 %4396, float %4391, float %4393
  %4398 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 8, i64 2, i64 0
  store volatile float %4397, float* %4398, align 4
  %4399 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 9, i64 0
  %4400 = load volatile float* %4399, align 4
  %4401 = fcmp oge float 0xFFF0000000000000, %4400
  %4402 = select i1 %4401, float 0xFFF0000000000000, float %4400
  %4403 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 10, i64 0
  %4404 = load volatile float* %4403, align 4
  %4405 = fcmp oge float %4402, %4404
  %4406 = fcmp ueq float %4402, 0.000000e+00
  %4407 = or i1 %4405, %4406
  %4408 = select i1 %4407, float %4402, float %4404
  %4409 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 11, i64 0
  %4410 = load volatile float* %4409, align 4
  %4411 = fcmp oge float %4408, %4410
  %4412 = fcmp ueq float %4408, 0.000000e+00
  %4413 = or i1 %4411, %4412
  %4414 = select i1 %4413, float %4408, float %4410
  %4415 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 9, i64 0
  %4416 = load volatile float* %4415, align 4
  %4417 = fcmp oge float %4414, %4416
  %4418 = fcmp ueq float %4414, 0.000000e+00
  %4419 = or i1 %4417, %4418
  %4420 = select i1 %4419, float %4414, float %4416
  %4421 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 10, i64 0
  %4422 = load volatile float* %4421, align 4
  %4423 = fcmp oge float %4420, %4422
  %4424 = fcmp ueq float %4420, 0.000000e+00
  %4425 = or i1 %4423, %4424
  %4426 = select i1 %4425, float %4420, float %4422
  %4427 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 11, i64 0
  %4428 = load volatile float* %4427, align 4
  %4429 = fcmp oge float %4426, %4428
  %4430 = fcmp ueq float %4426, 0.000000e+00
  %4431 = or i1 %4429, %4430
  %4432 = select i1 %4431, float %4426, float %4428
  %4433 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 9, i64 0
  %4434 = load volatile float* %4433, align 4
  %4435 = fcmp oge float %4432, %4434
  %4436 = fcmp ueq float %4432, 0.000000e+00
  %4437 = or i1 %4435, %4436
  %4438 = select i1 %4437, float %4432, float %4434
  %4439 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 10, i64 0
  %4440 = load volatile float* %4439, align 4
  %4441 = fcmp oge float %4438, %4440
  %4442 = fcmp ueq float %4438, 0.000000e+00
  %4443 = or i1 %4441, %4442
  %4444 = select i1 %4443, float %4438, float %4440
  %4445 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 11, i64 0
  %4446 = load volatile float* %4445, align 4
  %4447 = fcmp oge float %4444, %4446
  %4448 = fcmp ueq float %4444, 0.000000e+00
  %4449 = or i1 %4447, %4448
  %4450 = select i1 %4449, float %4444, float %4446
  %4451 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 8, i64 3, i64 0
  store volatile float %4450, float* %4451, align 4
  %4452 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 12, i64 0
  %4453 = load volatile float* %4452, align 4
  %4454 = fcmp oge float 0xFFF0000000000000, %4453
  %4455 = select i1 %4454, float 0xFFF0000000000000, float %4453
  %4456 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 13, i64 0
  %4457 = load volatile float* %4456, align 4
  %4458 = fcmp oge float %4455, %4457
  %4459 = fcmp ueq float %4455, 0.000000e+00
  %4460 = or i1 %4458, %4459
  %4461 = select i1 %4460, float %4455, float %4457
  %4462 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 14, i64 0
  %4463 = load volatile float* %4462, align 4
  %4464 = fcmp oge float %4461, %4463
  %4465 = fcmp ueq float %4461, 0.000000e+00
  %4466 = or i1 %4464, %4465
  %4467 = select i1 %4466, float %4461, float %4463
  %4468 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 12, i64 0
  %4469 = load volatile float* %4468, align 4
  %4470 = fcmp oge float %4467, %4469
  %4471 = fcmp ueq float %4467, 0.000000e+00
  %4472 = or i1 %4470, %4471
  %4473 = select i1 %4472, float %4467, float %4469
  %4474 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 13, i64 0
  %4475 = load volatile float* %4474, align 4
  %4476 = fcmp oge float %4473, %4475
  %4477 = fcmp ueq float %4473, 0.000000e+00
  %4478 = or i1 %4476, %4477
  %4479 = select i1 %4478, float %4473, float %4475
  %4480 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 14, i64 0
  %4481 = load volatile float* %4480, align 4
  %4482 = fcmp oge float %4479, %4481
  %4483 = fcmp ueq float %4479, 0.000000e+00
  %4484 = or i1 %4482, %4483
  %4485 = select i1 %4484, float %4479, float %4481
  %4486 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 12, i64 0
  %4487 = load volatile float* %4486, align 4
  %4488 = fcmp oge float %4485, %4487
  %4489 = fcmp ueq float %4485, 0.000000e+00
  %4490 = or i1 %4488, %4489
  %4491 = select i1 %4490, float %4485, float %4487
  %4492 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 13, i64 0
  %4493 = load volatile float* %4492, align 4
  %4494 = fcmp oge float %4491, %4493
  %4495 = fcmp ueq float %4491, 0.000000e+00
  %4496 = or i1 %4494, %4495
  %4497 = select i1 %4496, float %4491, float %4493
  %4498 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 14, i64 0
  %4499 = load volatile float* %4498, align 4
  %4500 = fcmp oge float %4497, %4499
  %4501 = fcmp ueq float %4497, 0.000000e+00
  %4502 = or i1 %4500, %4501
  %4503 = select i1 %4502, float %4497, float %4499
  %4504 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 8, i64 4, i64 0
  store volatile float %4503, float* %4504, align 4
  %4505 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 15, i64 0
  %4506 = load volatile float* %4505, align 4
  %4507 = fcmp oge float 0xFFF0000000000000, %4506
  %4508 = select i1 %4507, float 0xFFF0000000000000, float %4506
  %4509 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 16, i64 0
  %4510 = load volatile float* %4509, align 4
  %4511 = fcmp oge float %4508, %4510
  %4512 = fcmp ueq float %4508, 0.000000e+00
  %4513 = or i1 %4511, %4512
  %4514 = select i1 %4513, float %4508, float %4510
  %4515 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 17, i64 0
  %4516 = load volatile float* %4515, align 4
  %4517 = fcmp oge float %4514, %4516
  %4518 = fcmp ueq float %4514, 0.000000e+00
  %4519 = or i1 %4517, %4518
  %4520 = select i1 %4519, float %4514, float %4516
  %4521 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 15, i64 0
  %4522 = load volatile float* %4521, align 4
  %4523 = fcmp oge float %4520, %4522
  %4524 = fcmp ueq float %4520, 0.000000e+00
  %4525 = or i1 %4523, %4524
  %4526 = select i1 %4525, float %4520, float %4522
  %4527 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 16, i64 0
  %4528 = load volatile float* %4527, align 4
  %4529 = fcmp oge float %4526, %4528
  %4530 = fcmp ueq float %4526, 0.000000e+00
  %4531 = or i1 %4529, %4530
  %4532 = select i1 %4531, float %4526, float %4528
  %4533 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 17, i64 0
  %4534 = load volatile float* %4533, align 4
  %4535 = fcmp oge float %4532, %4534
  %4536 = fcmp ueq float %4532, 0.000000e+00
  %4537 = or i1 %4535, %4536
  %4538 = select i1 %4537, float %4532, float %4534
  %4539 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 15, i64 0
  %4540 = load volatile float* %4539, align 4
  %4541 = fcmp oge float %4538, %4540
  %4542 = fcmp ueq float %4538, 0.000000e+00
  %4543 = or i1 %4541, %4542
  %4544 = select i1 %4543, float %4538, float %4540
  %4545 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 16, i64 0
  %4546 = load volatile float* %4545, align 4
  %4547 = fcmp oge float %4544, %4546
  %4548 = fcmp ueq float %4544, 0.000000e+00
  %4549 = or i1 %4547, %4548
  %4550 = select i1 %4549, float %4544, float %4546
  %4551 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 17, i64 0
  %4552 = load volatile float* %4551, align 4
  %4553 = fcmp oge float %4550, %4552
  %4554 = fcmp ueq float %4550, 0.000000e+00
  %4555 = or i1 %4553, %4554
  %4556 = select i1 %4555, float %4550, float %4552
  %4557 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 8, i64 5, i64 0
  store volatile float %4556, float* %4557, align 4
  %4558 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 18, i64 0
  %4559 = load volatile float* %4558, align 4
  %4560 = fcmp oge float 0xFFF0000000000000, %4559
  %4561 = select i1 %4560, float 0xFFF0000000000000, float %4559
  %4562 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 19, i64 0
  %4563 = load volatile float* %4562, align 4
  %4564 = fcmp oge float %4561, %4563
  %4565 = fcmp ueq float %4561, 0.000000e+00
  %4566 = or i1 %4564, %4565
  %4567 = select i1 %4566, float %4561, float %4563
  %4568 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 20, i64 0
  %4569 = load volatile float* %4568, align 4
  %4570 = fcmp oge float %4567, %4569
  %4571 = fcmp ueq float %4567, 0.000000e+00
  %4572 = or i1 %4570, %4571
  %4573 = select i1 %4572, float %4567, float %4569
  %4574 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 18, i64 0
  %4575 = load volatile float* %4574, align 4
  %4576 = fcmp oge float %4573, %4575
  %4577 = fcmp ueq float %4573, 0.000000e+00
  %4578 = or i1 %4576, %4577
  %4579 = select i1 %4578, float %4573, float %4575
  %4580 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 19, i64 0
  %4581 = load volatile float* %4580, align 4
  %4582 = fcmp oge float %4579, %4581
  %4583 = fcmp ueq float %4579, 0.000000e+00
  %4584 = or i1 %4582, %4583
  %4585 = select i1 %4584, float %4579, float %4581
  %4586 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 20, i64 0
  %4587 = load volatile float* %4586, align 4
  %4588 = fcmp oge float %4585, %4587
  %4589 = fcmp ueq float %4585, 0.000000e+00
  %4590 = or i1 %4588, %4589
  %4591 = select i1 %4590, float %4585, float %4587
  %4592 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 18, i64 0
  %4593 = load volatile float* %4592, align 4
  %4594 = fcmp oge float %4591, %4593
  %4595 = fcmp ueq float %4591, 0.000000e+00
  %4596 = or i1 %4594, %4595
  %4597 = select i1 %4596, float %4591, float %4593
  %4598 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 19, i64 0
  %4599 = load volatile float* %4598, align 4
  %4600 = fcmp oge float %4597, %4599
  %4601 = fcmp ueq float %4597, 0.000000e+00
  %4602 = or i1 %4600, %4601
  %4603 = select i1 %4602, float %4597, float %4599
  %4604 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 20, i64 0
  %4605 = load volatile float* %4604, align 4
  %4606 = fcmp oge float %4603, %4605
  %4607 = fcmp ueq float %4603, 0.000000e+00
  %4608 = or i1 %4606, %4607
  %4609 = select i1 %4608, float %4603, float %4605
  %4610 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 8, i64 6, i64 0
  store volatile float %4609, float* %4610, align 4
  %4611 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 21, i64 0
  %4612 = load volatile float* %4611, align 4
  %4613 = fcmp oge float 0xFFF0000000000000, %4612
  %4614 = select i1 %4613, float 0xFFF0000000000000, float %4612
  %4615 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 22, i64 0
  %4616 = load volatile float* %4615, align 4
  %4617 = fcmp oge float %4614, %4616
  %4618 = fcmp ueq float %4614, 0.000000e+00
  %4619 = or i1 %4617, %4618
  %4620 = select i1 %4619, float %4614, float %4616
  %4621 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 23, i64 0
  %4622 = load volatile float* %4621, align 4
  %4623 = fcmp oge float %4620, %4622
  %4624 = fcmp ueq float %4620, 0.000000e+00
  %4625 = or i1 %4623, %4624
  %4626 = select i1 %4625, float %4620, float %4622
  %4627 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 21, i64 0
  %4628 = load volatile float* %4627, align 4
  %4629 = fcmp oge float %4626, %4628
  %4630 = fcmp ueq float %4626, 0.000000e+00
  %4631 = or i1 %4629, %4630
  %4632 = select i1 %4631, float %4626, float %4628
  %4633 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 22, i64 0
  %4634 = load volatile float* %4633, align 4
  %4635 = fcmp oge float %4632, %4634
  %4636 = fcmp ueq float %4632, 0.000000e+00
  %4637 = or i1 %4635, %4636
  %4638 = select i1 %4637, float %4632, float %4634
  %4639 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 23, i64 0
  %4640 = load volatile float* %4639, align 4
  %4641 = fcmp oge float %4638, %4640
  %4642 = fcmp ueq float %4638, 0.000000e+00
  %4643 = or i1 %4641, %4642
  %4644 = select i1 %4643, float %4638, float %4640
  %4645 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 21, i64 0
  %4646 = load volatile float* %4645, align 4
  %4647 = fcmp oge float %4644, %4646
  %4648 = fcmp ueq float %4644, 0.000000e+00
  %4649 = or i1 %4647, %4648
  %4650 = select i1 %4649, float %4644, float %4646
  %4651 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 22, i64 0
  %4652 = load volatile float* %4651, align 4
  %4653 = fcmp oge float %4650, %4652
  %4654 = fcmp ueq float %4650, 0.000000e+00
  %4655 = or i1 %4653, %4654
  %4656 = select i1 %4655, float %4650, float %4652
  %4657 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 23, i64 0
  %4658 = load volatile float* %4657, align 4
  %4659 = fcmp oge float %4656, %4658
  %4660 = fcmp ueq float %4656, 0.000000e+00
  %4661 = or i1 %4659, %4660
  %4662 = select i1 %4661, float %4656, float %4658
  %4663 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 8, i64 7, i64 0
  store volatile float %4662, float* %4663, align 4
  %4664 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 24, i64 0
  %4665 = load volatile float* %4664, align 4
  %4666 = fcmp oge float 0xFFF0000000000000, %4665
  %4667 = select i1 %4666, float 0xFFF0000000000000, float %4665
  %4668 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 25, i64 0
  %4669 = load volatile float* %4668, align 4
  %4670 = fcmp oge float %4667, %4669
  %4671 = fcmp ueq float %4667, 0.000000e+00
  %4672 = or i1 %4670, %4671
  %4673 = select i1 %4672, float %4667, float %4669
  %4674 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 26, i64 0
  %4675 = load volatile float* %4674, align 4
  %4676 = fcmp oge float %4673, %4675
  %4677 = fcmp ueq float %4673, 0.000000e+00
  %4678 = or i1 %4676, %4677
  %4679 = select i1 %4678, float %4673, float %4675
  %4680 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 24, i64 0
  %4681 = load volatile float* %4680, align 4
  %4682 = fcmp oge float %4679, %4681
  %4683 = fcmp ueq float %4679, 0.000000e+00
  %4684 = or i1 %4682, %4683
  %4685 = select i1 %4684, float %4679, float %4681
  %4686 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 25, i64 0
  %4687 = load volatile float* %4686, align 4
  %4688 = fcmp oge float %4685, %4687
  %4689 = fcmp ueq float %4685, 0.000000e+00
  %4690 = or i1 %4688, %4689
  %4691 = select i1 %4690, float %4685, float %4687
  %4692 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 26, i64 0
  %4693 = load volatile float* %4692, align 4
  %4694 = fcmp oge float %4691, %4693
  %4695 = fcmp ueq float %4691, 0.000000e+00
  %4696 = or i1 %4694, %4695
  %4697 = select i1 %4696, float %4691, float %4693
  %4698 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 24, i64 0
  %4699 = load volatile float* %4698, align 4
  %4700 = fcmp oge float %4697, %4699
  %4701 = fcmp ueq float %4697, 0.000000e+00
  %4702 = or i1 %4700, %4701
  %4703 = select i1 %4702, float %4697, float %4699
  %4704 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 25, i64 0
  %4705 = load volatile float* %4704, align 4
  %4706 = fcmp oge float %4703, %4705
  %4707 = fcmp ueq float %4703, 0.000000e+00
  %4708 = or i1 %4706, %4707
  %4709 = select i1 %4708, float %4703, float %4705
  %4710 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 26, i64 0
  %4711 = load volatile float* %4710, align 4
  %4712 = fcmp oge float %4709, %4711
  %4713 = fcmp ueq float %4709, 0.000000e+00
  %4714 = or i1 %4712, %4713
  %4715 = select i1 %4714, float %4709, float %4711
  %4716 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 8, i64 8, i64 0
  store volatile float %4715, float* %4716, align 4
  %4717 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 27, i64 0
  %4718 = load volatile float* %4717, align 4
  %4719 = fcmp oge float 0xFFF0000000000000, %4718
  %4720 = select i1 %4719, float 0xFFF0000000000000, float %4718
  %4721 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 28, i64 0
  %4722 = load volatile float* %4721, align 4
  %4723 = fcmp oge float %4720, %4722
  %4724 = fcmp ueq float %4720, 0.000000e+00
  %4725 = or i1 %4723, %4724
  %4726 = select i1 %4725, float %4720, float %4722
  %4727 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 29, i64 0
  %4728 = load volatile float* %4727, align 4
  %4729 = fcmp oge float %4726, %4728
  %4730 = fcmp ueq float %4726, 0.000000e+00
  %4731 = or i1 %4729, %4730
  %4732 = select i1 %4731, float %4726, float %4728
  %4733 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 27, i64 0
  %4734 = load volatile float* %4733, align 4
  %4735 = fcmp oge float %4732, %4734
  %4736 = fcmp ueq float %4732, 0.000000e+00
  %4737 = or i1 %4735, %4736
  %4738 = select i1 %4737, float %4732, float %4734
  %4739 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 28, i64 0
  %4740 = load volatile float* %4739, align 4
  %4741 = fcmp oge float %4738, %4740
  %4742 = fcmp ueq float %4738, 0.000000e+00
  %4743 = or i1 %4741, %4742
  %4744 = select i1 %4743, float %4738, float %4740
  %4745 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 29, i64 0
  %4746 = load volatile float* %4745, align 4
  %4747 = fcmp oge float %4744, %4746
  %4748 = fcmp ueq float %4744, 0.000000e+00
  %4749 = or i1 %4747, %4748
  %4750 = select i1 %4749, float %4744, float %4746
  %4751 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 27, i64 0
  %4752 = load volatile float* %4751, align 4
  %4753 = fcmp oge float %4750, %4752
  %4754 = fcmp ueq float %4750, 0.000000e+00
  %4755 = or i1 %4753, %4754
  %4756 = select i1 %4755, float %4750, float %4752
  %4757 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 28, i64 0
  %4758 = load volatile float* %4757, align 4
  %4759 = fcmp oge float %4756, %4758
  %4760 = fcmp ueq float %4756, 0.000000e+00
  %4761 = or i1 %4759, %4760
  %4762 = select i1 %4761, float %4756, float %4758
  %4763 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 29, i64 0
  %4764 = load volatile float* %4763, align 4
  %4765 = fcmp oge float %4762, %4764
  %4766 = fcmp ueq float %4762, 0.000000e+00
  %4767 = or i1 %4765, %4766
  %4768 = select i1 %4767, float %4762, float %4764
  %4769 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 8, i64 9, i64 0
  store volatile float %4768, float* %4769, align 4
  %4770 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 0, i64 0
  %4771 = load volatile float* %4770, align 4
  %4772 = fcmp oge float 0xFFF0000000000000, %4771
  %4773 = select i1 %4772, float 0xFFF0000000000000, float %4771
  %4774 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 1, i64 0
  %4775 = load volatile float* %4774, align 4
  %4776 = fcmp oge float %4773, %4775
  %4777 = fcmp ueq float %4773, 0.000000e+00
  %4778 = or i1 %4776, %4777
  %4779 = select i1 %4778, float %4773, float %4775
  %4780 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 2, i64 0
  %4781 = load volatile float* %4780, align 4
  %4782 = fcmp oge float %4779, %4781
  %4783 = fcmp ueq float %4779, 0.000000e+00
  %4784 = or i1 %4782, %4783
  %4785 = select i1 %4784, float %4779, float %4781
  %4786 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 0, i64 0
  %4787 = load volatile float* %4786, align 4
  %4788 = fcmp oge float %4785, %4787
  %4789 = fcmp ueq float %4785, 0.000000e+00
  %4790 = or i1 %4788, %4789
  %4791 = select i1 %4790, float %4785, float %4787
  %4792 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 1, i64 0
  %4793 = load volatile float* %4792, align 4
  %4794 = fcmp oge float %4791, %4793
  %4795 = fcmp ueq float %4791, 0.000000e+00
  %4796 = or i1 %4794, %4795
  %4797 = select i1 %4796, float %4791, float %4793
  %4798 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 2, i64 0
  %4799 = load volatile float* %4798, align 4
  %4800 = fcmp oge float %4797, %4799
  %4801 = fcmp ueq float %4797, 0.000000e+00
  %4802 = or i1 %4800, %4801
  %4803 = select i1 %4802, float %4797, float %4799
  %4804 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 0, i64 0
  %4805 = load volatile float* %4804, align 4
  %4806 = fcmp oge float %4803, %4805
  %4807 = fcmp ueq float %4803, 0.000000e+00
  %4808 = or i1 %4806, %4807
  %4809 = select i1 %4808, float %4803, float %4805
  %4810 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 1, i64 0
  %4811 = load volatile float* %4810, align 4
  %4812 = fcmp oge float %4809, %4811
  %4813 = fcmp ueq float %4809, 0.000000e+00
  %4814 = or i1 %4812, %4813
  %4815 = select i1 %4814, float %4809, float %4811
  %4816 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 2, i64 0
  %4817 = load volatile float* %4816, align 4
  %4818 = fcmp oge float %4815, %4817
  %4819 = fcmp ueq float %4815, 0.000000e+00
  %4820 = or i1 %4818, %4819
  %4821 = select i1 %4820, float %4815, float %4817
  %4822 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 9, i64 0, i64 0
  store volatile float %4821, float* %4822, align 4
  %4823 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 3, i64 0
  %4824 = load volatile float* %4823, align 4
  %4825 = fcmp oge float 0xFFF0000000000000, %4824
  %4826 = select i1 %4825, float 0xFFF0000000000000, float %4824
  %4827 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 4, i64 0
  %4828 = load volatile float* %4827, align 4
  %4829 = fcmp oge float %4826, %4828
  %4830 = fcmp ueq float %4826, 0.000000e+00
  %4831 = or i1 %4829, %4830
  %4832 = select i1 %4831, float %4826, float %4828
  %4833 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 5, i64 0
  %4834 = load volatile float* %4833, align 4
  %4835 = fcmp oge float %4832, %4834
  %4836 = fcmp ueq float %4832, 0.000000e+00
  %4837 = or i1 %4835, %4836
  %4838 = select i1 %4837, float %4832, float %4834
  %4839 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 3, i64 0
  %4840 = load volatile float* %4839, align 4
  %4841 = fcmp oge float %4838, %4840
  %4842 = fcmp ueq float %4838, 0.000000e+00
  %4843 = or i1 %4841, %4842
  %4844 = select i1 %4843, float %4838, float %4840
  %4845 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 4, i64 0
  %4846 = load volatile float* %4845, align 4
  %4847 = fcmp oge float %4844, %4846
  %4848 = fcmp ueq float %4844, 0.000000e+00
  %4849 = or i1 %4847, %4848
  %4850 = select i1 %4849, float %4844, float %4846
  %4851 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 5, i64 0
  %4852 = load volatile float* %4851, align 4
  %4853 = fcmp oge float %4850, %4852
  %4854 = fcmp ueq float %4850, 0.000000e+00
  %4855 = or i1 %4853, %4854
  %4856 = select i1 %4855, float %4850, float %4852
  %4857 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 3, i64 0
  %4858 = load volatile float* %4857, align 4
  %4859 = fcmp oge float %4856, %4858
  %4860 = fcmp ueq float %4856, 0.000000e+00
  %4861 = or i1 %4859, %4860
  %4862 = select i1 %4861, float %4856, float %4858
  %4863 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 4, i64 0
  %4864 = load volatile float* %4863, align 4
  %4865 = fcmp oge float %4862, %4864
  %4866 = fcmp ueq float %4862, 0.000000e+00
  %4867 = or i1 %4865, %4866
  %4868 = select i1 %4867, float %4862, float %4864
  %4869 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 5, i64 0
  %4870 = load volatile float* %4869, align 4
  %4871 = fcmp oge float %4868, %4870
  %4872 = fcmp ueq float %4868, 0.000000e+00
  %4873 = or i1 %4871, %4872
  %4874 = select i1 %4873, float %4868, float %4870
  %4875 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 9, i64 1, i64 0
  store volatile float %4874, float* %4875, align 4
  %4876 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 6, i64 0
  %4877 = load volatile float* %4876, align 4
  %4878 = fcmp oge float 0xFFF0000000000000, %4877
  %4879 = select i1 %4878, float 0xFFF0000000000000, float %4877
  %4880 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 7, i64 0
  %4881 = load volatile float* %4880, align 4
  %4882 = fcmp oge float %4879, %4881
  %4883 = fcmp ueq float %4879, 0.000000e+00
  %4884 = or i1 %4882, %4883
  %4885 = select i1 %4884, float %4879, float %4881
  %4886 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 8, i64 0
  %4887 = load volatile float* %4886, align 4
  %4888 = fcmp oge float %4885, %4887
  %4889 = fcmp ueq float %4885, 0.000000e+00
  %4890 = or i1 %4888, %4889
  %4891 = select i1 %4890, float %4885, float %4887
  %4892 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 6, i64 0
  %4893 = load volatile float* %4892, align 4
  %4894 = fcmp oge float %4891, %4893
  %4895 = fcmp ueq float %4891, 0.000000e+00
  %4896 = or i1 %4894, %4895
  %4897 = select i1 %4896, float %4891, float %4893
  %4898 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 7, i64 0
  %4899 = load volatile float* %4898, align 4
  %4900 = fcmp oge float %4897, %4899
  %4901 = fcmp ueq float %4897, 0.000000e+00
  %4902 = or i1 %4900, %4901
  %4903 = select i1 %4902, float %4897, float %4899
  %4904 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 8, i64 0
  %4905 = load volatile float* %4904, align 4
  %4906 = fcmp oge float %4903, %4905
  %4907 = fcmp ueq float %4903, 0.000000e+00
  %4908 = or i1 %4906, %4907
  %4909 = select i1 %4908, float %4903, float %4905
  %4910 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 6, i64 0
  %4911 = load volatile float* %4910, align 4
  %4912 = fcmp oge float %4909, %4911
  %4913 = fcmp ueq float %4909, 0.000000e+00
  %4914 = or i1 %4912, %4913
  %4915 = select i1 %4914, float %4909, float %4911
  %4916 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 7, i64 0
  %4917 = load volatile float* %4916, align 4
  %4918 = fcmp oge float %4915, %4917
  %4919 = fcmp ueq float %4915, 0.000000e+00
  %4920 = or i1 %4918, %4919
  %4921 = select i1 %4920, float %4915, float %4917
  %4922 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 8, i64 0
  %4923 = load volatile float* %4922, align 4
  %4924 = fcmp oge float %4921, %4923
  %4925 = fcmp ueq float %4921, 0.000000e+00
  %4926 = or i1 %4924, %4925
  %4927 = select i1 %4926, float %4921, float %4923
  %4928 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 9, i64 2, i64 0
  store volatile float %4927, float* %4928, align 4
  %4929 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 9, i64 0
  %4930 = load volatile float* %4929, align 4
  %4931 = fcmp oge float 0xFFF0000000000000, %4930
  %4932 = select i1 %4931, float 0xFFF0000000000000, float %4930
  %4933 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 10, i64 0
  %4934 = load volatile float* %4933, align 4
  %4935 = fcmp oge float %4932, %4934
  %4936 = fcmp ueq float %4932, 0.000000e+00
  %4937 = or i1 %4935, %4936
  %4938 = select i1 %4937, float %4932, float %4934
  %4939 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 11, i64 0
  %4940 = load volatile float* %4939, align 4
  %4941 = fcmp oge float %4938, %4940
  %4942 = fcmp ueq float %4938, 0.000000e+00
  %4943 = or i1 %4941, %4942
  %4944 = select i1 %4943, float %4938, float %4940
  %4945 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 9, i64 0
  %4946 = load volatile float* %4945, align 4
  %4947 = fcmp oge float %4944, %4946
  %4948 = fcmp ueq float %4944, 0.000000e+00
  %4949 = or i1 %4947, %4948
  %4950 = select i1 %4949, float %4944, float %4946
  %4951 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 10, i64 0
  %4952 = load volatile float* %4951, align 4
  %4953 = fcmp oge float %4950, %4952
  %4954 = fcmp ueq float %4950, 0.000000e+00
  %4955 = or i1 %4953, %4954
  %4956 = select i1 %4955, float %4950, float %4952
  %4957 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 11, i64 0
  %4958 = load volatile float* %4957, align 4
  %4959 = fcmp oge float %4956, %4958
  %4960 = fcmp ueq float %4956, 0.000000e+00
  %4961 = or i1 %4959, %4960
  %4962 = select i1 %4961, float %4956, float %4958
  %4963 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 9, i64 0
  %4964 = load volatile float* %4963, align 4
  %4965 = fcmp oge float %4962, %4964
  %4966 = fcmp ueq float %4962, 0.000000e+00
  %4967 = or i1 %4965, %4966
  %4968 = select i1 %4967, float %4962, float %4964
  %4969 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 10, i64 0
  %4970 = load volatile float* %4969, align 4
  %4971 = fcmp oge float %4968, %4970
  %4972 = fcmp ueq float %4968, 0.000000e+00
  %4973 = or i1 %4971, %4972
  %4974 = select i1 %4973, float %4968, float %4970
  %4975 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 11, i64 0
  %4976 = load volatile float* %4975, align 4
  %4977 = fcmp oge float %4974, %4976
  %4978 = fcmp ueq float %4974, 0.000000e+00
  %4979 = or i1 %4977, %4978
  %4980 = select i1 %4979, float %4974, float %4976
  %4981 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 9, i64 3, i64 0
  store volatile float %4980, float* %4981, align 4
  %4982 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 12, i64 0
  %4983 = load volatile float* %4982, align 4
  %4984 = fcmp oge float 0xFFF0000000000000, %4983
  %4985 = select i1 %4984, float 0xFFF0000000000000, float %4983
  %4986 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 13, i64 0
  %4987 = load volatile float* %4986, align 4
  %4988 = fcmp oge float %4985, %4987
  %4989 = fcmp ueq float %4985, 0.000000e+00
  %4990 = or i1 %4988, %4989
  %4991 = select i1 %4990, float %4985, float %4987
  %4992 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 14, i64 0
  %4993 = load volatile float* %4992, align 4
  %4994 = fcmp oge float %4991, %4993
  %4995 = fcmp ueq float %4991, 0.000000e+00
  %4996 = or i1 %4994, %4995
  %4997 = select i1 %4996, float %4991, float %4993
  %4998 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 12, i64 0
  %4999 = load volatile float* %4998, align 4
  %5000 = fcmp oge float %4997, %4999
  %5001 = fcmp ueq float %4997, 0.000000e+00
  %5002 = or i1 %5000, %5001
  %5003 = select i1 %5002, float %4997, float %4999
  %5004 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 13, i64 0
  %5005 = load volatile float* %5004, align 4
  %5006 = fcmp oge float %5003, %5005
  %5007 = fcmp ueq float %5003, 0.000000e+00
  %5008 = or i1 %5006, %5007
  %5009 = select i1 %5008, float %5003, float %5005
  %5010 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 14, i64 0
  %5011 = load volatile float* %5010, align 4
  %5012 = fcmp oge float %5009, %5011
  %5013 = fcmp ueq float %5009, 0.000000e+00
  %5014 = or i1 %5012, %5013
  %5015 = select i1 %5014, float %5009, float %5011
  %5016 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 12, i64 0
  %5017 = load volatile float* %5016, align 4
  %5018 = fcmp oge float %5015, %5017
  %5019 = fcmp ueq float %5015, 0.000000e+00
  %5020 = or i1 %5018, %5019
  %5021 = select i1 %5020, float %5015, float %5017
  %5022 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 13, i64 0
  %5023 = load volatile float* %5022, align 4
  %5024 = fcmp oge float %5021, %5023
  %5025 = fcmp ueq float %5021, 0.000000e+00
  %5026 = or i1 %5024, %5025
  %5027 = select i1 %5026, float %5021, float %5023
  %5028 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 14, i64 0
  %5029 = load volatile float* %5028, align 4
  %5030 = fcmp oge float %5027, %5029
  %5031 = fcmp ueq float %5027, 0.000000e+00
  %5032 = or i1 %5030, %5031
  %5033 = select i1 %5032, float %5027, float %5029
  %5034 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 9, i64 4, i64 0
  store volatile float %5033, float* %5034, align 4
  %5035 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 15, i64 0
  %5036 = load volatile float* %5035, align 4
  %5037 = fcmp oge float 0xFFF0000000000000, %5036
  %5038 = select i1 %5037, float 0xFFF0000000000000, float %5036
  %5039 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 16, i64 0
  %5040 = load volatile float* %5039, align 4
  %5041 = fcmp oge float %5038, %5040
  %5042 = fcmp ueq float %5038, 0.000000e+00
  %5043 = or i1 %5041, %5042
  %5044 = select i1 %5043, float %5038, float %5040
  %5045 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 17, i64 0
  %5046 = load volatile float* %5045, align 4
  %5047 = fcmp oge float %5044, %5046
  %5048 = fcmp ueq float %5044, 0.000000e+00
  %5049 = or i1 %5047, %5048
  %5050 = select i1 %5049, float %5044, float %5046
  %5051 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 15, i64 0
  %5052 = load volatile float* %5051, align 4
  %5053 = fcmp oge float %5050, %5052
  %5054 = fcmp ueq float %5050, 0.000000e+00
  %5055 = or i1 %5053, %5054
  %5056 = select i1 %5055, float %5050, float %5052
  %5057 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 16, i64 0
  %5058 = load volatile float* %5057, align 4
  %5059 = fcmp oge float %5056, %5058
  %5060 = fcmp ueq float %5056, 0.000000e+00
  %5061 = or i1 %5059, %5060
  %5062 = select i1 %5061, float %5056, float %5058
  %5063 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 17, i64 0
  %5064 = load volatile float* %5063, align 4
  %5065 = fcmp oge float %5062, %5064
  %5066 = fcmp ueq float %5062, 0.000000e+00
  %5067 = or i1 %5065, %5066
  %5068 = select i1 %5067, float %5062, float %5064
  %5069 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 15, i64 0
  %5070 = load volatile float* %5069, align 4
  %5071 = fcmp oge float %5068, %5070
  %5072 = fcmp ueq float %5068, 0.000000e+00
  %5073 = or i1 %5071, %5072
  %5074 = select i1 %5073, float %5068, float %5070
  %5075 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 16, i64 0
  %5076 = load volatile float* %5075, align 4
  %5077 = fcmp oge float %5074, %5076
  %5078 = fcmp ueq float %5074, 0.000000e+00
  %5079 = or i1 %5077, %5078
  %5080 = select i1 %5079, float %5074, float %5076
  %5081 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 17, i64 0
  %5082 = load volatile float* %5081, align 4
  %5083 = fcmp oge float %5080, %5082
  %5084 = fcmp ueq float %5080, 0.000000e+00
  %5085 = or i1 %5083, %5084
  %5086 = select i1 %5085, float %5080, float %5082
  %5087 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 9, i64 5, i64 0
  store volatile float %5086, float* %5087, align 4
  %5088 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 18, i64 0
  %5089 = load volatile float* %5088, align 4
  %5090 = fcmp oge float 0xFFF0000000000000, %5089
  %5091 = select i1 %5090, float 0xFFF0000000000000, float %5089
  %5092 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 19, i64 0
  %5093 = load volatile float* %5092, align 4
  %5094 = fcmp oge float %5091, %5093
  %5095 = fcmp ueq float %5091, 0.000000e+00
  %5096 = or i1 %5094, %5095
  %5097 = select i1 %5096, float %5091, float %5093
  %5098 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 20, i64 0
  %5099 = load volatile float* %5098, align 4
  %5100 = fcmp oge float %5097, %5099
  %5101 = fcmp ueq float %5097, 0.000000e+00
  %5102 = or i1 %5100, %5101
  %5103 = select i1 %5102, float %5097, float %5099
  %5104 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 18, i64 0
  %5105 = load volatile float* %5104, align 4
  %5106 = fcmp oge float %5103, %5105
  %5107 = fcmp ueq float %5103, 0.000000e+00
  %5108 = or i1 %5106, %5107
  %5109 = select i1 %5108, float %5103, float %5105
  %5110 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 19, i64 0
  %5111 = load volatile float* %5110, align 4
  %5112 = fcmp oge float %5109, %5111
  %5113 = fcmp ueq float %5109, 0.000000e+00
  %5114 = or i1 %5112, %5113
  %5115 = select i1 %5114, float %5109, float %5111
  %5116 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 20, i64 0
  %5117 = load volatile float* %5116, align 4
  %5118 = fcmp oge float %5115, %5117
  %5119 = fcmp ueq float %5115, 0.000000e+00
  %5120 = or i1 %5118, %5119
  %5121 = select i1 %5120, float %5115, float %5117
  %5122 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 18, i64 0
  %5123 = load volatile float* %5122, align 4
  %5124 = fcmp oge float %5121, %5123
  %5125 = fcmp ueq float %5121, 0.000000e+00
  %5126 = or i1 %5124, %5125
  %5127 = select i1 %5126, float %5121, float %5123
  %5128 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 19, i64 0
  %5129 = load volatile float* %5128, align 4
  %5130 = fcmp oge float %5127, %5129
  %5131 = fcmp ueq float %5127, 0.000000e+00
  %5132 = or i1 %5130, %5131
  %5133 = select i1 %5132, float %5127, float %5129
  %5134 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 20, i64 0
  %5135 = load volatile float* %5134, align 4
  %5136 = fcmp oge float %5133, %5135
  %5137 = fcmp ueq float %5133, 0.000000e+00
  %5138 = or i1 %5136, %5137
  %5139 = select i1 %5138, float %5133, float %5135
  %5140 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 9, i64 6, i64 0
  store volatile float %5139, float* %5140, align 4
  %5141 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 21, i64 0
  %5142 = load volatile float* %5141, align 4
  %5143 = fcmp oge float 0xFFF0000000000000, %5142
  %5144 = select i1 %5143, float 0xFFF0000000000000, float %5142
  %5145 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 22, i64 0
  %5146 = load volatile float* %5145, align 4
  %5147 = fcmp oge float %5144, %5146
  %5148 = fcmp ueq float %5144, 0.000000e+00
  %5149 = or i1 %5147, %5148
  %5150 = select i1 %5149, float %5144, float %5146
  %5151 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 23, i64 0
  %5152 = load volatile float* %5151, align 4
  %5153 = fcmp oge float %5150, %5152
  %5154 = fcmp ueq float %5150, 0.000000e+00
  %5155 = or i1 %5153, %5154
  %5156 = select i1 %5155, float %5150, float %5152
  %5157 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 21, i64 0
  %5158 = load volatile float* %5157, align 4
  %5159 = fcmp oge float %5156, %5158
  %5160 = fcmp ueq float %5156, 0.000000e+00
  %5161 = or i1 %5159, %5160
  %5162 = select i1 %5161, float %5156, float %5158
  %5163 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 22, i64 0
  %5164 = load volatile float* %5163, align 4
  %5165 = fcmp oge float %5162, %5164
  %5166 = fcmp ueq float %5162, 0.000000e+00
  %5167 = or i1 %5165, %5166
  %5168 = select i1 %5167, float %5162, float %5164
  %5169 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 23, i64 0
  %5170 = load volatile float* %5169, align 4
  %5171 = fcmp oge float %5168, %5170
  %5172 = fcmp ueq float %5168, 0.000000e+00
  %5173 = or i1 %5171, %5172
  %5174 = select i1 %5173, float %5168, float %5170
  %5175 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 21, i64 0
  %5176 = load volatile float* %5175, align 4
  %5177 = fcmp oge float %5174, %5176
  %5178 = fcmp ueq float %5174, 0.000000e+00
  %5179 = or i1 %5177, %5178
  %5180 = select i1 %5179, float %5174, float %5176
  %5181 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 22, i64 0
  %5182 = load volatile float* %5181, align 4
  %5183 = fcmp oge float %5180, %5182
  %5184 = fcmp ueq float %5180, 0.000000e+00
  %5185 = or i1 %5183, %5184
  %5186 = select i1 %5185, float %5180, float %5182
  %5187 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 23, i64 0
  %5188 = load volatile float* %5187, align 4
  %5189 = fcmp oge float %5186, %5188
  %5190 = fcmp ueq float %5186, 0.000000e+00
  %5191 = or i1 %5189, %5190
  %5192 = select i1 %5191, float %5186, float %5188
  %5193 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 9, i64 7, i64 0
  store volatile float %5192, float* %5193, align 4
  %5194 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 24, i64 0
  %5195 = load volatile float* %5194, align 4
  %5196 = fcmp oge float 0xFFF0000000000000, %5195
  %5197 = select i1 %5196, float 0xFFF0000000000000, float %5195
  %5198 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 25, i64 0
  %5199 = load volatile float* %5198, align 4
  %5200 = fcmp oge float %5197, %5199
  %5201 = fcmp ueq float %5197, 0.000000e+00
  %5202 = or i1 %5200, %5201
  %5203 = select i1 %5202, float %5197, float %5199
  %5204 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 26, i64 0
  %5205 = load volatile float* %5204, align 4
  %5206 = fcmp oge float %5203, %5205
  %5207 = fcmp ueq float %5203, 0.000000e+00
  %5208 = or i1 %5206, %5207
  %5209 = select i1 %5208, float %5203, float %5205
  %5210 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 24, i64 0
  %5211 = load volatile float* %5210, align 4
  %5212 = fcmp oge float %5209, %5211
  %5213 = fcmp ueq float %5209, 0.000000e+00
  %5214 = or i1 %5212, %5213
  %5215 = select i1 %5214, float %5209, float %5211
  %5216 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 25, i64 0
  %5217 = load volatile float* %5216, align 4
  %5218 = fcmp oge float %5215, %5217
  %5219 = fcmp ueq float %5215, 0.000000e+00
  %5220 = or i1 %5218, %5219
  %5221 = select i1 %5220, float %5215, float %5217
  %5222 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 26, i64 0
  %5223 = load volatile float* %5222, align 4
  %5224 = fcmp oge float %5221, %5223
  %5225 = fcmp ueq float %5221, 0.000000e+00
  %5226 = or i1 %5224, %5225
  %5227 = select i1 %5226, float %5221, float %5223
  %5228 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 24, i64 0
  %5229 = load volatile float* %5228, align 4
  %5230 = fcmp oge float %5227, %5229
  %5231 = fcmp ueq float %5227, 0.000000e+00
  %5232 = or i1 %5230, %5231
  %5233 = select i1 %5232, float %5227, float %5229
  %5234 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 25, i64 0
  %5235 = load volatile float* %5234, align 4
  %5236 = fcmp oge float %5233, %5235
  %5237 = fcmp ueq float %5233, 0.000000e+00
  %5238 = or i1 %5236, %5237
  %5239 = select i1 %5238, float %5233, float %5235
  %5240 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 26, i64 0
  %5241 = load volatile float* %5240, align 4
  %5242 = fcmp oge float %5239, %5241
  %5243 = fcmp ueq float %5239, 0.000000e+00
  %5244 = or i1 %5242, %5243
  %5245 = select i1 %5244, float %5239, float %5241
  %5246 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 9, i64 8, i64 0
  store volatile float %5245, float* %5246, align 4
  %5247 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 27, i64 0
  %5248 = load volatile float* %5247, align 4
  %5249 = fcmp oge float 0xFFF0000000000000, %5248
  %5250 = select i1 %5249, float 0xFFF0000000000000, float %5248
  %5251 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 28, i64 0
  %5252 = load volatile float* %5251, align 4
  %5253 = fcmp oge float %5250, %5252
  %5254 = fcmp ueq float %5250, 0.000000e+00
  %5255 = or i1 %5253, %5254
  %5256 = select i1 %5255, float %5250, float %5252
  %5257 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 29, i64 0
  %5258 = load volatile float* %5257, align 4
  %5259 = fcmp oge float %5256, %5258
  %5260 = fcmp ueq float %5256, 0.000000e+00
  %5261 = or i1 %5259, %5260
  %5262 = select i1 %5261, float %5256, float %5258
  %5263 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 27, i64 0
  %5264 = load volatile float* %5263, align 4
  %5265 = fcmp oge float %5262, %5264
  %5266 = fcmp ueq float %5262, 0.000000e+00
  %5267 = or i1 %5265, %5266
  %5268 = select i1 %5267, float %5262, float %5264
  %5269 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 28, i64 0
  %5270 = load volatile float* %5269, align 4
  %5271 = fcmp oge float %5268, %5270
  %5272 = fcmp ueq float %5268, 0.000000e+00
  %5273 = or i1 %5271, %5272
  %5274 = select i1 %5273, float %5268, float %5270
  %5275 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 29, i64 0
  %5276 = load volatile float* %5275, align 4
  %5277 = fcmp oge float %5274, %5276
  %5278 = fcmp ueq float %5274, 0.000000e+00
  %5279 = or i1 %5277, %5278
  %5280 = select i1 %5279, float %5274, float %5276
  %5281 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 27, i64 0
  %5282 = load volatile float* %5281, align 4
  %5283 = fcmp oge float %5280, %5282
  %5284 = fcmp ueq float %5280, 0.000000e+00
  %5285 = or i1 %5283, %5284
  %5286 = select i1 %5285, float %5280, float %5282
  %5287 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 28, i64 0
  %5288 = load volatile float* %5287, align 4
  %5289 = fcmp oge float %5286, %5288
  %5290 = fcmp ueq float %5286, 0.000000e+00
  %5291 = or i1 %5289, %5290
  %5292 = select i1 %5291, float %5286, float %5288
  %5293 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 29, i64 0
  %5294 = load volatile float* %5293, align 4
  %5295 = fcmp oge float %5292, %5294
  %5296 = fcmp ueq float %5292, 0.000000e+00
  %5297 = or i1 %5295, %5296
  %5298 = select i1 %5297, float %5292, float %5294
  %5299 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 9, i64 9, i64 0
  store volatile float %5298, float* %5299, align 4
  %leflow_gep = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 0, i64 0, i64 0
  %leflow_retval = load volatile float* %leflow_gep, align 4
  ret float %leflow_retval
}

attributes #0 = { "no-frame-pointer-elim"="false" }
