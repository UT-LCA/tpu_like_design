; ModuleID = '14_maxp_b_f_files/14_maxp_b_f_ir_4.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux_gnu"

define void @cluster_0__XlaCompiledKernel_true__XlaNumConstantArgs_0__XlaNumResourceArgs_0_.v6(i8* nocapture align 8 dereferenceable(8) %retval, i8* noalias nocapture readnone %run_options, i8** noalias nocapture readonly %params, i8** noalias nocapture readonly %temps, i64* noalias nocapture readnone %prof_counters) #0 {
reduce-window.loop_body.dim.1.lr.ph:
  %arg0.untyped = load i8** %params, align 8, !dereferenceable !0, !align !1
  %0 = bitcast i8* %arg0.untyped to [1 x [32 x [32 x [1 x float]]]]*
  %1 = getelementptr inbounds i8** %temps, i64 1
  %2 = load i8** %1, align 8, !dereferenceable !2, !align !3
  %reduce-window = bitcast i8* %2 to [1 x [10 x [10 x [1 x float]]]]*
  %3 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 0, i64 0, i64 0
  %4 = load float* %3, align 4
  %5 = fcmp oge float 0xFFF0000000000000, %4
  %6 = select i1 %5, float 0xFFF0000000000000, float %4
  %7 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 0, i64 1, i64 0
  %8 = load float* %7, align 4
  %9 = fcmp oge float %6, %8
  %10 = fcmp uno float %6, 0.000000e+00
  %11 = or i1 %9, %10
  %12 = select i1 %11, float %6, float %8
  %13 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 0, i64 2, i64 0
  %14 = load float* %13, align 4
  %15 = fcmp oge float %12, %14
  %16 = fcmp uno float %12, 0.000000e+00
  %17 = or i1 %15, %16
  %18 = select i1 %17, float %12, float %14
  %19 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 1, i64 0, i64 0
  %20 = load float* %19, align 4
  %21 = fcmp oge float %18, %20
  %22 = fcmp uno float %18, 0.000000e+00
  %23 = or i1 %21, %22
  %24 = select i1 %23, float %18, float %20
  %25 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 1, i64 1, i64 0
  %26 = load float* %25, align 4
  %27 = fcmp oge float %24, %26
  %28 = fcmp uno float %24, 0.000000e+00
  %29 = or i1 %27, %28
  %30 = select i1 %29, float %24, float %26
  %31 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 1, i64 2, i64 0
  %32 = load float* %31, align 4
  %33 = fcmp oge float %30, %32
  %34 = fcmp uno float %30, 0.000000e+00
  %35 = or i1 %33, %34
  %36 = select i1 %35, float %30, float %32
  %37 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 2, i64 0, i64 0
  %38 = load float* %37, align 4
  %39 = fcmp oge float %36, %38
  %40 = fcmp uno float %36, 0.000000e+00
  %41 = or i1 %39, %40
  %42 = select i1 %41, float %36, float %38
  %43 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 2, i64 1, i64 0
  %44 = load float* %43, align 4
  %45 = fcmp oge float %42, %44
  %46 = fcmp uno float %42, 0.000000e+00
  %47 = or i1 %45, %46
  %48 = select i1 %47, float %42, float %44
  %49 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 2, i64 2, i64 0
  %50 = load float* %49, align 4
  %51 = fcmp oge float %48, %50
  %52 = fcmp uno float %48, 0.000000e+00
  %53 = or i1 %51, %52
  %54 = select i1 %53, float %48, float %50
  %55 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 0, i64 0, i64 0
  store float %54, float* %55, align 4
  %56 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 0, i64 3, i64 0
  %57 = load float* %56, align 4
  %58 = fcmp oge float 0xFFF0000000000000, %57
  %59 = select i1 %58, float 0xFFF0000000000000, float %57
  %60 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 0, i64 4, i64 0
  %61 = load float* %60, align 4
  %62 = fcmp oge float %59, %61
  %63 = fcmp uno float %59, 0.000000e+00
  %64 = or i1 %62, %63
  %65 = select i1 %64, float %59, float %61
  %66 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 0, i64 5, i64 0
  %67 = load float* %66, align 4
  %68 = fcmp oge float %65, %67
  %69 = fcmp uno float %65, 0.000000e+00
  %70 = or i1 %68, %69
  %71 = select i1 %70, float %65, float %67
  %72 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 1, i64 3, i64 0
  %73 = load float* %72, align 4
  %74 = fcmp oge float %71, %73
  %75 = fcmp uno float %71, 0.000000e+00
  %76 = or i1 %74, %75
  %77 = select i1 %76, float %71, float %73
  %78 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 1, i64 4, i64 0
  %79 = load float* %78, align 4
  %80 = fcmp oge float %77, %79
  %81 = fcmp uno float %77, 0.000000e+00
  %82 = or i1 %80, %81
  %83 = select i1 %82, float %77, float %79
  %84 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 1, i64 5, i64 0
  %85 = load float* %84, align 4
  %86 = fcmp oge float %83, %85
  %87 = fcmp uno float %83, 0.000000e+00
  %88 = or i1 %86, %87
  %89 = select i1 %88, float %83, float %85
  %90 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 2, i64 3, i64 0
  %91 = load float* %90, align 4
  %92 = fcmp oge float %89, %91
  %93 = fcmp uno float %89, 0.000000e+00
  %94 = or i1 %92, %93
  %95 = select i1 %94, float %89, float %91
  %96 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 2, i64 4, i64 0
  %97 = load float* %96, align 4
  %98 = fcmp oge float %95, %97
  %99 = fcmp uno float %95, 0.000000e+00
  %100 = or i1 %98, %99
  %101 = select i1 %100, float %95, float %97
  %102 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 2, i64 5, i64 0
  %103 = load float* %102, align 4
  %104 = fcmp oge float %101, %103
  %105 = fcmp uno float %101, 0.000000e+00
  %106 = or i1 %104, %105
  %107 = select i1 %106, float %101, float %103
  %108 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 0, i64 1, i64 0
  store float %107, float* %108, align 4
  %109 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 0, i64 6, i64 0
  %110 = load float* %109, align 4
  %111 = fcmp oge float 0xFFF0000000000000, %110
  %112 = select i1 %111, float 0xFFF0000000000000, float %110
  %113 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 0, i64 7, i64 0
  %114 = load float* %113, align 4
  %115 = fcmp oge float %112, %114
  %116 = fcmp uno float %112, 0.000000e+00
  %117 = or i1 %115, %116
  %118 = select i1 %117, float %112, float %114
  %119 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 0, i64 8, i64 0
  %120 = load float* %119, align 4
  %121 = fcmp oge float %118, %120
  %122 = fcmp uno float %118, 0.000000e+00
  %123 = or i1 %121, %122
  %124 = select i1 %123, float %118, float %120
  %125 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 1, i64 6, i64 0
  %126 = load float* %125, align 4
  %127 = fcmp oge float %124, %126
  %128 = fcmp uno float %124, 0.000000e+00
  %129 = or i1 %127, %128
  %130 = select i1 %129, float %124, float %126
  %131 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 1, i64 7, i64 0
  %132 = load float* %131, align 4
  %133 = fcmp oge float %130, %132
  %134 = fcmp uno float %130, 0.000000e+00
  %135 = or i1 %133, %134
  %136 = select i1 %135, float %130, float %132
  %137 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 1, i64 8, i64 0
  %138 = load float* %137, align 4
  %139 = fcmp oge float %136, %138
  %140 = fcmp uno float %136, 0.000000e+00
  %141 = or i1 %139, %140
  %142 = select i1 %141, float %136, float %138
  %143 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 2, i64 6, i64 0
  %144 = load float* %143, align 4
  %145 = fcmp oge float %142, %144
  %146 = fcmp uno float %142, 0.000000e+00
  %147 = or i1 %145, %146
  %148 = select i1 %147, float %142, float %144
  %149 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 2, i64 7, i64 0
  %150 = load float* %149, align 4
  %151 = fcmp oge float %148, %150
  %152 = fcmp uno float %148, 0.000000e+00
  %153 = or i1 %151, %152
  %154 = select i1 %153, float %148, float %150
  %155 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 2, i64 8, i64 0
  %156 = load float* %155, align 4
  %157 = fcmp oge float %154, %156
  %158 = fcmp uno float %154, 0.000000e+00
  %159 = or i1 %157, %158
  %160 = select i1 %159, float %154, float %156
  %161 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 0, i64 2, i64 0
  store float %160, float* %161, align 4
  %162 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 0, i64 9, i64 0
  %163 = load float* %162, align 4
  %164 = fcmp oge float 0xFFF0000000000000, %163
  %165 = select i1 %164, float 0xFFF0000000000000, float %163
  %166 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 0, i64 10, i64 0
  %167 = load float* %166, align 4
  %168 = fcmp oge float %165, %167
  %169 = fcmp uno float %165, 0.000000e+00
  %170 = or i1 %168, %169
  %171 = select i1 %170, float %165, float %167
  %172 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 0, i64 11, i64 0
  %173 = load float* %172, align 4
  %174 = fcmp oge float %171, %173
  %175 = fcmp uno float %171, 0.000000e+00
  %176 = or i1 %174, %175
  %177 = select i1 %176, float %171, float %173
  %178 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 1, i64 9, i64 0
  %179 = load float* %178, align 4
  %180 = fcmp oge float %177, %179
  %181 = fcmp uno float %177, 0.000000e+00
  %182 = or i1 %180, %181
  %183 = select i1 %182, float %177, float %179
  %184 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 1, i64 10, i64 0
  %185 = load float* %184, align 4
  %186 = fcmp oge float %183, %185
  %187 = fcmp uno float %183, 0.000000e+00
  %188 = or i1 %186, %187
  %189 = select i1 %188, float %183, float %185
  %190 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 1, i64 11, i64 0
  %191 = load float* %190, align 4
  %192 = fcmp oge float %189, %191
  %193 = fcmp uno float %189, 0.000000e+00
  %194 = or i1 %192, %193
  %195 = select i1 %194, float %189, float %191
  %196 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 2, i64 9, i64 0
  %197 = load float* %196, align 4
  %198 = fcmp oge float %195, %197
  %199 = fcmp uno float %195, 0.000000e+00
  %200 = or i1 %198, %199
  %201 = select i1 %200, float %195, float %197
  %202 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 2, i64 10, i64 0
  %203 = load float* %202, align 4
  %204 = fcmp oge float %201, %203
  %205 = fcmp uno float %201, 0.000000e+00
  %206 = or i1 %204, %205
  %207 = select i1 %206, float %201, float %203
  %208 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 2, i64 11, i64 0
  %209 = load float* %208, align 4
  %210 = fcmp oge float %207, %209
  %211 = fcmp uno float %207, 0.000000e+00
  %212 = or i1 %210, %211
  %213 = select i1 %212, float %207, float %209
  %214 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 0, i64 3, i64 0
  store float %213, float* %214, align 4
  %215 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 0, i64 12, i64 0
  %216 = load float* %215, align 4
  %217 = fcmp oge float 0xFFF0000000000000, %216
  %218 = select i1 %217, float 0xFFF0000000000000, float %216
  %219 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 0, i64 13, i64 0
  %220 = load float* %219, align 4
  %221 = fcmp oge float %218, %220
  %222 = fcmp uno float %218, 0.000000e+00
  %223 = or i1 %221, %222
  %224 = select i1 %223, float %218, float %220
  %225 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 0, i64 14, i64 0
  %226 = load float* %225, align 4
  %227 = fcmp oge float %224, %226
  %228 = fcmp uno float %224, 0.000000e+00
  %229 = or i1 %227, %228
  %230 = select i1 %229, float %224, float %226
  %231 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 1, i64 12, i64 0
  %232 = load float* %231, align 4
  %233 = fcmp oge float %230, %232
  %234 = fcmp uno float %230, 0.000000e+00
  %235 = or i1 %233, %234
  %236 = select i1 %235, float %230, float %232
  %237 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 1, i64 13, i64 0
  %238 = load float* %237, align 4
  %239 = fcmp oge float %236, %238
  %240 = fcmp uno float %236, 0.000000e+00
  %241 = or i1 %239, %240
  %242 = select i1 %241, float %236, float %238
  %243 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 1, i64 14, i64 0
  %244 = load float* %243, align 4
  %245 = fcmp oge float %242, %244
  %246 = fcmp uno float %242, 0.000000e+00
  %247 = or i1 %245, %246
  %248 = select i1 %247, float %242, float %244
  %249 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 2, i64 12, i64 0
  %250 = load float* %249, align 4
  %251 = fcmp oge float %248, %250
  %252 = fcmp uno float %248, 0.000000e+00
  %253 = or i1 %251, %252
  %254 = select i1 %253, float %248, float %250
  %255 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 2, i64 13, i64 0
  %256 = load float* %255, align 4
  %257 = fcmp oge float %254, %256
  %258 = fcmp uno float %254, 0.000000e+00
  %259 = or i1 %257, %258
  %260 = select i1 %259, float %254, float %256
  %261 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 2, i64 14, i64 0
  %262 = load float* %261, align 4
  %263 = fcmp oge float %260, %262
  %264 = fcmp uno float %260, 0.000000e+00
  %265 = or i1 %263, %264
  %266 = select i1 %265, float %260, float %262
  %267 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 0, i64 4, i64 0
  store float %266, float* %267, align 4
  %268 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 0, i64 15, i64 0
  %269 = load float* %268, align 4
  %270 = fcmp oge float 0xFFF0000000000000, %269
  %271 = select i1 %270, float 0xFFF0000000000000, float %269
  %272 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 0, i64 16, i64 0
  %273 = load float* %272, align 4
  %274 = fcmp oge float %271, %273
  %275 = fcmp uno float %271, 0.000000e+00
  %276 = or i1 %274, %275
  %277 = select i1 %276, float %271, float %273
  %278 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 0, i64 17, i64 0
  %279 = load float* %278, align 4
  %280 = fcmp oge float %277, %279
  %281 = fcmp uno float %277, 0.000000e+00
  %282 = or i1 %280, %281
  %283 = select i1 %282, float %277, float %279
  %284 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 1, i64 15, i64 0
  %285 = load float* %284, align 4
  %286 = fcmp oge float %283, %285
  %287 = fcmp uno float %283, 0.000000e+00
  %288 = or i1 %286, %287
  %289 = select i1 %288, float %283, float %285
  %290 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 1, i64 16, i64 0
  %291 = load float* %290, align 4
  %292 = fcmp oge float %289, %291
  %293 = fcmp uno float %289, 0.000000e+00
  %294 = or i1 %292, %293
  %295 = select i1 %294, float %289, float %291
  %296 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 1, i64 17, i64 0
  %297 = load float* %296, align 4
  %298 = fcmp oge float %295, %297
  %299 = fcmp uno float %295, 0.000000e+00
  %300 = or i1 %298, %299
  %301 = select i1 %300, float %295, float %297
  %302 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 2, i64 15, i64 0
  %303 = load float* %302, align 4
  %304 = fcmp oge float %301, %303
  %305 = fcmp uno float %301, 0.000000e+00
  %306 = or i1 %304, %305
  %307 = select i1 %306, float %301, float %303
  %308 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 2, i64 16, i64 0
  %309 = load float* %308, align 4
  %310 = fcmp oge float %307, %309
  %311 = fcmp uno float %307, 0.000000e+00
  %312 = or i1 %310, %311
  %313 = select i1 %312, float %307, float %309
  %314 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 2, i64 17, i64 0
  %315 = load float* %314, align 4
  %316 = fcmp oge float %313, %315
  %317 = fcmp uno float %313, 0.000000e+00
  %318 = or i1 %316, %317
  %319 = select i1 %318, float %313, float %315
  %320 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 0, i64 5, i64 0
  store float %319, float* %320, align 4
  %321 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 0, i64 18, i64 0
  %322 = load float* %321, align 4
  %323 = fcmp oge float 0xFFF0000000000000, %322
  %324 = select i1 %323, float 0xFFF0000000000000, float %322
  %325 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 0, i64 19, i64 0
  %326 = load float* %325, align 4
  %327 = fcmp oge float %324, %326
  %328 = fcmp uno float %324, 0.000000e+00
  %329 = or i1 %327, %328
  %330 = select i1 %329, float %324, float %326
  %331 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 0, i64 20, i64 0
  %332 = load float* %331, align 4
  %333 = fcmp oge float %330, %332
  %334 = fcmp uno float %330, 0.000000e+00
  %335 = or i1 %333, %334
  %336 = select i1 %335, float %330, float %332
  %337 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 1, i64 18, i64 0
  %338 = load float* %337, align 4
  %339 = fcmp oge float %336, %338
  %340 = fcmp uno float %336, 0.000000e+00
  %341 = or i1 %339, %340
  %342 = select i1 %341, float %336, float %338
  %343 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 1, i64 19, i64 0
  %344 = load float* %343, align 4
  %345 = fcmp oge float %342, %344
  %346 = fcmp uno float %342, 0.000000e+00
  %347 = or i1 %345, %346
  %348 = select i1 %347, float %342, float %344
  %349 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 1, i64 20, i64 0
  %350 = load float* %349, align 4
  %351 = fcmp oge float %348, %350
  %352 = fcmp uno float %348, 0.000000e+00
  %353 = or i1 %351, %352
  %354 = select i1 %353, float %348, float %350
  %355 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 2, i64 18, i64 0
  %356 = load float* %355, align 4
  %357 = fcmp oge float %354, %356
  %358 = fcmp uno float %354, 0.000000e+00
  %359 = or i1 %357, %358
  %360 = select i1 %359, float %354, float %356
  %361 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 2, i64 19, i64 0
  %362 = load float* %361, align 4
  %363 = fcmp oge float %360, %362
  %364 = fcmp uno float %360, 0.000000e+00
  %365 = or i1 %363, %364
  %366 = select i1 %365, float %360, float %362
  %367 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 2, i64 20, i64 0
  %368 = load float* %367, align 4
  %369 = fcmp oge float %366, %368
  %370 = fcmp uno float %366, 0.000000e+00
  %371 = or i1 %369, %370
  %372 = select i1 %371, float %366, float %368
  %373 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 0, i64 6, i64 0
  store float %372, float* %373, align 4
  %374 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 0, i64 21, i64 0
  %375 = load float* %374, align 4
  %376 = fcmp oge float 0xFFF0000000000000, %375
  %377 = select i1 %376, float 0xFFF0000000000000, float %375
  %378 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 0, i64 22, i64 0
  %379 = load float* %378, align 4
  %380 = fcmp oge float %377, %379
  %381 = fcmp uno float %377, 0.000000e+00
  %382 = or i1 %380, %381
  %383 = select i1 %382, float %377, float %379
  %384 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 0, i64 23, i64 0
  %385 = load float* %384, align 4
  %386 = fcmp oge float %383, %385
  %387 = fcmp uno float %383, 0.000000e+00
  %388 = or i1 %386, %387
  %389 = select i1 %388, float %383, float %385
  %390 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 1, i64 21, i64 0
  %391 = load float* %390, align 4
  %392 = fcmp oge float %389, %391
  %393 = fcmp uno float %389, 0.000000e+00
  %394 = or i1 %392, %393
  %395 = select i1 %394, float %389, float %391
  %396 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 1, i64 22, i64 0
  %397 = load float* %396, align 4
  %398 = fcmp oge float %395, %397
  %399 = fcmp uno float %395, 0.000000e+00
  %400 = or i1 %398, %399
  %401 = select i1 %400, float %395, float %397
  %402 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 1, i64 23, i64 0
  %403 = load float* %402, align 4
  %404 = fcmp oge float %401, %403
  %405 = fcmp uno float %401, 0.000000e+00
  %406 = or i1 %404, %405
  %407 = select i1 %406, float %401, float %403
  %408 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 2, i64 21, i64 0
  %409 = load float* %408, align 4
  %410 = fcmp oge float %407, %409
  %411 = fcmp uno float %407, 0.000000e+00
  %412 = or i1 %410, %411
  %413 = select i1 %412, float %407, float %409
  %414 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 2, i64 22, i64 0
  %415 = load float* %414, align 4
  %416 = fcmp oge float %413, %415
  %417 = fcmp uno float %413, 0.000000e+00
  %418 = or i1 %416, %417
  %419 = select i1 %418, float %413, float %415
  %420 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 2, i64 23, i64 0
  %421 = load float* %420, align 4
  %422 = fcmp oge float %419, %421
  %423 = fcmp uno float %419, 0.000000e+00
  %424 = or i1 %422, %423
  %425 = select i1 %424, float %419, float %421
  %426 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 0, i64 7, i64 0
  store float %425, float* %426, align 4
  %427 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 0, i64 24, i64 0
  %428 = load float* %427, align 4
  %429 = fcmp oge float 0xFFF0000000000000, %428
  %430 = select i1 %429, float 0xFFF0000000000000, float %428
  %431 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 0, i64 25, i64 0
  %432 = load float* %431, align 4
  %433 = fcmp oge float %430, %432
  %434 = fcmp uno float %430, 0.000000e+00
  %435 = or i1 %433, %434
  %436 = select i1 %435, float %430, float %432
  %437 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 0, i64 26, i64 0
  %438 = load float* %437, align 4
  %439 = fcmp oge float %436, %438
  %440 = fcmp uno float %436, 0.000000e+00
  %441 = or i1 %439, %440
  %442 = select i1 %441, float %436, float %438
  %443 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 1, i64 24, i64 0
  %444 = load float* %443, align 4
  %445 = fcmp oge float %442, %444
  %446 = fcmp uno float %442, 0.000000e+00
  %447 = or i1 %445, %446
  %448 = select i1 %447, float %442, float %444
  %449 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 1, i64 25, i64 0
  %450 = load float* %449, align 4
  %451 = fcmp oge float %448, %450
  %452 = fcmp uno float %448, 0.000000e+00
  %453 = or i1 %451, %452
  %454 = select i1 %453, float %448, float %450
  %455 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 1, i64 26, i64 0
  %456 = load float* %455, align 4
  %457 = fcmp oge float %454, %456
  %458 = fcmp uno float %454, 0.000000e+00
  %459 = or i1 %457, %458
  %460 = select i1 %459, float %454, float %456
  %461 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 2, i64 24, i64 0
  %462 = load float* %461, align 4
  %463 = fcmp oge float %460, %462
  %464 = fcmp uno float %460, 0.000000e+00
  %465 = or i1 %463, %464
  %466 = select i1 %465, float %460, float %462
  %467 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 2, i64 25, i64 0
  %468 = load float* %467, align 4
  %469 = fcmp oge float %466, %468
  %470 = fcmp uno float %466, 0.000000e+00
  %471 = or i1 %469, %470
  %472 = select i1 %471, float %466, float %468
  %473 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 2, i64 26, i64 0
  %474 = load float* %473, align 4
  %475 = fcmp oge float %472, %474
  %476 = fcmp uno float %472, 0.000000e+00
  %477 = or i1 %475, %476
  %478 = select i1 %477, float %472, float %474
  %479 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 0, i64 8, i64 0
  store float %478, float* %479, align 4
  %480 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 0, i64 27, i64 0
  %481 = load float* %480, align 4
  %482 = fcmp oge float 0xFFF0000000000000, %481
  %483 = select i1 %482, float 0xFFF0000000000000, float %481
  %484 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 0, i64 28, i64 0
  %485 = load float* %484, align 4
  %486 = fcmp oge float %483, %485
  %487 = fcmp uno float %483, 0.000000e+00
  %488 = or i1 %486, %487
  %489 = select i1 %488, float %483, float %485
  %490 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 0, i64 29, i64 0
  %491 = load float* %490, align 4
  %492 = fcmp oge float %489, %491
  %493 = fcmp uno float %489, 0.000000e+00
  %494 = or i1 %492, %493
  %495 = select i1 %494, float %489, float %491
  %496 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 1, i64 27, i64 0
  %497 = load float* %496, align 4
  %498 = fcmp oge float %495, %497
  %499 = fcmp uno float %495, 0.000000e+00
  %500 = or i1 %498, %499
  %501 = select i1 %500, float %495, float %497
  %502 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 1, i64 28, i64 0
  %503 = load float* %502, align 4
  %504 = fcmp oge float %501, %503
  %505 = fcmp uno float %501, 0.000000e+00
  %506 = or i1 %504, %505
  %507 = select i1 %506, float %501, float %503
  %508 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 1, i64 29, i64 0
  %509 = load float* %508, align 4
  %510 = fcmp oge float %507, %509
  %511 = fcmp uno float %507, 0.000000e+00
  %512 = or i1 %510, %511
  %513 = select i1 %512, float %507, float %509
  %514 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 2, i64 27, i64 0
  %515 = load float* %514, align 4
  %516 = fcmp oge float %513, %515
  %517 = fcmp uno float %513, 0.000000e+00
  %518 = or i1 %516, %517
  %519 = select i1 %518, float %513, float %515
  %520 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 2, i64 28, i64 0
  %521 = load float* %520, align 4
  %522 = fcmp oge float %519, %521
  %523 = fcmp uno float %519, 0.000000e+00
  %524 = or i1 %522, %523
  %525 = select i1 %524, float %519, float %521
  %526 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 2, i64 29, i64 0
  %527 = load float* %526, align 4
  %528 = fcmp oge float %525, %527
  %529 = fcmp uno float %525, 0.000000e+00
  %530 = or i1 %528, %529
  %531 = select i1 %530, float %525, float %527
  %532 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 0, i64 9, i64 0
  store float %531, float* %532, align 4
  %533 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 3, i64 0, i64 0
  %534 = load float* %533, align 4
  %535 = fcmp oge float 0xFFF0000000000000, %534
  %536 = select i1 %535, float 0xFFF0000000000000, float %534
  %537 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 3, i64 1, i64 0
  %538 = load float* %537, align 4
  %539 = fcmp oge float %536, %538
  %540 = fcmp uno float %536, 0.000000e+00
  %541 = or i1 %539, %540
  %542 = select i1 %541, float %536, float %538
  %543 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 3, i64 2, i64 0
  %544 = load float* %543, align 4
  %545 = fcmp oge float %542, %544
  %546 = fcmp uno float %542, 0.000000e+00
  %547 = or i1 %545, %546
  %548 = select i1 %547, float %542, float %544
  %549 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 4, i64 0, i64 0
  %550 = load float* %549, align 4
  %551 = fcmp oge float %548, %550
  %552 = fcmp uno float %548, 0.000000e+00
  %553 = or i1 %551, %552
  %554 = select i1 %553, float %548, float %550
  %555 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 4, i64 1, i64 0
  %556 = load float* %555, align 4
  %557 = fcmp oge float %554, %556
  %558 = fcmp uno float %554, 0.000000e+00
  %559 = or i1 %557, %558
  %560 = select i1 %559, float %554, float %556
  %561 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 4, i64 2, i64 0
  %562 = load float* %561, align 4
  %563 = fcmp oge float %560, %562
  %564 = fcmp uno float %560, 0.000000e+00
  %565 = or i1 %563, %564
  %566 = select i1 %565, float %560, float %562
  %567 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 5, i64 0, i64 0
  %568 = load float* %567, align 4
  %569 = fcmp oge float %566, %568
  %570 = fcmp uno float %566, 0.000000e+00
  %571 = or i1 %569, %570
  %572 = select i1 %571, float %566, float %568
  %573 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 5, i64 1, i64 0
  %574 = load float* %573, align 4
  %575 = fcmp oge float %572, %574
  %576 = fcmp uno float %572, 0.000000e+00
  %577 = or i1 %575, %576
  %578 = select i1 %577, float %572, float %574
  %579 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 5, i64 2, i64 0
  %580 = load float* %579, align 4
  %581 = fcmp oge float %578, %580
  %582 = fcmp uno float %578, 0.000000e+00
  %583 = or i1 %581, %582
  %584 = select i1 %583, float %578, float %580
  %585 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 1, i64 0, i64 0
  store float %584, float* %585, align 4
  %586 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 3, i64 3, i64 0
  %587 = load float* %586, align 4
  %588 = fcmp oge float 0xFFF0000000000000, %587
  %589 = select i1 %588, float 0xFFF0000000000000, float %587
  %590 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 3, i64 4, i64 0
  %591 = load float* %590, align 4
  %592 = fcmp oge float %589, %591
  %593 = fcmp uno float %589, 0.000000e+00
  %594 = or i1 %592, %593
  %595 = select i1 %594, float %589, float %591
  %596 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 3, i64 5, i64 0
  %597 = load float* %596, align 4
  %598 = fcmp oge float %595, %597
  %599 = fcmp uno float %595, 0.000000e+00
  %600 = or i1 %598, %599
  %601 = select i1 %600, float %595, float %597
  %602 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 4, i64 3, i64 0
  %603 = load float* %602, align 4
  %604 = fcmp oge float %601, %603
  %605 = fcmp uno float %601, 0.000000e+00
  %606 = or i1 %604, %605
  %607 = select i1 %606, float %601, float %603
  %608 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 4, i64 4, i64 0
  %609 = load float* %608, align 4
  %610 = fcmp oge float %607, %609
  %611 = fcmp uno float %607, 0.000000e+00
  %612 = or i1 %610, %611
  %613 = select i1 %612, float %607, float %609
  %614 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 4, i64 5, i64 0
  %615 = load float* %614, align 4
  %616 = fcmp oge float %613, %615
  %617 = fcmp uno float %613, 0.000000e+00
  %618 = or i1 %616, %617
  %619 = select i1 %618, float %613, float %615
  %620 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 5, i64 3, i64 0
  %621 = load float* %620, align 4
  %622 = fcmp oge float %619, %621
  %623 = fcmp uno float %619, 0.000000e+00
  %624 = or i1 %622, %623
  %625 = select i1 %624, float %619, float %621
  %626 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 5, i64 4, i64 0
  %627 = load float* %626, align 4
  %628 = fcmp oge float %625, %627
  %629 = fcmp uno float %625, 0.000000e+00
  %630 = or i1 %628, %629
  %631 = select i1 %630, float %625, float %627
  %632 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 5, i64 5, i64 0
  %633 = load float* %632, align 4
  %634 = fcmp oge float %631, %633
  %635 = fcmp uno float %631, 0.000000e+00
  %636 = or i1 %634, %635
  %637 = select i1 %636, float %631, float %633
  %638 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 1, i64 1, i64 0
  store float %637, float* %638, align 4
  %639 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 3, i64 6, i64 0
  %640 = load float* %639, align 4
  %641 = fcmp oge float 0xFFF0000000000000, %640
  %642 = select i1 %641, float 0xFFF0000000000000, float %640
  %643 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 3, i64 7, i64 0
  %644 = load float* %643, align 4
  %645 = fcmp oge float %642, %644
  %646 = fcmp uno float %642, 0.000000e+00
  %647 = or i1 %645, %646
  %648 = select i1 %647, float %642, float %644
  %649 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 3, i64 8, i64 0
  %650 = load float* %649, align 4
  %651 = fcmp oge float %648, %650
  %652 = fcmp uno float %648, 0.000000e+00
  %653 = or i1 %651, %652
  %654 = select i1 %653, float %648, float %650
  %655 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 4, i64 6, i64 0
  %656 = load float* %655, align 4
  %657 = fcmp oge float %654, %656
  %658 = fcmp uno float %654, 0.000000e+00
  %659 = or i1 %657, %658
  %660 = select i1 %659, float %654, float %656
  %661 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 4, i64 7, i64 0
  %662 = load float* %661, align 4
  %663 = fcmp oge float %660, %662
  %664 = fcmp uno float %660, 0.000000e+00
  %665 = or i1 %663, %664
  %666 = select i1 %665, float %660, float %662
  %667 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 4, i64 8, i64 0
  %668 = load float* %667, align 4
  %669 = fcmp oge float %666, %668
  %670 = fcmp uno float %666, 0.000000e+00
  %671 = or i1 %669, %670
  %672 = select i1 %671, float %666, float %668
  %673 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 5, i64 6, i64 0
  %674 = load float* %673, align 4
  %675 = fcmp oge float %672, %674
  %676 = fcmp uno float %672, 0.000000e+00
  %677 = or i1 %675, %676
  %678 = select i1 %677, float %672, float %674
  %679 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 5, i64 7, i64 0
  %680 = load float* %679, align 4
  %681 = fcmp oge float %678, %680
  %682 = fcmp uno float %678, 0.000000e+00
  %683 = or i1 %681, %682
  %684 = select i1 %683, float %678, float %680
  %685 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 5, i64 8, i64 0
  %686 = load float* %685, align 4
  %687 = fcmp oge float %684, %686
  %688 = fcmp uno float %684, 0.000000e+00
  %689 = or i1 %687, %688
  %690 = select i1 %689, float %684, float %686
  %691 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 1, i64 2, i64 0
  store float %690, float* %691, align 4
  %692 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 3, i64 9, i64 0
  %693 = load float* %692, align 4
  %694 = fcmp oge float 0xFFF0000000000000, %693
  %695 = select i1 %694, float 0xFFF0000000000000, float %693
  %696 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 3, i64 10, i64 0
  %697 = load float* %696, align 4
  %698 = fcmp oge float %695, %697
  %699 = fcmp uno float %695, 0.000000e+00
  %700 = or i1 %698, %699
  %701 = select i1 %700, float %695, float %697
  %702 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 3, i64 11, i64 0
  %703 = load float* %702, align 4
  %704 = fcmp oge float %701, %703
  %705 = fcmp uno float %701, 0.000000e+00
  %706 = or i1 %704, %705
  %707 = select i1 %706, float %701, float %703
  %708 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 4, i64 9, i64 0
  %709 = load float* %708, align 4
  %710 = fcmp oge float %707, %709
  %711 = fcmp uno float %707, 0.000000e+00
  %712 = or i1 %710, %711
  %713 = select i1 %712, float %707, float %709
  %714 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 4, i64 10, i64 0
  %715 = load float* %714, align 4
  %716 = fcmp oge float %713, %715
  %717 = fcmp uno float %713, 0.000000e+00
  %718 = or i1 %716, %717
  %719 = select i1 %718, float %713, float %715
  %720 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 4, i64 11, i64 0
  %721 = load float* %720, align 4
  %722 = fcmp oge float %719, %721
  %723 = fcmp uno float %719, 0.000000e+00
  %724 = or i1 %722, %723
  %725 = select i1 %724, float %719, float %721
  %726 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 5, i64 9, i64 0
  %727 = load float* %726, align 4
  %728 = fcmp oge float %725, %727
  %729 = fcmp uno float %725, 0.000000e+00
  %730 = or i1 %728, %729
  %731 = select i1 %730, float %725, float %727
  %732 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 5, i64 10, i64 0
  %733 = load float* %732, align 4
  %734 = fcmp oge float %731, %733
  %735 = fcmp uno float %731, 0.000000e+00
  %736 = or i1 %734, %735
  %737 = select i1 %736, float %731, float %733
  %738 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 5, i64 11, i64 0
  %739 = load float* %738, align 4
  %740 = fcmp oge float %737, %739
  %741 = fcmp uno float %737, 0.000000e+00
  %742 = or i1 %740, %741
  %743 = select i1 %742, float %737, float %739
  %744 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 1, i64 3, i64 0
  store float %743, float* %744, align 4
  %745 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 3, i64 12, i64 0
  %746 = load float* %745, align 4
  %747 = fcmp oge float 0xFFF0000000000000, %746
  %748 = select i1 %747, float 0xFFF0000000000000, float %746
  %749 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 3, i64 13, i64 0
  %750 = load float* %749, align 4
  %751 = fcmp oge float %748, %750
  %752 = fcmp uno float %748, 0.000000e+00
  %753 = or i1 %751, %752
  %754 = select i1 %753, float %748, float %750
  %755 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 3, i64 14, i64 0
  %756 = load float* %755, align 4
  %757 = fcmp oge float %754, %756
  %758 = fcmp uno float %754, 0.000000e+00
  %759 = or i1 %757, %758
  %760 = select i1 %759, float %754, float %756
  %761 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 4, i64 12, i64 0
  %762 = load float* %761, align 4
  %763 = fcmp oge float %760, %762
  %764 = fcmp uno float %760, 0.000000e+00
  %765 = or i1 %763, %764
  %766 = select i1 %765, float %760, float %762
  %767 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 4, i64 13, i64 0
  %768 = load float* %767, align 4
  %769 = fcmp oge float %766, %768
  %770 = fcmp uno float %766, 0.000000e+00
  %771 = or i1 %769, %770
  %772 = select i1 %771, float %766, float %768
  %773 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 4, i64 14, i64 0
  %774 = load float* %773, align 4
  %775 = fcmp oge float %772, %774
  %776 = fcmp uno float %772, 0.000000e+00
  %777 = or i1 %775, %776
  %778 = select i1 %777, float %772, float %774
  %779 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 5, i64 12, i64 0
  %780 = load float* %779, align 4
  %781 = fcmp oge float %778, %780
  %782 = fcmp uno float %778, 0.000000e+00
  %783 = or i1 %781, %782
  %784 = select i1 %783, float %778, float %780
  %785 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 5, i64 13, i64 0
  %786 = load float* %785, align 4
  %787 = fcmp oge float %784, %786
  %788 = fcmp uno float %784, 0.000000e+00
  %789 = or i1 %787, %788
  %790 = select i1 %789, float %784, float %786
  %791 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 5, i64 14, i64 0
  %792 = load float* %791, align 4
  %793 = fcmp oge float %790, %792
  %794 = fcmp uno float %790, 0.000000e+00
  %795 = or i1 %793, %794
  %796 = select i1 %795, float %790, float %792
  %797 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 1, i64 4, i64 0
  store float %796, float* %797, align 4
  %798 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 3, i64 15, i64 0
  %799 = load float* %798, align 4
  %800 = fcmp oge float 0xFFF0000000000000, %799
  %801 = select i1 %800, float 0xFFF0000000000000, float %799
  %802 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 3, i64 16, i64 0
  %803 = load float* %802, align 4
  %804 = fcmp oge float %801, %803
  %805 = fcmp uno float %801, 0.000000e+00
  %806 = or i1 %804, %805
  %807 = select i1 %806, float %801, float %803
  %808 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 3, i64 17, i64 0
  %809 = load float* %808, align 4
  %810 = fcmp oge float %807, %809
  %811 = fcmp uno float %807, 0.000000e+00
  %812 = or i1 %810, %811
  %813 = select i1 %812, float %807, float %809
  %814 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 4, i64 15, i64 0
  %815 = load float* %814, align 4
  %816 = fcmp oge float %813, %815
  %817 = fcmp uno float %813, 0.000000e+00
  %818 = or i1 %816, %817
  %819 = select i1 %818, float %813, float %815
  %820 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 4, i64 16, i64 0
  %821 = load float* %820, align 4
  %822 = fcmp oge float %819, %821
  %823 = fcmp uno float %819, 0.000000e+00
  %824 = or i1 %822, %823
  %825 = select i1 %824, float %819, float %821
  %826 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 4, i64 17, i64 0
  %827 = load float* %826, align 4
  %828 = fcmp oge float %825, %827
  %829 = fcmp uno float %825, 0.000000e+00
  %830 = or i1 %828, %829
  %831 = select i1 %830, float %825, float %827
  %832 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 5, i64 15, i64 0
  %833 = load float* %832, align 4
  %834 = fcmp oge float %831, %833
  %835 = fcmp uno float %831, 0.000000e+00
  %836 = or i1 %834, %835
  %837 = select i1 %836, float %831, float %833
  %838 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 5, i64 16, i64 0
  %839 = load float* %838, align 4
  %840 = fcmp oge float %837, %839
  %841 = fcmp uno float %837, 0.000000e+00
  %842 = or i1 %840, %841
  %843 = select i1 %842, float %837, float %839
  %844 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 5, i64 17, i64 0
  %845 = load float* %844, align 4
  %846 = fcmp oge float %843, %845
  %847 = fcmp uno float %843, 0.000000e+00
  %848 = or i1 %846, %847
  %849 = select i1 %848, float %843, float %845
  %850 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 1, i64 5, i64 0
  store float %849, float* %850, align 4
  %851 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 3, i64 18, i64 0
  %852 = load float* %851, align 4
  %853 = fcmp oge float 0xFFF0000000000000, %852
  %854 = select i1 %853, float 0xFFF0000000000000, float %852
  %855 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 3, i64 19, i64 0
  %856 = load float* %855, align 4
  %857 = fcmp oge float %854, %856
  %858 = fcmp uno float %854, 0.000000e+00
  %859 = or i1 %857, %858
  %860 = select i1 %859, float %854, float %856
  %861 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 3, i64 20, i64 0
  %862 = load float* %861, align 4
  %863 = fcmp oge float %860, %862
  %864 = fcmp uno float %860, 0.000000e+00
  %865 = or i1 %863, %864
  %866 = select i1 %865, float %860, float %862
  %867 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 4, i64 18, i64 0
  %868 = load float* %867, align 4
  %869 = fcmp oge float %866, %868
  %870 = fcmp uno float %866, 0.000000e+00
  %871 = or i1 %869, %870
  %872 = select i1 %871, float %866, float %868
  %873 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 4, i64 19, i64 0
  %874 = load float* %873, align 4
  %875 = fcmp oge float %872, %874
  %876 = fcmp uno float %872, 0.000000e+00
  %877 = or i1 %875, %876
  %878 = select i1 %877, float %872, float %874
  %879 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 4, i64 20, i64 0
  %880 = load float* %879, align 4
  %881 = fcmp oge float %878, %880
  %882 = fcmp uno float %878, 0.000000e+00
  %883 = or i1 %881, %882
  %884 = select i1 %883, float %878, float %880
  %885 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 5, i64 18, i64 0
  %886 = load float* %885, align 4
  %887 = fcmp oge float %884, %886
  %888 = fcmp uno float %884, 0.000000e+00
  %889 = or i1 %887, %888
  %890 = select i1 %889, float %884, float %886
  %891 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 5, i64 19, i64 0
  %892 = load float* %891, align 4
  %893 = fcmp oge float %890, %892
  %894 = fcmp uno float %890, 0.000000e+00
  %895 = or i1 %893, %894
  %896 = select i1 %895, float %890, float %892
  %897 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 5, i64 20, i64 0
  %898 = load float* %897, align 4
  %899 = fcmp oge float %896, %898
  %900 = fcmp uno float %896, 0.000000e+00
  %901 = or i1 %899, %900
  %902 = select i1 %901, float %896, float %898
  %903 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 1, i64 6, i64 0
  store float %902, float* %903, align 4
  %904 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 3, i64 21, i64 0
  %905 = load float* %904, align 4
  %906 = fcmp oge float 0xFFF0000000000000, %905
  %907 = select i1 %906, float 0xFFF0000000000000, float %905
  %908 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 3, i64 22, i64 0
  %909 = load float* %908, align 4
  %910 = fcmp oge float %907, %909
  %911 = fcmp uno float %907, 0.000000e+00
  %912 = or i1 %910, %911
  %913 = select i1 %912, float %907, float %909
  %914 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 3, i64 23, i64 0
  %915 = load float* %914, align 4
  %916 = fcmp oge float %913, %915
  %917 = fcmp uno float %913, 0.000000e+00
  %918 = or i1 %916, %917
  %919 = select i1 %918, float %913, float %915
  %920 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 4, i64 21, i64 0
  %921 = load float* %920, align 4
  %922 = fcmp oge float %919, %921
  %923 = fcmp uno float %919, 0.000000e+00
  %924 = or i1 %922, %923
  %925 = select i1 %924, float %919, float %921
  %926 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 4, i64 22, i64 0
  %927 = load float* %926, align 4
  %928 = fcmp oge float %925, %927
  %929 = fcmp uno float %925, 0.000000e+00
  %930 = or i1 %928, %929
  %931 = select i1 %930, float %925, float %927
  %932 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 4, i64 23, i64 0
  %933 = load float* %932, align 4
  %934 = fcmp oge float %931, %933
  %935 = fcmp uno float %931, 0.000000e+00
  %936 = or i1 %934, %935
  %937 = select i1 %936, float %931, float %933
  %938 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 5, i64 21, i64 0
  %939 = load float* %938, align 4
  %940 = fcmp oge float %937, %939
  %941 = fcmp uno float %937, 0.000000e+00
  %942 = or i1 %940, %941
  %943 = select i1 %942, float %937, float %939
  %944 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 5, i64 22, i64 0
  %945 = load float* %944, align 4
  %946 = fcmp oge float %943, %945
  %947 = fcmp uno float %943, 0.000000e+00
  %948 = or i1 %946, %947
  %949 = select i1 %948, float %943, float %945
  %950 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 5, i64 23, i64 0
  %951 = load float* %950, align 4
  %952 = fcmp oge float %949, %951
  %953 = fcmp uno float %949, 0.000000e+00
  %954 = or i1 %952, %953
  %955 = select i1 %954, float %949, float %951
  %956 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 1, i64 7, i64 0
  store float %955, float* %956, align 4
  %957 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 3, i64 24, i64 0
  %958 = load float* %957, align 4
  %959 = fcmp oge float 0xFFF0000000000000, %958
  %960 = select i1 %959, float 0xFFF0000000000000, float %958
  %961 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 3, i64 25, i64 0
  %962 = load float* %961, align 4
  %963 = fcmp oge float %960, %962
  %964 = fcmp uno float %960, 0.000000e+00
  %965 = or i1 %963, %964
  %966 = select i1 %965, float %960, float %962
  %967 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 3, i64 26, i64 0
  %968 = load float* %967, align 4
  %969 = fcmp oge float %966, %968
  %970 = fcmp uno float %966, 0.000000e+00
  %971 = or i1 %969, %970
  %972 = select i1 %971, float %966, float %968
  %973 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 4, i64 24, i64 0
  %974 = load float* %973, align 4
  %975 = fcmp oge float %972, %974
  %976 = fcmp uno float %972, 0.000000e+00
  %977 = or i1 %975, %976
  %978 = select i1 %977, float %972, float %974
  %979 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 4, i64 25, i64 0
  %980 = load float* %979, align 4
  %981 = fcmp oge float %978, %980
  %982 = fcmp uno float %978, 0.000000e+00
  %983 = or i1 %981, %982
  %984 = select i1 %983, float %978, float %980
  %985 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 4, i64 26, i64 0
  %986 = load float* %985, align 4
  %987 = fcmp oge float %984, %986
  %988 = fcmp uno float %984, 0.000000e+00
  %989 = or i1 %987, %988
  %990 = select i1 %989, float %984, float %986
  %991 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 5, i64 24, i64 0
  %992 = load float* %991, align 4
  %993 = fcmp oge float %990, %992
  %994 = fcmp uno float %990, 0.000000e+00
  %995 = or i1 %993, %994
  %996 = select i1 %995, float %990, float %992
  %997 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 5, i64 25, i64 0
  %998 = load float* %997, align 4
  %999 = fcmp oge float %996, %998
  %1000 = fcmp uno float %996, 0.000000e+00
  %1001 = or i1 %999, %1000
  %1002 = select i1 %1001, float %996, float %998
  %1003 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 5, i64 26, i64 0
  %1004 = load float* %1003, align 4
  %1005 = fcmp oge float %1002, %1004
  %1006 = fcmp uno float %1002, 0.000000e+00
  %1007 = or i1 %1005, %1006
  %1008 = select i1 %1007, float %1002, float %1004
  %1009 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 1, i64 8, i64 0
  store float %1008, float* %1009, align 4
  %1010 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 3, i64 27, i64 0
  %1011 = load float* %1010, align 4
  %1012 = fcmp oge float 0xFFF0000000000000, %1011
  %1013 = select i1 %1012, float 0xFFF0000000000000, float %1011
  %1014 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 3, i64 28, i64 0
  %1015 = load float* %1014, align 4
  %1016 = fcmp oge float %1013, %1015
  %1017 = fcmp uno float %1013, 0.000000e+00
  %1018 = or i1 %1016, %1017
  %1019 = select i1 %1018, float %1013, float %1015
  %1020 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 3, i64 29, i64 0
  %1021 = load float* %1020, align 4
  %1022 = fcmp oge float %1019, %1021
  %1023 = fcmp uno float %1019, 0.000000e+00
  %1024 = or i1 %1022, %1023
  %1025 = select i1 %1024, float %1019, float %1021
  %1026 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 4, i64 27, i64 0
  %1027 = load float* %1026, align 4
  %1028 = fcmp oge float %1025, %1027
  %1029 = fcmp uno float %1025, 0.000000e+00
  %1030 = or i1 %1028, %1029
  %1031 = select i1 %1030, float %1025, float %1027
  %1032 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 4, i64 28, i64 0
  %1033 = load float* %1032, align 4
  %1034 = fcmp oge float %1031, %1033
  %1035 = fcmp uno float %1031, 0.000000e+00
  %1036 = or i1 %1034, %1035
  %1037 = select i1 %1036, float %1031, float %1033
  %1038 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 4, i64 29, i64 0
  %1039 = load float* %1038, align 4
  %1040 = fcmp oge float %1037, %1039
  %1041 = fcmp uno float %1037, 0.000000e+00
  %1042 = or i1 %1040, %1041
  %1043 = select i1 %1042, float %1037, float %1039
  %1044 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 5, i64 27, i64 0
  %1045 = load float* %1044, align 4
  %1046 = fcmp oge float %1043, %1045
  %1047 = fcmp uno float %1043, 0.000000e+00
  %1048 = or i1 %1046, %1047
  %1049 = select i1 %1048, float %1043, float %1045
  %1050 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 5, i64 28, i64 0
  %1051 = load float* %1050, align 4
  %1052 = fcmp oge float %1049, %1051
  %1053 = fcmp uno float %1049, 0.000000e+00
  %1054 = or i1 %1052, %1053
  %1055 = select i1 %1054, float %1049, float %1051
  %1056 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 5, i64 29, i64 0
  %1057 = load float* %1056, align 4
  %1058 = fcmp oge float %1055, %1057
  %1059 = fcmp uno float %1055, 0.000000e+00
  %1060 = or i1 %1058, %1059
  %1061 = select i1 %1060, float %1055, float %1057
  %1062 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 1, i64 9, i64 0
  store float %1061, float* %1062, align 4
  %1063 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 6, i64 0, i64 0
  %1064 = load float* %1063, align 4
  %1065 = fcmp oge float 0xFFF0000000000000, %1064
  %1066 = select i1 %1065, float 0xFFF0000000000000, float %1064
  %1067 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 6, i64 1, i64 0
  %1068 = load float* %1067, align 4
  %1069 = fcmp oge float %1066, %1068
  %1070 = fcmp uno float %1066, 0.000000e+00
  %1071 = or i1 %1069, %1070
  %1072 = select i1 %1071, float %1066, float %1068
  %1073 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 6, i64 2, i64 0
  %1074 = load float* %1073, align 4
  %1075 = fcmp oge float %1072, %1074
  %1076 = fcmp uno float %1072, 0.000000e+00
  %1077 = or i1 %1075, %1076
  %1078 = select i1 %1077, float %1072, float %1074
  %1079 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 7, i64 0, i64 0
  %1080 = load float* %1079, align 4
  %1081 = fcmp oge float %1078, %1080
  %1082 = fcmp uno float %1078, 0.000000e+00
  %1083 = or i1 %1081, %1082
  %1084 = select i1 %1083, float %1078, float %1080
  %1085 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 7, i64 1, i64 0
  %1086 = load float* %1085, align 4
  %1087 = fcmp oge float %1084, %1086
  %1088 = fcmp uno float %1084, 0.000000e+00
  %1089 = or i1 %1087, %1088
  %1090 = select i1 %1089, float %1084, float %1086
  %1091 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 7, i64 2, i64 0
  %1092 = load float* %1091, align 4
  %1093 = fcmp oge float %1090, %1092
  %1094 = fcmp uno float %1090, 0.000000e+00
  %1095 = or i1 %1093, %1094
  %1096 = select i1 %1095, float %1090, float %1092
  %1097 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 8, i64 0, i64 0
  %1098 = load float* %1097, align 4
  %1099 = fcmp oge float %1096, %1098
  %1100 = fcmp uno float %1096, 0.000000e+00
  %1101 = or i1 %1099, %1100
  %1102 = select i1 %1101, float %1096, float %1098
  %1103 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 8, i64 1, i64 0
  %1104 = load float* %1103, align 4
  %1105 = fcmp oge float %1102, %1104
  %1106 = fcmp uno float %1102, 0.000000e+00
  %1107 = or i1 %1105, %1106
  %1108 = select i1 %1107, float %1102, float %1104
  %1109 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 8, i64 2, i64 0
  %1110 = load float* %1109, align 4
  %1111 = fcmp oge float %1108, %1110
  %1112 = fcmp uno float %1108, 0.000000e+00
  %1113 = or i1 %1111, %1112
  %1114 = select i1 %1113, float %1108, float %1110
  %1115 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 2, i64 0, i64 0
  store float %1114, float* %1115, align 4
  %1116 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 6, i64 3, i64 0
  %1117 = load float* %1116, align 4
  %1118 = fcmp oge float 0xFFF0000000000000, %1117
  %1119 = select i1 %1118, float 0xFFF0000000000000, float %1117
  %1120 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 6, i64 4, i64 0
  %1121 = load float* %1120, align 4
  %1122 = fcmp oge float %1119, %1121
  %1123 = fcmp uno float %1119, 0.000000e+00
  %1124 = or i1 %1122, %1123
  %1125 = select i1 %1124, float %1119, float %1121
  %1126 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 6, i64 5, i64 0
  %1127 = load float* %1126, align 4
  %1128 = fcmp oge float %1125, %1127
  %1129 = fcmp uno float %1125, 0.000000e+00
  %1130 = or i1 %1128, %1129
  %1131 = select i1 %1130, float %1125, float %1127
  %1132 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 7, i64 3, i64 0
  %1133 = load float* %1132, align 4
  %1134 = fcmp oge float %1131, %1133
  %1135 = fcmp uno float %1131, 0.000000e+00
  %1136 = or i1 %1134, %1135
  %1137 = select i1 %1136, float %1131, float %1133
  %1138 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 7, i64 4, i64 0
  %1139 = load float* %1138, align 4
  %1140 = fcmp oge float %1137, %1139
  %1141 = fcmp uno float %1137, 0.000000e+00
  %1142 = or i1 %1140, %1141
  %1143 = select i1 %1142, float %1137, float %1139
  %1144 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 7, i64 5, i64 0
  %1145 = load float* %1144, align 4
  %1146 = fcmp oge float %1143, %1145
  %1147 = fcmp uno float %1143, 0.000000e+00
  %1148 = or i1 %1146, %1147
  %1149 = select i1 %1148, float %1143, float %1145
  %1150 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 8, i64 3, i64 0
  %1151 = load float* %1150, align 4
  %1152 = fcmp oge float %1149, %1151
  %1153 = fcmp uno float %1149, 0.000000e+00
  %1154 = or i1 %1152, %1153
  %1155 = select i1 %1154, float %1149, float %1151
  %1156 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 8, i64 4, i64 0
  %1157 = load float* %1156, align 4
  %1158 = fcmp oge float %1155, %1157
  %1159 = fcmp uno float %1155, 0.000000e+00
  %1160 = or i1 %1158, %1159
  %1161 = select i1 %1160, float %1155, float %1157
  %1162 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 8, i64 5, i64 0
  %1163 = load float* %1162, align 4
  %1164 = fcmp oge float %1161, %1163
  %1165 = fcmp uno float %1161, 0.000000e+00
  %1166 = or i1 %1164, %1165
  %1167 = select i1 %1166, float %1161, float %1163
  %1168 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 2, i64 1, i64 0
  store float %1167, float* %1168, align 4
  %1169 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 6, i64 6, i64 0
  %1170 = load float* %1169, align 4
  %1171 = fcmp oge float 0xFFF0000000000000, %1170
  %1172 = select i1 %1171, float 0xFFF0000000000000, float %1170
  %1173 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 6, i64 7, i64 0
  %1174 = load float* %1173, align 4
  %1175 = fcmp oge float %1172, %1174
  %1176 = fcmp uno float %1172, 0.000000e+00
  %1177 = or i1 %1175, %1176
  %1178 = select i1 %1177, float %1172, float %1174
  %1179 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 6, i64 8, i64 0
  %1180 = load float* %1179, align 4
  %1181 = fcmp oge float %1178, %1180
  %1182 = fcmp uno float %1178, 0.000000e+00
  %1183 = or i1 %1181, %1182
  %1184 = select i1 %1183, float %1178, float %1180
  %1185 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 7, i64 6, i64 0
  %1186 = load float* %1185, align 4
  %1187 = fcmp oge float %1184, %1186
  %1188 = fcmp uno float %1184, 0.000000e+00
  %1189 = or i1 %1187, %1188
  %1190 = select i1 %1189, float %1184, float %1186
  %1191 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 7, i64 7, i64 0
  %1192 = load float* %1191, align 4
  %1193 = fcmp oge float %1190, %1192
  %1194 = fcmp uno float %1190, 0.000000e+00
  %1195 = or i1 %1193, %1194
  %1196 = select i1 %1195, float %1190, float %1192
  %1197 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 7, i64 8, i64 0
  %1198 = load float* %1197, align 4
  %1199 = fcmp oge float %1196, %1198
  %1200 = fcmp uno float %1196, 0.000000e+00
  %1201 = or i1 %1199, %1200
  %1202 = select i1 %1201, float %1196, float %1198
  %1203 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 8, i64 6, i64 0
  %1204 = load float* %1203, align 4
  %1205 = fcmp oge float %1202, %1204
  %1206 = fcmp uno float %1202, 0.000000e+00
  %1207 = or i1 %1205, %1206
  %1208 = select i1 %1207, float %1202, float %1204
  %1209 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 8, i64 7, i64 0
  %1210 = load float* %1209, align 4
  %1211 = fcmp oge float %1208, %1210
  %1212 = fcmp uno float %1208, 0.000000e+00
  %1213 = or i1 %1211, %1212
  %1214 = select i1 %1213, float %1208, float %1210
  %1215 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 8, i64 8, i64 0
  %1216 = load float* %1215, align 4
  %1217 = fcmp oge float %1214, %1216
  %1218 = fcmp uno float %1214, 0.000000e+00
  %1219 = or i1 %1217, %1218
  %1220 = select i1 %1219, float %1214, float %1216
  %1221 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 2, i64 2, i64 0
  store float %1220, float* %1221, align 4
  %1222 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 6, i64 9, i64 0
  %1223 = load float* %1222, align 4
  %1224 = fcmp oge float 0xFFF0000000000000, %1223
  %1225 = select i1 %1224, float 0xFFF0000000000000, float %1223
  %1226 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 6, i64 10, i64 0
  %1227 = load float* %1226, align 4
  %1228 = fcmp oge float %1225, %1227
  %1229 = fcmp uno float %1225, 0.000000e+00
  %1230 = or i1 %1228, %1229
  %1231 = select i1 %1230, float %1225, float %1227
  %1232 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 6, i64 11, i64 0
  %1233 = load float* %1232, align 4
  %1234 = fcmp oge float %1231, %1233
  %1235 = fcmp uno float %1231, 0.000000e+00
  %1236 = or i1 %1234, %1235
  %1237 = select i1 %1236, float %1231, float %1233
  %1238 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 7, i64 9, i64 0
  %1239 = load float* %1238, align 4
  %1240 = fcmp oge float %1237, %1239
  %1241 = fcmp uno float %1237, 0.000000e+00
  %1242 = or i1 %1240, %1241
  %1243 = select i1 %1242, float %1237, float %1239
  %1244 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 7, i64 10, i64 0
  %1245 = load float* %1244, align 4
  %1246 = fcmp oge float %1243, %1245
  %1247 = fcmp uno float %1243, 0.000000e+00
  %1248 = or i1 %1246, %1247
  %1249 = select i1 %1248, float %1243, float %1245
  %1250 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 7, i64 11, i64 0
  %1251 = load float* %1250, align 4
  %1252 = fcmp oge float %1249, %1251
  %1253 = fcmp uno float %1249, 0.000000e+00
  %1254 = or i1 %1252, %1253
  %1255 = select i1 %1254, float %1249, float %1251
  %1256 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 8, i64 9, i64 0
  %1257 = load float* %1256, align 4
  %1258 = fcmp oge float %1255, %1257
  %1259 = fcmp uno float %1255, 0.000000e+00
  %1260 = or i1 %1258, %1259
  %1261 = select i1 %1260, float %1255, float %1257
  %1262 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 8, i64 10, i64 0
  %1263 = load float* %1262, align 4
  %1264 = fcmp oge float %1261, %1263
  %1265 = fcmp uno float %1261, 0.000000e+00
  %1266 = or i1 %1264, %1265
  %1267 = select i1 %1266, float %1261, float %1263
  %1268 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 8, i64 11, i64 0
  %1269 = load float* %1268, align 4
  %1270 = fcmp oge float %1267, %1269
  %1271 = fcmp uno float %1267, 0.000000e+00
  %1272 = or i1 %1270, %1271
  %1273 = select i1 %1272, float %1267, float %1269
  %1274 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 2, i64 3, i64 0
  store float %1273, float* %1274, align 4
  %1275 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 6, i64 12, i64 0
  %1276 = load float* %1275, align 4
  %1277 = fcmp oge float 0xFFF0000000000000, %1276
  %1278 = select i1 %1277, float 0xFFF0000000000000, float %1276
  %1279 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 6, i64 13, i64 0
  %1280 = load float* %1279, align 4
  %1281 = fcmp oge float %1278, %1280
  %1282 = fcmp uno float %1278, 0.000000e+00
  %1283 = or i1 %1281, %1282
  %1284 = select i1 %1283, float %1278, float %1280
  %1285 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 6, i64 14, i64 0
  %1286 = load float* %1285, align 4
  %1287 = fcmp oge float %1284, %1286
  %1288 = fcmp uno float %1284, 0.000000e+00
  %1289 = or i1 %1287, %1288
  %1290 = select i1 %1289, float %1284, float %1286
  %1291 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 7, i64 12, i64 0
  %1292 = load float* %1291, align 4
  %1293 = fcmp oge float %1290, %1292
  %1294 = fcmp uno float %1290, 0.000000e+00
  %1295 = or i1 %1293, %1294
  %1296 = select i1 %1295, float %1290, float %1292
  %1297 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 7, i64 13, i64 0
  %1298 = load float* %1297, align 4
  %1299 = fcmp oge float %1296, %1298
  %1300 = fcmp uno float %1296, 0.000000e+00
  %1301 = or i1 %1299, %1300
  %1302 = select i1 %1301, float %1296, float %1298
  %1303 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 7, i64 14, i64 0
  %1304 = load float* %1303, align 4
  %1305 = fcmp oge float %1302, %1304
  %1306 = fcmp uno float %1302, 0.000000e+00
  %1307 = or i1 %1305, %1306
  %1308 = select i1 %1307, float %1302, float %1304
  %1309 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 8, i64 12, i64 0
  %1310 = load float* %1309, align 4
  %1311 = fcmp oge float %1308, %1310
  %1312 = fcmp uno float %1308, 0.000000e+00
  %1313 = or i1 %1311, %1312
  %1314 = select i1 %1313, float %1308, float %1310
  %1315 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 8, i64 13, i64 0
  %1316 = load float* %1315, align 4
  %1317 = fcmp oge float %1314, %1316
  %1318 = fcmp uno float %1314, 0.000000e+00
  %1319 = or i1 %1317, %1318
  %1320 = select i1 %1319, float %1314, float %1316
  %1321 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 8, i64 14, i64 0
  %1322 = load float* %1321, align 4
  %1323 = fcmp oge float %1320, %1322
  %1324 = fcmp uno float %1320, 0.000000e+00
  %1325 = or i1 %1323, %1324
  %1326 = select i1 %1325, float %1320, float %1322
  %1327 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 2, i64 4, i64 0
  store float %1326, float* %1327, align 4
  %1328 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 6, i64 15, i64 0
  %1329 = load float* %1328, align 4
  %1330 = fcmp oge float 0xFFF0000000000000, %1329
  %1331 = select i1 %1330, float 0xFFF0000000000000, float %1329
  %1332 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 6, i64 16, i64 0
  %1333 = load float* %1332, align 4
  %1334 = fcmp oge float %1331, %1333
  %1335 = fcmp uno float %1331, 0.000000e+00
  %1336 = or i1 %1334, %1335
  %1337 = select i1 %1336, float %1331, float %1333
  %1338 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 6, i64 17, i64 0
  %1339 = load float* %1338, align 4
  %1340 = fcmp oge float %1337, %1339
  %1341 = fcmp uno float %1337, 0.000000e+00
  %1342 = or i1 %1340, %1341
  %1343 = select i1 %1342, float %1337, float %1339
  %1344 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 7, i64 15, i64 0
  %1345 = load float* %1344, align 4
  %1346 = fcmp oge float %1343, %1345
  %1347 = fcmp uno float %1343, 0.000000e+00
  %1348 = or i1 %1346, %1347
  %1349 = select i1 %1348, float %1343, float %1345
  %1350 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 7, i64 16, i64 0
  %1351 = load float* %1350, align 4
  %1352 = fcmp oge float %1349, %1351
  %1353 = fcmp uno float %1349, 0.000000e+00
  %1354 = or i1 %1352, %1353
  %1355 = select i1 %1354, float %1349, float %1351
  %1356 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 7, i64 17, i64 0
  %1357 = load float* %1356, align 4
  %1358 = fcmp oge float %1355, %1357
  %1359 = fcmp uno float %1355, 0.000000e+00
  %1360 = or i1 %1358, %1359
  %1361 = select i1 %1360, float %1355, float %1357
  %1362 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 8, i64 15, i64 0
  %1363 = load float* %1362, align 4
  %1364 = fcmp oge float %1361, %1363
  %1365 = fcmp uno float %1361, 0.000000e+00
  %1366 = or i1 %1364, %1365
  %1367 = select i1 %1366, float %1361, float %1363
  %1368 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 8, i64 16, i64 0
  %1369 = load float* %1368, align 4
  %1370 = fcmp oge float %1367, %1369
  %1371 = fcmp uno float %1367, 0.000000e+00
  %1372 = or i1 %1370, %1371
  %1373 = select i1 %1372, float %1367, float %1369
  %1374 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 8, i64 17, i64 0
  %1375 = load float* %1374, align 4
  %1376 = fcmp oge float %1373, %1375
  %1377 = fcmp uno float %1373, 0.000000e+00
  %1378 = or i1 %1376, %1377
  %1379 = select i1 %1378, float %1373, float %1375
  %1380 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 2, i64 5, i64 0
  store float %1379, float* %1380, align 4
  %1381 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 6, i64 18, i64 0
  %1382 = load float* %1381, align 4
  %1383 = fcmp oge float 0xFFF0000000000000, %1382
  %1384 = select i1 %1383, float 0xFFF0000000000000, float %1382
  %1385 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 6, i64 19, i64 0
  %1386 = load float* %1385, align 4
  %1387 = fcmp oge float %1384, %1386
  %1388 = fcmp uno float %1384, 0.000000e+00
  %1389 = or i1 %1387, %1388
  %1390 = select i1 %1389, float %1384, float %1386
  %1391 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 6, i64 20, i64 0
  %1392 = load float* %1391, align 4
  %1393 = fcmp oge float %1390, %1392
  %1394 = fcmp uno float %1390, 0.000000e+00
  %1395 = or i1 %1393, %1394
  %1396 = select i1 %1395, float %1390, float %1392
  %1397 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 7, i64 18, i64 0
  %1398 = load float* %1397, align 4
  %1399 = fcmp oge float %1396, %1398
  %1400 = fcmp uno float %1396, 0.000000e+00
  %1401 = or i1 %1399, %1400
  %1402 = select i1 %1401, float %1396, float %1398
  %1403 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 7, i64 19, i64 0
  %1404 = load float* %1403, align 4
  %1405 = fcmp oge float %1402, %1404
  %1406 = fcmp uno float %1402, 0.000000e+00
  %1407 = or i1 %1405, %1406
  %1408 = select i1 %1407, float %1402, float %1404
  %1409 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 7, i64 20, i64 0
  %1410 = load float* %1409, align 4
  %1411 = fcmp oge float %1408, %1410
  %1412 = fcmp uno float %1408, 0.000000e+00
  %1413 = or i1 %1411, %1412
  %1414 = select i1 %1413, float %1408, float %1410
  %1415 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 8, i64 18, i64 0
  %1416 = load float* %1415, align 4
  %1417 = fcmp oge float %1414, %1416
  %1418 = fcmp uno float %1414, 0.000000e+00
  %1419 = or i1 %1417, %1418
  %1420 = select i1 %1419, float %1414, float %1416
  %1421 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 8, i64 19, i64 0
  %1422 = load float* %1421, align 4
  %1423 = fcmp oge float %1420, %1422
  %1424 = fcmp uno float %1420, 0.000000e+00
  %1425 = or i1 %1423, %1424
  %1426 = select i1 %1425, float %1420, float %1422
  %1427 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 8, i64 20, i64 0
  %1428 = load float* %1427, align 4
  %1429 = fcmp oge float %1426, %1428
  %1430 = fcmp uno float %1426, 0.000000e+00
  %1431 = or i1 %1429, %1430
  %1432 = select i1 %1431, float %1426, float %1428
  %1433 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 2, i64 6, i64 0
  store float %1432, float* %1433, align 4
  %1434 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 6, i64 21, i64 0
  %1435 = load float* %1434, align 4
  %1436 = fcmp oge float 0xFFF0000000000000, %1435
  %1437 = select i1 %1436, float 0xFFF0000000000000, float %1435
  %1438 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 6, i64 22, i64 0
  %1439 = load float* %1438, align 4
  %1440 = fcmp oge float %1437, %1439
  %1441 = fcmp uno float %1437, 0.000000e+00
  %1442 = or i1 %1440, %1441
  %1443 = select i1 %1442, float %1437, float %1439
  %1444 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 6, i64 23, i64 0
  %1445 = load float* %1444, align 4
  %1446 = fcmp oge float %1443, %1445
  %1447 = fcmp uno float %1443, 0.000000e+00
  %1448 = or i1 %1446, %1447
  %1449 = select i1 %1448, float %1443, float %1445
  %1450 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 7, i64 21, i64 0
  %1451 = load float* %1450, align 4
  %1452 = fcmp oge float %1449, %1451
  %1453 = fcmp uno float %1449, 0.000000e+00
  %1454 = or i1 %1452, %1453
  %1455 = select i1 %1454, float %1449, float %1451
  %1456 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 7, i64 22, i64 0
  %1457 = load float* %1456, align 4
  %1458 = fcmp oge float %1455, %1457
  %1459 = fcmp uno float %1455, 0.000000e+00
  %1460 = or i1 %1458, %1459
  %1461 = select i1 %1460, float %1455, float %1457
  %1462 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 7, i64 23, i64 0
  %1463 = load float* %1462, align 4
  %1464 = fcmp oge float %1461, %1463
  %1465 = fcmp uno float %1461, 0.000000e+00
  %1466 = or i1 %1464, %1465
  %1467 = select i1 %1466, float %1461, float %1463
  %1468 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 8, i64 21, i64 0
  %1469 = load float* %1468, align 4
  %1470 = fcmp oge float %1467, %1469
  %1471 = fcmp uno float %1467, 0.000000e+00
  %1472 = or i1 %1470, %1471
  %1473 = select i1 %1472, float %1467, float %1469
  %1474 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 8, i64 22, i64 0
  %1475 = load float* %1474, align 4
  %1476 = fcmp oge float %1473, %1475
  %1477 = fcmp uno float %1473, 0.000000e+00
  %1478 = or i1 %1476, %1477
  %1479 = select i1 %1478, float %1473, float %1475
  %1480 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 8, i64 23, i64 0
  %1481 = load float* %1480, align 4
  %1482 = fcmp oge float %1479, %1481
  %1483 = fcmp uno float %1479, 0.000000e+00
  %1484 = or i1 %1482, %1483
  %1485 = select i1 %1484, float %1479, float %1481
  %1486 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 2, i64 7, i64 0
  store float %1485, float* %1486, align 4
  %1487 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 6, i64 24, i64 0
  %1488 = load float* %1487, align 4
  %1489 = fcmp oge float 0xFFF0000000000000, %1488
  %1490 = select i1 %1489, float 0xFFF0000000000000, float %1488
  %1491 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 6, i64 25, i64 0
  %1492 = load float* %1491, align 4
  %1493 = fcmp oge float %1490, %1492
  %1494 = fcmp uno float %1490, 0.000000e+00
  %1495 = or i1 %1493, %1494
  %1496 = select i1 %1495, float %1490, float %1492
  %1497 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 6, i64 26, i64 0
  %1498 = load float* %1497, align 4
  %1499 = fcmp oge float %1496, %1498
  %1500 = fcmp uno float %1496, 0.000000e+00
  %1501 = or i1 %1499, %1500
  %1502 = select i1 %1501, float %1496, float %1498
  %1503 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 7, i64 24, i64 0
  %1504 = load float* %1503, align 4
  %1505 = fcmp oge float %1502, %1504
  %1506 = fcmp uno float %1502, 0.000000e+00
  %1507 = or i1 %1505, %1506
  %1508 = select i1 %1507, float %1502, float %1504
  %1509 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 7, i64 25, i64 0
  %1510 = load float* %1509, align 4
  %1511 = fcmp oge float %1508, %1510
  %1512 = fcmp uno float %1508, 0.000000e+00
  %1513 = or i1 %1511, %1512
  %1514 = select i1 %1513, float %1508, float %1510
  %1515 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 7, i64 26, i64 0
  %1516 = load float* %1515, align 4
  %1517 = fcmp oge float %1514, %1516
  %1518 = fcmp uno float %1514, 0.000000e+00
  %1519 = or i1 %1517, %1518
  %1520 = select i1 %1519, float %1514, float %1516
  %1521 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 8, i64 24, i64 0
  %1522 = load float* %1521, align 4
  %1523 = fcmp oge float %1520, %1522
  %1524 = fcmp uno float %1520, 0.000000e+00
  %1525 = or i1 %1523, %1524
  %1526 = select i1 %1525, float %1520, float %1522
  %1527 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 8, i64 25, i64 0
  %1528 = load float* %1527, align 4
  %1529 = fcmp oge float %1526, %1528
  %1530 = fcmp uno float %1526, 0.000000e+00
  %1531 = or i1 %1529, %1530
  %1532 = select i1 %1531, float %1526, float %1528
  %1533 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 8, i64 26, i64 0
  %1534 = load float* %1533, align 4
  %1535 = fcmp oge float %1532, %1534
  %1536 = fcmp uno float %1532, 0.000000e+00
  %1537 = or i1 %1535, %1536
  %1538 = select i1 %1537, float %1532, float %1534
  %1539 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 2, i64 8, i64 0
  store float %1538, float* %1539, align 4
  %1540 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 6, i64 27, i64 0
  %1541 = load float* %1540, align 4
  %1542 = fcmp oge float 0xFFF0000000000000, %1541
  %1543 = select i1 %1542, float 0xFFF0000000000000, float %1541
  %1544 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 6, i64 28, i64 0
  %1545 = load float* %1544, align 4
  %1546 = fcmp oge float %1543, %1545
  %1547 = fcmp uno float %1543, 0.000000e+00
  %1548 = or i1 %1546, %1547
  %1549 = select i1 %1548, float %1543, float %1545
  %1550 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 6, i64 29, i64 0
  %1551 = load float* %1550, align 4
  %1552 = fcmp oge float %1549, %1551
  %1553 = fcmp uno float %1549, 0.000000e+00
  %1554 = or i1 %1552, %1553
  %1555 = select i1 %1554, float %1549, float %1551
  %1556 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 7, i64 27, i64 0
  %1557 = load float* %1556, align 4
  %1558 = fcmp oge float %1555, %1557
  %1559 = fcmp uno float %1555, 0.000000e+00
  %1560 = or i1 %1558, %1559
  %1561 = select i1 %1560, float %1555, float %1557
  %1562 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 7, i64 28, i64 0
  %1563 = load float* %1562, align 4
  %1564 = fcmp oge float %1561, %1563
  %1565 = fcmp uno float %1561, 0.000000e+00
  %1566 = or i1 %1564, %1565
  %1567 = select i1 %1566, float %1561, float %1563
  %1568 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 7, i64 29, i64 0
  %1569 = load float* %1568, align 4
  %1570 = fcmp oge float %1567, %1569
  %1571 = fcmp uno float %1567, 0.000000e+00
  %1572 = or i1 %1570, %1571
  %1573 = select i1 %1572, float %1567, float %1569
  %1574 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 8, i64 27, i64 0
  %1575 = load float* %1574, align 4
  %1576 = fcmp oge float %1573, %1575
  %1577 = fcmp uno float %1573, 0.000000e+00
  %1578 = or i1 %1576, %1577
  %1579 = select i1 %1578, float %1573, float %1575
  %1580 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 8, i64 28, i64 0
  %1581 = load float* %1580, align 4
  %1582 = fcmp oge float %1579, %1581
  %1583 = fcmp uno float %1579, 0.000000e+00
  %1584 = or i1 %1582, %1583
  %1585 = select i1 %1584, float %1579, float %1581
  %1586 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 8, i64 29, i64 0
  %1587 = load float* %1586, align 4
  %1588 = fcmp oge float %1585, %1587
  %1589 = fcmp uno float %1585, 0.000000e+00
  %1590 = or i1 %1588, %1589
  %1591 = select i1 %1590, float %1585, float %1587
  %1592 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 2, i64 9, i64 0
  store float %1591, float* %1592, align 4
  %1593 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 9, i64 0, i64 0
  %1594 = load float* %1593, align 4
  %1595 = fcmp oge float 0xFFF0000000000000, %1594
  %1596 = select i1 %1595, float 0xFFF0000000000000, float %1594
  %1597 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 9, i64 1, i64 0
  %1598 = load float* %1597, align 4
  %1599 = fcmp oge float %1596, %1598
  %1600 = fcmp uno float %1596, 0.000000e+00
  %1601 = or i1 %1599, %1600
  %1602 = select i1 %1601, float %1596, float %1598
  %1603 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 9, i64 2, i64 0
  %1604 = load float* %1603, align 4
  %1605 = fcmp oge float %1602, %1604
  %1606 = fcmp uno float %1602, 0.000000e+00
  %1607 = or i1 %1605, %1606
  %1608 = select i1 %1607, float %1602, float %1604
  %1609 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 10, i64 0, i64 0
  %1610 = load float* %1609, align 4
  %1611 = fcmp oge float %1608, %1610
  %1612 = fcmp uno float %1608, 0.000000e+00
  %1613 = or i1 %1611, %1612
  %1614 = select i1 %1613, float %1608, float %1610
  %1615 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 10, i64 1, i64 0
  %1616 = load float* %1615, align 4
  %1617 = fcmp oge float %1614, %1616
  %1618 = fcmp uno float %1614, 0.000000e+00
  %1619 = or i1 %1617, %1618
  %1620 = select i1 %1619, float %1614, float %1616
  %1621 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 10, i64 2, i64 0
  %1622 = load float* %1621, align 4
  %1623 = fcmp oge float %1620, %1622
  %1624 = fcmp uno float %1620, 0.000000e+00
  %1625 = or i1 %1623, %1624
  %1626 = select i1 %1625, float %1620, float %1622
  %1627 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 11, i64 0, i64 0
  %1628 = load float* %1627, align 4
  %1629 = fcmp oge float %1626, %1628
  %1630 = fcmp uno float %1626, 0.000000e+00
  %1631 = or i1 %1629, %1630
  %1632 = select i1 %1631, float %1626, float %1628
  %1633 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 11, i64 1, i64 0
  %1634 = load float* %1633, align 4
  %1635 = fcmp oge float %1632, %1634
  %1636 = fcmp uno float %1632, 0.000000e+00
  %1637 = or i1 %1635, %1636
  %1638 = select i1 %1637, float %1632, float %1634
  %1639 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 11, i64 2, i64 0
  %1640 = load float* %1639, align 4
  %1641 = fcmp oge float %1638, %1640
  %1642 = fcmp uno float %1638, 0.000000e+00
  %1643 = or i1 %1641, %1642
  %1644 = select i1 %1643, float %1638, float %1640
  %1645 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 3, i64 0, i64 0
  store float %1644, float* %1645, align 4
  %1646 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 9, i64 3, i64 0
  %1647 = load float* %1646, align 4
  %1648 = fcmp oge float 0xFFF0000000000000, %1647
  %1649 = select i1 %1648, float 0xFFF0000000000000, float %1647
  %1650 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 9, i64 4, i64 0
  %1651 = load float* %1650, align 4
  %1652 = fcmp oge float %1649, %1651
  %1653 = fcmp uno float %1649, 0.000000e+00
  %1654 = or i1 %1652, %1653
  %1655 = select i1 %1654, float %1649, float %1651
  %1656 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 9, i64 5, i64 0
  %1657 = load float* %1656, align 4
  %1658 = fcmp oge float %1655, %1657
  %1659 = fcmp uno float %1655, 0.000000e+00
  %1660 = or i1 %1658, %1659
  %1661 = select i1 %1660, float %1655, float %1657
  %1662 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 10, i64 3, i64 0
  %1663 = load float* %1662, align 4
  %1664 = fcmp oge float %1661, %1663
  %1665 = fcmp uno float %1661, 0.000000e+00
  %1666 = or i1 %1664, %1665
  %1667 = select i1 %1666, float %1661, float %1663
  %1668 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 10, i64 4, i64 0
  %1669 = load float* %1668, align 4
  %1670 = fcmp oge float %1667, %1669
  %1671 = fcmp uno float %1667, 0.000000e+00
  %1672 = or i1 %1670, %1671
  %1673 = select i1 %1672, float %1667, float %1669
  %1674 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 10, i64 5, i64 0
  %1675 = load float* %1674, align 4
  %1676 = fcmp oge float %1673, %1675
  %1677 = fcmp uno float %1673, 0.000000e+00
  %1678 = or i1 %1676, %1677
  %1679 = select i1 %1678, float %1673, float %1675
  %1680 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 11, i64 3, i64 0
  %1681 = load float* %1680, align 4
  %1682 = fcmp oge float %1679, %1681
  %1683 = fcmp uno float %1679, 0.000000e+00
  %1684 = or i1 %1682, %1683
  %1685 = select i1 %1684, float %1679, float %1681
  %1686 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 11, i64 4, i64 0
  %1687 = load float* %1686, align 4
  %1688 = fcmp oge float %1685, %1687
  %1689 = fcmp uno float %1685, 0.000000e+00
  %1690 = or i1 %1688, %1689
  %1691 = select i1 %1690, float %1685, float %1687
  %1692 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 11, i64 5, i64 0
  %1693 = load float* %1692, align 4
  %1694 = fcmp oge float %1691, %1693
  %1695 = fcmp uno float %1691, 0.000000e+00
  %1696 = or i1 %1694, %1695
  %1697 = select i1 %1696, float %1691, float %1693
  %1698 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 3, i64 1, i64 0
  store float %1697, float* %1698, align 4
  %1699 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 9, i64 6, i64 0
  %1700 = load float* %1699, align 4
  %1701 = fcmp oge float 0xFFF0000000000000, %1700
  %1702 = select i1 %1701, float 0xFFF0000000000000, float %1700
  %1703 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 9, i64 7, i64 0
  %1704 = load float* %1703, align 4
  %1705 = fcmp oge float %1702, %1704
  %1706 = fcmp uno float %1702, 0.000000e+00
  %1707 = or i1 %1705, %1706
  %1708 = select i1 %1707, float %1702, float %1704
  %1709 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 9, i64 8, i64 0
  %1710 = load float* %1709, align 4
  %1711 = fcmp oge float %1708, %1710
  %1712 = fcmp uno float %1708, 0.000000e+00
  %1713 = or i1 %1711, %1712
  %1714 = select i1 %1713, float %1708, float %1710
  %1715 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 10, i64 6, i64 0
  %1716 = load float* %1715, align 4
  %1717 = fcmp oge float %1714, %1716
  %1718 = fcmp uno float %1714, 0.000000e+00
  %1719 = or i1 %1717, %1718
  %1720 = select i1 %1719, float %1714, float %1716
  %1721 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 10, i64 7, i64 0
  %1722 = load float* %1721, align 4
  %1723 = fcmp oge float %1720, %1722
  %1724 = fcmp uno float %1720, 0.000000e+00
  %1725 = or i1 %1723, %1724
  %1726 = select i1 %1725, float %1720, float %1722
  %1727 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 10, i64 8, i64 0
  %1728 = load float* %1727, align 4
  %1729 = fcmp oge float %1726, %1728
  %1730 = fcmp uno float %1726, 0.000000e+00
  %1731 = or i1 %1729, %1730
  %1732 = select i1 %1731, float %1726, float %1728
  %1733 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 11, i64 6, i64 0
  %1734 = load float* %1733, align 4
  %1735 = fcmp oge float %1732, %1734
  %1736 = fcmp uno float %1732, 0.000000e+00
  %1737 = or i1 %1735, %1736
  %1738 = select i1 %1737, float %1732, float %1734
  %1739 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 11, i64 7, i64 0
  %1740 = load float* %1739, align 4
  %1741 = fcmp oge float %1738, %1740
  %1742 = fcmp uno float %1738, 0.000000e+00
  %1743 = or i1 %1741, %1742
  %1744 = select i1 %1743, float %1738, float %1740
  %1745 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 11, i64 8, i64 0
  %1746 = load float* %1745, align 4
  %1747 = fcmp oge float %1744, %1746
  %1748 = fcmp uno float %1744, 0.000000e+00
  %1749 = or i1 %1747, %1748
  %1750 = select i1 %1749, float %1744, float %1746
  %1751 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 3, i64 2, i64 0
  store float %1750, float* %1751, align 4
  %1752 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 9, i64 9, i64 0
  %1753 = load float* %1752, align 4
  %1754 = fcmp oge float 0xFFF0000000000000, %1753
  %1755 = select i1 %1754, float 0xFFF0000000000000, float %1753
  %1756 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 9, i64 10, i64 0
  %1757 = load float* %1756, align 4
  %1758 = fcmp oge float %1755, %1757
  %1759 = fcmp uno float %1755, 0.000000e+00
  %1760 = or i1 %1758, %1759
  %1761 = select i1 %1760, float %1755, float %1757
  %1762 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 9, i64 11, i64 0
  %1763 = load float* %1762, align 4
  %1764 = fcmp oge float %1761, %1763
  %1765 = fcmp uno float %1761, 0.000000e+00
  %1766 = or i1 %1764, %1765
  %1767 = select i1 %1766, float %1761, float %1763
  %1768 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 10, i64 9, i64 0
  %1769 = load float* %1768, align 4
  %1770 = fcmp oge float %1767, %1769
  %1771 = fcmp uno float %1767, 0.000000e+00
  %1772 = or i1 %1770, %1771
  %1773 = select i1 %1772, float %1767, float %1769
  %1774 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 10, i64 10, i64 0
  %1775 = load float* %1774, align 4
  %1776 = fcmp oge float %1773, %1775
  %1777 = fcmp uno float %1773, 0.000000e+00
  %1778 = or i1 %1776, %1777
  %1779 = select i1 %1778, float %1773, float %1775
  %1780 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 10, i64 11, i64 0
  %1781 = load float* %1780, align 4
  %1782 = fcmp oge float %1779, %1781
  %1783 = fcmp uno float %1779, 0.000000e+00
  %1784 = or i1 %1782, %1783
  %1785 = select i1 %1784, float %1779, float %1781
  %1786 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 11, i64 9, i64 0
  %1787 = load float* %1786, align 4
  %1788 = fcmp oge float %1785, %1787
  %1789 = fcmp uno float %1785, 0.000000e+00
  %1790 = or i1 %1788, %1789
  %1791 = select i1 %1790, float %1785, float %1787
  %1792 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 11, i64 10, i64 0
  %1793 = load float* %1792, align 4
  %1794 = fcmp oge float %1791, %1793
  %1795 = fcmp uno float %1791, 0.000000e+00
  %1796 = or i1 %1794, %1795
  %1797 = select i1 %1796, float %1791, float %1793
  %1798 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 11, i64 11, i64 0
  %1799 = load float* %1798, align 4
  %1800 = fcmp oge float %1797, %1799
  %1801 = fcmp uno float %1797, 0.000000e+00
  %1802 = or i1 %1800, %1801
  %1803 = select i1 %1802, float %1797, float %1799
  %1804 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 3, i64 3, i64 0
  store float %1803, float* %1804, align 4
  %1805 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 9, i64 12, i64 0
  %1806 = load float* %1805, align 4
  %1807 = fcmp oge float 0xFFF0000000000000, %1806
  %1808 = select i1 %1807, float 0xFFF0000000000000, float %1806
  %1809 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 9, i64 13, i64 0
  %1810 = load float* %1809, align 4
  %1811 = fcmp oge float %1808, %1810
  %1812 = fcmp uno float %1808, 0.000000e+00
  %1813 = or i1 %1811, %1812
  %1814 = select i1 %1813, float %1808, float %1810
  %1815 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 9, i64 14, i64 0
  %1816 = load float* %1815, align 4
  %1817 = fcmp oge float %1814, %1816
  %1818 = fcmp uno float %1814, 0.000000e+00
  %1819 = or i1 %1817, %1818
  %1820 = select i1 %1819, float %1814, float %1816
  %1821 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 10, i64 12, i64 0
  %1822 = load float* %1821, align 4
  %1823 = fcmp oge float %1820, %1822
  %1824 = fcmp uno float %1820, 0.000000e+00
  %1825 = or i1 %1823, %1824
  %1826 = select i1 %1825, float %1820, float %1822
  %1827 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 10, i64 13, i64 0
  %1828 = load float* %1827, align 4
  %1829 = fcmp oge float %1826, %1828
  %1830 = fcmp uno float %1826, 0.000000e+00
  %1831 = or i1 %1829, %1830
  %1832 = select i1 %1831, float %1826, float %1828
  %1833 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 10, i64 14, i64 0
  %1834 = load float* %1833, align 4
  %1835 = fcmp oge float %1832, %1834
  %1836 = fcmp uno float %1832, 0.000000e+00
  %1837 = or i1 %1835, %1836
  %1838 = select i1 %1837, float %1832, float %1834
  %1839 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 11, i64 12, i64 0
  %1840 = load float* %1839, align 4
  %1841 = fcmp oge float %1838, %1840
  %1842 = fcmp uno float %1838, 0.000000e+00
  %1843 = or i1 %1841, %1842
  %1844 = select i1 %1843, float %1838, float %1840
  %1845 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 11, i64 13, i64 0
  %1846 = load float* %1845, align 4
  %1847 = fcmp oge float %1844, %1846
  %1848 = fcmp uno float %1844, 0.000000e+00
  %1849 = or i1 %1847, %1848
  %1850 = select i1 %1849, float %1844, float %1846
  %1851 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 11, i64 14, i64 0
  %1852 = load float* %1851, align 4
  %1853 = fcmp oge float %1850, %1852
  %1854 = fcmp uno float %1850, 0.000000e+00
  %1855 = or i1 %1853, %1854
  %1856 = select i1 %1855, float %1850, float %1852
  %1857 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 3, i64 4, i64 0
  store float %1856, float* %1857, align 4
  %1858 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 9, i64 15, i64 0
  %1859 = load float* %1858, align 4
  %1860 = fcmp oge float 0xFFF0000000000000, %1859
  %1861 = select i1 %1860, float 0xFFF0000000000000, float %1859
  %1862 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 9, i64 16, i64 0
  %1863 = load float* %1862, align 4
  %1864 = fcmp oge float %1861, %1863
  %1865 = fcmp uno float %1861, 0.000000e+00
  %1866 = or i1 %1864, %1865
  %1867 = select i1 %1866, float %1861, float %1863
  %1868 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 9, i64 17, i64 0
  %1869 = load float* %1868, align 4
  %1870 = fcmp oge float %1867, %1869
  %1871 = fcmp uno float %1867, 0.000000e+00
  %1872 = or i1 %1870, %1871
  %1873 = select i1 %1872, float %1867, float %1869
  %1874 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 10, i64 15, i64 0
  %1875 = load float* %1874, align 4
  %1876 = fcmp oge float %1873, %1875
  %1877 = fcmp uno float %1873, 0.000000e+00
  %1878 = or i1 %1876, %1877
  %1879 = select i1 %1878, float %1873, float %1875
  %1880 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 10, i64 16, i64 0
  %1881 = load float* %1880, align 4
  %1882 = fcmp oge float %1879, %1881
  %1883 = fcmp uno float %1879, 0.000000e+00
  %1884 = or i1 %1882, %1883
  %1885 = select i1 %1884, float %1879, float %1881
  %1886 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 10, i64 17, i64 0
  %1887 = load float* %1886, align 4
  %1888 = fcmp oge float %1885, %1887
  %1889 = fcmp uno float %1885, 0.000000e+00
  %1890 = or i1 %1888, %1889
  %1891 = select i1 %1890, float %1885, float %1887
  %1892 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 11, i64 15, i64 0
  %1893 = load float* %1892, align 4
  %1894 = fcmp oge float %1891, %1893
  %1895 = fcmp uno float %1891, 0.000000e+00
  %1896 = or i1 %1894, %1895
  %1897 = select i1 %1896, float %1891, float %1893
  %1898 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 11, i64 16, i64 0
  %1899 = load float* %1898, align 4
  %1900 = fcmp oge float %1897, %1899
  %1901 = fcmp uno float %1897, 0.000000e+00
  %1902 = or i1 %1900, %1901
  %1903 = select i1 %1902, float %1897, float %1899
  %1904 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 11, i64 17, i64 0
  %1905 = load float* %1904, align 4
  %1906 = fcmp oge float %1903, %1905
  %1907 = fcmp uno float %1903, 0.000000e+00
  %1908 = or i1 %1906, %1907
  %1909 = select i1 %1908, float %1903, float %1905
  %1910 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 3, i64 5, i64 0
  store float %1909, float* %1910, align 4
  %1911 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 9, i64 18, i64 0
  %1912 = load float* %1911, align 4
  %1913 = fcmp oge float 0xFFF0000000000000, %1912
  %1914 = select i1 %1913, float 0xFFF0000000000000, float %1912
  %1915 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 9, i64 19, i64 0
  %1916 = load float* %1915, align 4
  %1917 = fcmp oge float %1914, %1916
  %1918 = fcmp uno float %1914, 0.000000e+00
  %1919 = or i1 %1917, %1918
  %1920 = select i1 %1919, float %1914, float %1916
  %1921 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 9, i64 20, i64 0
  %1922 = load float* %1921, align 4
  %1923 = fcmp oge float %1920, %1922
  %1924 = fcmp uno float %1920, 0.000000e+00
  %1925 = or i1 %1923, %1924
  %1926 = select i1 %1925, float %1920, float %1922
  %1927 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 10, i64 18, i64 0
  %1928 = load float* %1927, align 4
  %1929 = fcmp oge float %1926, %1928
  %1930 = fcmp uno float %1926, 0.000000e+00
  %1931 = or i1 %1929, %1930
  %1932 = select i1 %1931, float %1926, float %1928
  %1933 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 10, i64 19, i64 0
  %1934 = load float* %1933, align 4
  %1935 = fcmp oge float %1932, %1934
  %1936 = fcmp uno float %1932, 0.000000e+00
  %1937 = or i1 %1935, %1936
  %1938 = select i1 %1937, float %1932, float %1934
  %1939 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 10, i64 20, i64 0
  %1940 = load float* %1939, align 4
  %1941 = fcmp oge float %1938, %1940
  %1942 = fcmp uno float %1938, 0.000000e+00
  %1943 = or i1 %1941, %1942
  %1944 = select i1 %1943, float %1938, float %1940
  %1945 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 11, i64 18, i64 0
  %1946 = load float* %1945, align 4
  %1947 = fcmp oge float %1944, %1946
  %1948 = fcmp uno float %1944, 0.000000e+00
  %1949 = or i1 %1947, %1948
  %1950 = select i1 %1949, float %1944, float %1946
  %1951 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 11, i64 19, i64 0
  %1952 = load float* %1951, align 4
  %1953 = fcmp oge float %1950, %1952
  %1954 = fcmp uno float %1950, 0.000000e+00
  %1955 = or i1 %1953, %1954
  %1956 = select i1 %1955, float %1950, float %1952
  %1957 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 11, i64 20, i64 0
  %1958 = load float* %1957, align 4
  %1959 = fcmp oge float %1956, %1958
  %1960 = fcmp uno float %1956, 0.000000e+00
  %1961 = or i1 %1959, %1960
  %1962 = select i1 %1961, float %1956, float %1958
  %1963 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 3, i64 6, i64 0
  store float %1962, float* %1963, align 4
  %1964 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 9, i64 21, i64 0
  %1965 = load float* %1964, align 4
  %1966 = fcmp oge float 0xFFF0000000000000, %1965
  %1967 = select i1 %1966, float 0xFFF0000000000000, float %1965
  %1968 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 9, i64 22, i64 0
  %1969 = load float* %1968, align 4
  %1970 = fcmp oge float %1967, %1969
  %1971 = fcmp uno float %1967, 0.000000e+00
  %1972 = or i1 %1970, %1971
  %1973 = select i1 %1972, float %1967, float %1969
  %1974 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 9, i64 23, i64 0
  %1975 = load float* %1974, align 4
  %1976 = fcmp oge float %1973, %1975
  %1977 = fcmp uno float %1973, 0.000000e+00
  %1978 = or i1 %1976, %1977
  %1979 = select i1 %1978, float %1973, float %1975
  %1980 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 10, i64 21, i64 0
  %1981 = load float* %1980, align 4
  %1982 = fcmp oge float %1979, %1981
  %1983 = fcmp uno float %1979, 0.000000e+00
  %1984 = or i1 %1982, %1983
  %1985 = select i1 %1984, float %1979, float %1981
  %1986 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 10, i64 22, i64 0
  %1987 = load float* %1986, align 4
  %1988 = fcmp oge float %1985, %1987
  %1989 = fcmp uno float %1985, 0.000000e+00
  %1990 = or i1 %1988, %1989
  %1991 = select i1 %1990, float %1985, float %1987
  %1992 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 10, i64 23, i64 0
  %1993 = load float* %1992, align 4
  %1994 = fcmp oge float %1991, %1993
  %1995 = fcmp uno float %1991, 0.000000e+00
  %1996 = or i1 %1994, %1995
  %1997 = select i1 %1996, float %1991, float %1993
  %1998 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 11, i64 21, i64 0
  %1999 = load float* %1998, align 4
  %2000 = fcmp oge float %1997, %1999
  %2001 = fcmp uno float %1997, 0.000000e+00
  %2002 = or i1 %2000, %2001
  %2003 = select i1 %2002, float %1997, float %1999
  %2004 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 11, i64 22, i64 0
  %2005 = load float* %2004, align 4
  %2006 = fcmp oge float %2003, %2005
  %2007 = fcmp uno float %2003, 0.000000e+00
  %2008 = or i1 %2006, %2007
  %2009 = select i1 %2008, float %2003, float %2005
  %2010 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 11, i64 23, i64 0
  %2011 = load float* %2010, align 4
  %2012 = fcmp oge float %2009, %2011
  %2013 = fcmp uno float %2009, 0.000000e+00
  %2014 = or i1 %2012, %2013
  %2015 = select i1 %2014, float %2009, float %2011
  %2016 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 3, i64 7, i64 0
  store float %2015, float* %2016, align 4
  %2017 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 9, i64 24, i64 0
  %2018 = load float* %2017, align 4
  %2019 = fcmp oge float 0xFFF0000000000000, %2018
  %2020 = select i1 %2019, float 0xFFF0000000000000, float %2018
  %2021 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 9, i64 25, i64 0
  %2022 = load float* %2021, align 4
  %2023 = fcmp oge float %2020, %2022
  %2024 = fcmp uno float %2020, 0.000000e+00
  %2025 = or i1 %2023, %2024
  %2026 = select i1 %2025, float %2020, float %2022
  %2027 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 9, i64 26, i64 0
  %2028 = load float* %2027, align 4
  %2029 = fcmp oge float %2026, %2028
  %2030 = fcmp uno float %2026, 0.000000e+00
  %2031 = or i1 %2029, %2030
  %2032 = select i1 %2031, float %2026, float %2028
  %2033 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 10, i64 24, i64 0
  %2034 = load float* %2033, align 4
  %2035 = fcmp oge float %2032, %2034
  %2036 = fcmp uno float %2032, 0.000000e+00
  %2037 = or i1 %2035, %2036
  %2038 = select i1 %2037, float %2032, float %2034
  %2039 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 10, i64 25, i64 0
  %2040 = load float* %2039, align 4
  %2041 = fcmp oge float %2038, %2040
  %2042 = fcmp uno float %2038, 0.000000e+00
  %2043 = or i1 %2041, %2042
  %2044 = select i1 %2043, float %2038, float %2040
  %2045 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 10, i64 26, i64 0
  %2046 = load float* %2045, align 4
  %2047 = fcmp oge float %2044, %2046
  %2048 = fcmp uno float %2044, 0.000000e+00
  %2049 = or i1 %2047, %2048
  %2050 = select i1 %2049, float %2044, float %2046
  %2051 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 11, i64 24, i64 0
  %2052 = load float* %2051, align 4
  %2053 = fcmp oge float %2050, %2052
  %2054 = fcmp uno float %2050, 0.000000e+00
  %2055 = or i1 %2053, %2054
  %2056 = select i1 %2055, float %2050, float %2052
  %2057 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 11, i64 25, i64 0
  %2058 = load float* %2057, align 4
  %2059 = fcmp oge float %2056, %2058
  %2060 = fcmp uno float %2056, 0.000000e+00
  %2061 = or i1 %2059, %2060
  %2062 = select i1 %2061, float %2056, float %2058
  %2063 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 11, i64 26, i64 0
  %2064 = load float* %2063, align 4
  %2065 = fcmp oge float %2062, %2064
  %2066 = fcmp uno float %2062, 0.000000e+00
  %2067 = or i1 %2065, %2066
  %2068 = select i1 %2067, float %2062, float %2064
  %2069 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 3, i64 8, i64 0
  store float %2068, float* %2069, align 4
  %2070 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 9, i64 27, i64 0
  %2071 = load float* %2070, align 4
  %2072 = fcmp oge float 0xFFF0000000000000, %2071
  %2073 = select i1 %2072, float 0xFFF0000000000000, float %2071
  %2074 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 9, i64 28, i64 0
  %2075 = load float* %2074, align 4
  %2076 = fcmp oge float %2073, %2075
  %2077 = fcmp uno float %2073, 0.000000e+00
  %2078 = or i1 %2076, %2077
  %2079 = select i1 %2078, float %2073, float %2075
  %2080 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 9, i64 29, i64 0
  %2081 = load float* %2080, align 4
  %2082 = fcmp oge float %2079, %2081
  %2083 = fcmp uno float %2079, 0.000000e+00
  %2084 = or i1 %2082, %2083
  %2085 = select i1 %2084, float %2079, float %2081
  %2086 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 10, i64 27, i64 0
  %2087 = load float* %2086, align 4
  %2088 = fcmp oge float %2085, %2087
  %2089 = fcmp uno float %2085, 0.000000e+00
  %2090 = or i1 %2088, %2089
  %2091 = select i1 %2090, float %2085, float %2087
  %2092 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 10, i64 28, i64 0
  %2093 = load float* %2092, align 4
  %2094 = fcmp oge float %2091, %2093
  %2095 = fcmp uno float %2091, 0.000000e+00
  %2096 = or i1 %2094, %2095
  %2097 = select i1 %2096, float %2091, float %2093
  %2098 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 10, i64 29, i64 0
  %2099 = load float* %2098, align 4
  %2100 = fcmp oge float %2097, %2099
  %2101 = fcmp uno float %2097, 0.000000e+00
  %2102 = or i1 %2100, %2101
  %2103 = select i1 %2102, float %2097, float %2099
  %2104 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 11, i64 27, i64 0
  %2105 = load float* %2104, align 4
  %2106 = fcmp oge float %2103, %2105
  %2107 = fcmp uno float %2103, 0.000000e+00
  %2108 = or i1 %2106, %2107
  %2109 = select i1 %2108, float %2103, float %2105
  %2110 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 11, i64 28, i64 0
  %2111 = load float* %2110, align 4
  %2112 = fcmp oge float %2109, %2111
  %2113 = fcmp uno float %2109, 0.000000e+00
  %2114 = or i1 %2112, %2113
  %2115 = select i1 %2114, float %2109, float %2111
  %2116 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 11, i64 29, i64 0
  %2117 = load float* %2116, align 4
  %2118 = fcmp oge float %2115, %2117
  %2119 = fcmp uno float %2115, 0.000000e+00
  %2120 = or i1 %2118, %2119
  %2121 = select i1 %2120, float %2115, float %2117
  %2122 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 3, i64 9, i64 0
  store float %2121, float* %2122, align 4
  %2123 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 12, i64 0, i64 0
  %2124 = load float* %2123, align 4
  %2125 = fcmp oge float 0xFFF0000000000000, %2124
  %2126 = select i1 %2125, float 0xFFF0000000000000, float %2124
  %2127 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 12, i64 1, i64 0
  %2128 = load float* %2127, align 4
  %2129 = fcmp oge float %2126, %2128
  %2130 = fcmp uno float %2126, 0.000000e+00
  %2131 = or i1 %2129, %2130
  %2132 = select i1 %2131, float %2126, float %2128
  %2133 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 12, i64 2, i64 0
  %2134 = load float* %2133, align 4
  %2135 = fcmp oge float %2132, %2134
  %2136 = fcmp uno float %2132, 0.000000e+00
  %2137 = or i1 %2135, %2136
  %2138 = select i1 %2137, float %2132, float %2134
  %2139 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 13, i64 0, i64 0
  %2140 = load float* %2139, align 4
  %2141 = fcmp oge float %2138, %2140
  %2142 = fcmp uno float %2138, 0.000000e+00
  %2143 = or i1 %2141, %2142
  %2144 = select i1 %2143, float %2138, float %2140
  %2145 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 13, i64 1, i64 0
  %2146 = load float* %2145, align 4
  %2147 = fcmp oge float %2144, %2146
  %2148 = fcmp uno float %2144, 0.000000e+00
  %2149 = or i1 %2147, %2148
  %2150 = select i1 %2149, float %2144, float %2146
  %2151 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 13, i64 2, i64 0
  %2152 = load float* %2151, align 4
  %2153 = fcmp oge float %2150, %2152
  %2154 = fcmp uno float %2150, 0.000000e+00
  %2155 = or i1 %2153, %2154
  %2156 = select i1 %2155, float %2150, float %2152
  %2157 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 14, i64 0, i64 0
  %2158 = load float* %2157, align 4
  %2159 = fcmp oge float %2156, %2158
  %2160 = fcmp uno float %2156, 0.000000e+00
  %2161 = or i1 %2159, %2160
  %2162 = select i1 %2161, float %2156, float %2158
  %2163 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 14, i64 1, i64 0
  %2164 = load float* %2163, align 4
  %2165 = fcmp oge float %2162, %2164
  %2166 = fcmp uno float %2162, 0.000000e+00
  %2167 = or i1 %2165, %2166
  %2168 = select i1 %2167, float %2162, float %2164
  %2169 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 14, i64 2, i64 0
  %2170 = load float* %2169, align 4
  %2171 = fcmp oge float %2168, %2170
  %2172 = fcmp uno float %2168, 0.000000e+00
  %2173 = or i1 %2171, %2172
  %2174 = select i1 %2173, float %2168, float %2170
  %2175 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 4, i64 0, i64 0
  store float %2174, float* %2175, align 4
  %2176 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 12, i64 3, i64 0
  %2177 = load float* %2176, align 4
  %2178 = fcmp oge float 0xFFF0000000000000, %2177
  %2179 = select i1 %2178, float 0xFFF0000000000000, float %2177
  %2180 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 12, i64 4, i64 0
  %2181 = load float* %2180, align 4
  %2182 = fcmp oge float %2179, %2181
  %2183 = fcmp uno float %2179, 0.000000e+00
  %2184 = or i1 %2182, %2183
  %2185 = select i1 %2184, float %2179, float %2181
  %2186 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 12, i64 5, i64 0
  %2187 = load float* %2186, align 4
  %2188 = fcmp oge float %2185, %2187
  %2189 = fcmp uno float %2185, 0.000000e+00
  %2190 = or i1 %2188, %2189
  %2191 = select i1 %2190, float %2185, float %2187
  %2192 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 13, i64 3, i64 0
  %2193 = load float* %2192, align 4
  %2194 = fcmp oge float %2191, %2193
  %2195 = fcmp uno float %2191, 0.000000e+00
  %2196 = or i1 %2194, %2195
  %2197 = select i1 %2196, float %2191, float %2193
  %2198 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 13, i64 4, i64 0
  %2199 = load float* %2198, align 4
  %2200 = fcmp oge float %2197, %2199
  %2201 = fcmp uno float %2197, 0.000000e+00
  %2202 = or i1 %2200, %2201
  %2203 = select i1 %2202, float %2197, float %2199
  %2204 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 13, i64 5, i64 0
  %2205 = load float* %2204, align 4
  %2206 = fcmp oge float %2203, %2205
  %2207 = fcmp uno float %2203, 0.000000e+00
  %2208 = or i1 %2206, %2207
  %2209 = select i1 %2208, float %2203, float %2205
  %2210 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 14, i64 3, i64 0
  %2211 = load float* %2210, align 4
  %2212 = fcmp oge float %2209, %2211
  %2213 = fcmp uno float %2209, 0.000000e+00
  %2214 = or i1 %2212, %2213
  %2215 = select i1 %2214, float %2209, float %2211
  %2216 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 14, i64 4, i64 0
  %2217 = load float* %2216, align 4
  %2218 = fcmp oge float %2215, %2217
  %2219 = fcmp uno float %2215, 0.000000e+00
  %2220 = or i1 %2218, %2219
  %2221 = select i1 %2220, float %2215, float %2217
  %2222 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 14, i64 5, i64 0
  %2223 = load float* %2222, align 4
  %2224 = fcmp oge float %2221, %2223
  %2225 = fcmp uno float %2221, 0.000000e+00
  %2226 = or i1 %2224, %2225
  %2227 = select i1 %2226, float %2221, float %2223
  %2228 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 4, i64 1, i64 0
  store float %2227, float* %2228, align 4
  %2229 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 12, i64 6, i64 0
  %2230 = load float* %2229, align 4
  %2231 = fcmp oge float 0xFFF0000000000000, %2230
  %2232 = select i1 %2231, float 0xFFF0000000000000, float %2230
  %2233 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 12, i64 7, i64 0
  %2234 = load float* %2233, align 4
  %2235 = fcmp oge float %2232, %2234
  %2236 = fcmp uno float %2232, 0.000000e+00
  %2237 = or i1 %2235, %2236
  %2238 = select i1 %2237, float %2232, float %2234
  %2239 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 12, i64 8, i64 0
  %2240 = load float* %2239, align 4
  %2241 = fcmp oge float %2238, %2240
  %2242 = fcmp uno float %2238, 0.000000e+00
  %2243 = or i1 %2241, %2242
  %2244 = select i1 %2243, float %2238, float %2240
  %2245 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 13, i64 6, i64 0
  %2246 = load float* %2245, align 4
  %2247 = fcmp oge float %2244, %2246
  %2248 = fcmp uno float %2244, 0.000000e+00
  %2249 = or i1 %2247, %2248
  %2250 = select i1 %2249, float %2244, float %2246
  %2251 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 13, i64 7, i64 0
  %2252 = load float* %2251, align 4
  %2253 = fcmp oge float %2250, %2252
  %2254 = fcmp uno float %2250, 0.000000e+00
  %2255 = or i1 %2253, %2254
  %2256 = select i1 %2255, float %2250, float %2252
  %2257 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 13, i64 8, i64 0
  %2258 = load float* %2257, align 4
  %2259 = fcmp oge float %2256, %2258
  %2260 = fcmp uno float %2256, 0.000000e+00
  %2261 = or i1 %2259, %2260
  %2262 = select i1 %2261, float %2256, float %2258
  %2263 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 14, i64 6, i64 0
  %2264 = load float* %2263, align 4
  %2265 = fcmp oge float %2262, %2264
  %2266 = fcmp uno float %2262, 0.000000e+00
  %2267 = or i1 %2265, %2266
  %2268 = select i1 %2267, float %2262, float %2264
  %2269 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 14, i64 7, i64 0
  %2270 = load float* %2269, align 4
  %2271 = fcmp oge float %2268, %2270
  %2272 = fcmp uno float %2268, 0.000000e+00
  %2273 = or i1 %2271, %2272
  %2274 = select i1 %2273, float %2268, float %2270
  %2275 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 14, i64 8, i64 0
  %2276 = load float* %2275, align 4
  %2277 = fcmp oge float %2274, %2276
  %2278 = fcmp uno float %2274, 0.000000e+00
  %2279 = or i1 %2277, %2278
  %2280 = select i1 %2279, float %2274, float %2276
  %2281 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 4, i64 2, i64 0
  store float %2280, float* %2281, align 4
  %2282 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 12, i64 9, i64 0
  %2283 = load float* %2282, align 4
  %2284 = fcmp oge float 0xFFF0000000000000, %2283
  %2285 = select i1 %2284, float 0xFFF0000000000000, float %2283
  %2286 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 12, i64 10, i64 0
  %2287 = load float* %2286, align 4
  %2288 = fcmp oge float %2285, %2287
  %2289 = fcmp uno float %2285, 0.000000e+00
  %2290 = or i1 %2288, %2289
  %2291 = select i1 %2290, float %2285, float %2287
  %2292 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 12, i64 11, i64 0
  %2293 = load float* %2292, align 4
  %2294 = fcmp oge float %2291, %2293
  %2295 = fcmp uno float %2291, 0.000000e+00
  %2296 = or i1 %2294, %2295
  %2297 = select i1 %2296, float %2291, float %2293
  %2298 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 13, i64 9, i64 0
  %2299 = load float* %2298, align 4
  %2300 = fcmp oge float %2297, %2299
  %2301 = fcmp uno float %2297, 0.000000e+00
  %2302 = or i1 %2300, %2301
  %2303 = select i1 %2302, float %2297, float %2299
  %2304 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 13, i64 10, i64 0
  %2305 = load float* %2304, align 4
  %2306 = fcmp oge float %2303, %2305
  %2307 = fcmp uno float %2303, 0.000000e+00
  %2308 = or i1 %2306, %2307
  %2309 = select i1 %2308, float %2303, float %2305
  %2310 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 13, i64 11, i64 0
  %2311 = load float* %2310, align 4
  %2312 = fcmp oge float %2309, %2311
  %2313 = fcmp uno float %2309, 0.000000e+00
  %2314 = or i1 %2312, %2313
  %2315 = select i1 %2314, float %2309, float %2311
  %2316 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 14, i64 9, i64 0
  %2317 = load float* %2316, align 4
  %2318 = fcmp oge float %2315, %2317
  %2319 = fcmp uno float %2315, 0.000000e+00
  %2320 = or i1 %2318, %2319
  %2321 = select i1 %2320, float %2315, float %2317
  %2322 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 14, i64 10, i64 0
  %2323 = load float* %2322, align 4
  %2324 = fcmp oge float %2321, %2323
  %2325 = fcmp uno float %2321, 0.000000e+00
  %2326 = or i1 %2324, %2325
  %2327 = select i1 %2326, float %2321, float %2323
  %2328 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 14, i64 11, i64 0
  %2329 = load float* %2328, align 4
  %2330 = fcmp oge float %2327, %2329
  %2331 = fcmp uno float %2327, 0.000000e+00
  %2332 = or i1 %2330, %2331
  %2333 = select i1 %2332, float %2327, float %2329
  %2334 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 4, i64 3, i64 0
  store float %2333, float* %2334, align 4
  %2335 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 12, i64 12, i64 0
  %2336 = load float* %2335, align 4
  %2337 = fcmp oge float 0xFFF0000000000000, %2336
  %2338 = select i1 %2337, float 0xFFF0000000000000, float %2336
  %2339 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 12, i64 13, i64 0
  %2340 = load float* %2339, align 4
  %2341 = fcmp oge float %2338, %2340
  %2342 = fcmp uno float %2338, 0.000000e+00
  %2343 = or i1 %2341, %2342
  %2344 = select i1 %2343, float %2338, float %2340
  %2345 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 12, i64 14, i64 0
  %2346 = load float* %2345, align 4
  %2347 = fcmp oge float %2344, %2346
  %2348 = fcmp uno float %2344, 0.000000e+00
  %2349 = or i1 %2347, %2348
  %2350 = select i1 %2349, float %2344, float %2346
  %2351 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 13, i64 12, i64 0
  %2352 = load float* %2351, align 4
  %2353 = fcmp oge float %2350, %2352
  %2354 = fcmp uno float %2350, 0.000000e+00
  %2355 = or i1 %2353, %2354
  %2356 = select i1 %2355, float %2350, float %2352
  %2357 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 13, i64 13, i64 0
  %2358 = load float* %2357, align 4
  %2359 = fcmp oge float %2356, %2358
  %2360 = fcmp uno float %2356, 0.000000e+00
  %2361 = or i1 %2359, %2360
  %2362 = select i1 %2361, float %2356, float %2358
  %2363 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 13, i64 14, i64 0
  %2364 = load float* %2363, align 4
  %2365 = fcmp oge float %2362, %2364
  %2366 = fcmp uno float %2362, 0.000000e+00
  %2367 = or i1 %2365, %2366
  %2368 = select i1 %2367, float %2362, float %2364
  %2369 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 14, i64 12, i64 0
  %2370 = load float* %2369, align 4
  %2371 = fcmp oge float %2368, %2370
  %2372 = fcmp uno float %2368, 0.000000e+00
  %2373 = or i1 %2371, %2372
  %2374 = select i1 %2373, float %2368, float %2370
  %2375 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 14, i64 13, i64 0
  %2376 = load float* %2375, align 4
  %2377 = fcmp oge float %2374, %2376
  %2378 = fcmp uno float %2374, 0.000000e+00
  %2379 = or i1 %2377, %2378
  %2380 = select i1 %2379, float %2374, float %2376
  %2381 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 14, i64 14, i64 0
  %2382 = load float* %2381, align 4
  %2383 = fcmp oge float %2380, %2382
  %2384 = fcmp uno float %2380, 0.000000e+00
  %2385 = or i1 %2383, %2384
  %2386 = select i1 %2385, float %2380, float %2382
  %2387 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 4, i64 4, i64 0
  store float %2386, float* %2387, align 4
  %2388 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 12, i64 15, i64 0
  %2389 = load float* %2388, align 4
  %2390 = fcmp oge float 0xFFF0000000000000, %2389
  %2391 = select i1 %2390, float 0xFFF0000000000000, float %2389
  %2392 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 12, i64 16, i64 0
  %2393 = load float* %2392, align 4
  %2394 = fcmp oge float %2391, %2393
  %2395 = fcmp uno float %2391, 0.000000e+00
  %2396 = or i1 %2394, %2395
  %2397 = select i1 %2396, float %2391, float %2393
  %2398 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 12, i64 17, i64 0
  %2399 = load float* %2398, align 4
  %2400 = fcmp oge float %2397, %2399
  %2401 = fcmp uno float %2397, 0.000000e+00
  %2402 = or i1 %2400, %2401
  %2403 = select i1 %2402, float %2397, float %2399
  %2404 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 13, i64 15, i64 0
  %2405 = load float* %2404, align 4
  %2406 = fcmp oge float %2403, %2405
  %2407 = fcmp uno float %2403, 0.000000e+00
  %2408 = or i1 %2406, %2407
  %2409 = select i1 %2408, float %2403, float %2405
  %2410 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 13, i64 16, i64 0
  %2411 = load float* %2410, align 4
  %2412 = fcmp oge float %2409, %2411
  %2413 = fcmp uno float %2409, 0.000000e+00
  %2414 = or i1 %2412, %2413
  %2415 = select i1 %2414, float %2409, float %2411
  %2416 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 13, i64 17, i64 0
  %2417 = load float* %2416, align 4
  %2418 = fcmp oge float %2415, %2417
  %2419 = fcmp uno float %2415, 0.000000e+00
  %2420 = or i1 %2418, %2419
  %2421 = select i1 %2420, float %2415, float %2417
  %2422 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 14, i64 15, i64 0
  %2423 = load float* %2422, align 4
  %2424 = fcmp oge float %2421, %2423
  %2425 = fcmp uno float %2421, 0.000000e+00
  %2426 = or i1 %2424, %2425
  %2427 = select i1 %2426, float %2421, float %2423
  %2428 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 14, i64 16, i64 0
  %2429 = load float* %2428, align 4
  %2430 = fcmp oge float %2427, %2429
  %2431 = fcmp uno float %2427, 0.000000e+00
  %2432 = or i1 %2430, %2431
  %2433 = select i1 %2432, float %2427, float %2429
  %2434 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 14, i64 17, i64 0
  %2435 = load float* %2434, align 4
  %2436 = fcmp oge float %2433, %2435
  %2437 = fcmp uno float %2433, 0.000000e+00
  %2438 = or i1 %2436, %2437
  %2439 = select i1 %2438, float %2433, float %2435
  %2440 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 4, i64 5, i64 0
  store float %2439, float* %2440, align 4
  %2441 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 12, i64 18, i64 0
  %2442 = load float* %2441, align 4
  %2443 = fcmp oge float 0xFFF0000000000000, %2442
  %2444 = select i1 %2443, float 0xFFF0000000000000, float %2442
  %2445 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 12, i64 19, i64 0
  %2446 = load float* %2445, align 4
  %2447 = fcmp oge float %2444, %2446
  %2448 = fcmp uno float %2444, 0.000000e+00
  %2449 = or i1 %2447, %2448
  %2450 = select i1 %2449, float %2444, float %2446
  %2451 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 12, i64 20, i64 0
  %2452 = load float* %2451, align 4
  %2453 = fcmp oge float %2450, %2452
  %2454 = fcmp uno float %2450, 0.000000e+00
  %2455 = or i1 %2453, %2454
  %2456 = select i1 %2455, float %2450, float %2452
  %2457 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 13, i64 18, i64 0
  %2458 = load float* %2457, align 4
  %2459 = fcmp oge float %2456, %2458
  %2460 = fcmp uno float %2456, 0.000000e+00
  %2461 = or i1 %2459, %2460
  %2462 = select i1 %2461, float %2456, float %2458
  %2463 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 13, i64 19, i64 0
  %2464 = load float* %2463, align 4
  %2465 = fcmp oge float %2462, %2464
  %2466 = fcmp uno float %2462, 0.000000e+00
  %2467 = or i1 %2465, %2466
  %2468 = select i1 %2467, float %2462, float %2464
  %2469 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 13, i64 20, i64 0
  %2470 = load float* %2469, align 4
  %2471 = fcmp oge float %2468, %2470
  %2472 = fcmp uno float %2468, 0.000000e+00
  %2473 = or i1 %2471, %2472
  %2474 = select i1 %2473, float %2468, float %2470
  %2475 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 14, i64 18, i64 0
  %2476 = load float* %2475, align 4
  %2477 = fcmp oge float %2474, %2476
  %2478 = fcmp uno float %2474, 0.000000e+00
  %2479 = or i1 %2477, %2478
  %2480 = select i1 %2479, float %2474, float %2476
  %2481 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 14, i64 19, i64 0
  %2482 = load float* %2481, align 4
  %2483 = fcmp oge float %2480, %2482
  %2484 = fcmp uno float %2480, 0.000000e+00
  %2485 = or i1 %2483, %2484
  %2486 = select i1 %2485, float %2480, float %2482
  %2487 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 14, i64 20, i64 0
  %2488 = load float* %2487, align 4
  %2489 = fcmp oge float %2486, %2488
  %2490 = fcmp uno float %2486, 0.000000e+00
  %2491 = or i1 %2489, %2490
  %2492 = select i1 %2491, float %2486, float %2488
  %2493 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 4, i64 6, i64 0
  store float %2492, float* %2493, align 4
  %2494 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 12, i64 21, i64 0
  %2495 = load float* %2494, align 4
  %2496 = fcmp oge float 0xFFF0000000000000, %2495
  %2497 = select i1 %2496, float 0xFFF0000000000000, float %2495
  %2498 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 12, i64 22, i64 0
  %2499 = load float* %2498, align 4
  %2500 = fcmp oge float %2497, %2499
  %2501 = fcmp uno float %2497, 0.000000e+00
  %2502 = or i1 %2500, %2501
  %2503 = select i1 %2502, float %2497, float %2499
  %2504 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 12, i64 23, i64 0
  %2505 = load float* %2504, align 4
  %2506 = fcmp oge float %2503, %2505
  %2507 = fcmp uno float %2503, 0.000000e+00
  %2508 = or i1 %2506, %2507
  %2509 = select i1 %2508, float %2503, float %2505
  %2510 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 13, i64 21, i64 0
  %2511 = load float* %2510, align 4
  %2512 = fcmp oge float %2509, %2511
  %2513 = fcmp uno float %2509, 0.000000e+00
  %2514 = or i1 %2512, %2513
  %2515 = select i1 %2514, float %2509, float %2511
  %2516 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 13, i64 22, i64 0
  %2517 = load float* %2516, align 4
  %2518 = fcmp oge float %2515, %2517
  %2519 = fcmp uno float %2515, 0.000000e+00
  %2520 = or i1 %2518, %2519
  %2521 = select i1 %2520, float %2515, float %2517
  %2522 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 13, i64 23, i64 0
  %2523 = load float* %2522, align 4
  %2524 = fcmp oge float %2521, %2523
  %2525 = fcmp uno float %2521, 0.000000e+00
  %2526 = or i1 %2524, %2525
  %2527 = select i1 %2526, float %2521, float %2523
  %2528 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 14, i64 21, i64 0
  %2529 = load float* %2528, align 4
  %2530 = fcmp oge float %2527, %2529
  %2531 = fcmp uno float %2527, 0.000000e+00
  %2532 = or i1 %2530, %2531
  %2533 = select i1 %2532, float %2527, float %2529
  %2534 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 14, i64 22, i64 0
  %2535 = load float* %2534, align 4
  %2536 = fcmp oge float %2533, %2535
  %2537 = fcmp uno float %2533, 0.000000e+00
  %2538 = or i1 %2536, %2537
  %2539 = select i1 %2538, float %2533, float %2535
  %2540 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 14, i64 23, i64 0
  %2541 = load float* %2540, align 4
  %2542 = fcmp oge float %2539, %2541
  %2543 = fcmp uno float %2539, 0.000000e+00
  %2544 = or i1 %2542, %2543
  %2545 = select i1 %2544, float %2539, float %2541
  %2546 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 4, i64 7, i64 0
  store float %2545, float* %2546, align 4
  %2547 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 12, i64 24, i64 0
  %2548 = load float* %2547, align 4
  %2549 = fcmp oge float 0xFFF0000000000000, %2548
  %2550 = select i1 %2549, float 0xFFF0000000000000, float %2548
  %2551 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 12, i64 25, i64 0
  %2552 = load float* %2551, align 4
  %2553 = fcmp oge float %2550, %2552
  %2554 = fcmp uno float %2550, 0.000000e+00
  %2555 = or i1 %2553, %2554
  %2556 = select i1 %2555, float %2550, float %2552
  %2557 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 12, i64 26, i64 0
  %2558 = load float* %2557, align 4
  %2559 = fcmp oge float %2556, %2558
  %2560 = fcmp uno float %2556, 0.000000e+00
  %2561 = or i1 %2559, %2560
  %2562 = select i1 %2561, float %2556, float %2558
  %2563 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 13, i64 24, i64 0
  %2564 = load float* %2563, align 4
  %2565 = fcmp oge float %2562, %2564
  %2566 = fcmp uno float %2562, 0.000000e+00
  %2567 = or i1 %2565, %2566
  %2568 = select i1 %2567, float %2562, float %2564
  %2569 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 13, i64 25, i64 0
  %2570 = load float* %2569, align 4
  %2571 = fcmp oge float %2568, %2570
  %2572 = fcmp uno float %2568, 0.000000e+00
  %2573 = or i1 %2571, %2572
  %2574 = select i1 %2573, float %2568, float %2570
  %2575 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 13, i64 26, i64 0
  %2576 = load float* %2575, align 4
  %2577 = fcmp oge float %2574, %2576
  %2578 = fcmp uno float %2574, 0.000000e+00
  %2579 = or i1 %2577, %2578
  %2580 = select i1 %2579, float %2574, float %2576
  %2581 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 14, i64 24, i64 0
  %2582 = load float* %2581, align 4
  %2583 = fcmp oge float %2580, %2582
  %2584 = fcmp uno float %2580, 0.000000e+00
  %2585 = or i1 %2583, %2584
  %2586 = select i1 %2585, float %2580, float %2582
  %2587 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 14, i64 25, i64 0
  %2588 = load float* %2587, align 4
  %2589 = fcmp oge float %2586, %2588
  %2590 = fcmp uno float %2586, 0.000000e+00
  %2591 = or i1 %2589, %2590
  %2592 = select i1 %2591, float %2586, float %2588
  %2593 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 14, i64 26, i64 0
  %2594 = load float* %2593, align 4
  %2595 = fcmp oge float %2592, %2594
  %2596 = fcmp uno float %2592, 0.000000e+00
  %2597 = or i1 %2595, %2596
  %2598 = select i1 %2597, float %2592, float %2594
  %2599 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 4, i64 8, i64 0
  store float %2598, float* %2599, align 4
  %2600 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 12, i64 27, i64 0
  %2601 = load float* %2600, align 4
  %2602 = fcmp oge float 0xFFF0000000000000, %2601
  %2603 = select i1 %2602, float 0xFFF0000000000000, float %2601
  %2604 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 12, i64 28, i64 0
  %2605 = load float* %2604, align 4
  %2606 = fcmp oge float %2603, %2605
  %2607 = fcmp uno float %2603, 0.000000e+00
  %2608 = or i1 %2606, %2607
  %2609 = select i1 %2608, float %2603, float %2605
  %2610 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 12, i64 29, i64 0
  %2611 = load float* %2610, align 4
  %2612 = fcmp oge float %2609, %2611
  %2613 = fcmp uno float %2609, 0.000000e+00
  %2614 = or i1 %2612, %2613
  %2615 = select i1 %2614, float %2609, float %2611
  %2616 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 13, i64 27, i64 0
  %2617 = load float* %2616, align 4
  %2618 = fcmp oge float %2615, %2617
  %2619 = fcmp uno float %2615, 0.000000e+00
  %2620 = or i1 %2618, %2619
  %2621 = select i1 %2620, float %2615, float %2617
  %2622 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 13, i64 28, i64 0
  %2623 = load float* %2622, align 4
  %2624 = fcmp oge float %2621, %2623
  %2625 = fcmp uno float %2621, 0.000000e+00
  %2626 = or i1 %2624, %2625
  %2627 = select i1 %2626, float %2621, float %2623
  %2628 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 13, i64 29, i64 0
  %2629 = load float* %2628, align 4
  %2630 = fcmp oge float %2627, %2629
  %2631 = fcmp uno float %2627, 0.000000e+00
  %2632 = or i1 %2630, %2631
  %2633 = select i1 %2632, float %2627, float %2629
  %2634 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 14, i64 27, i64 0
  %2635 = load float* %2634, align 4
  %2636 = fcmp oge float %2633, %2635
  %2637 = fcmp uno float %2633, 0.000000e+00
  %2638 = or i1 %2636, %2637
  %2639 = select i1 %2638, float %2633, float %2635
  %2640 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 14, i64 28, i64 0
  %2641 = load float* %2640, align 4
  %2642 = fcmp oge float %2639, %2641
  %2643 = fcmp uno float %2639, 0.000000e+00
  %2644 = or i1 %2642, %2643
  %2645 = select i1 %2644, float %2639, float %2641
  %2646 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 14, i64 29, i64 0
  %2647 = load float* %2646, align 4
  %2648 = fcmp oge float %2645, %2647
  %2649 = fcmp uno float %2645, 0.000000e+00
  %2650 = or i1 %2648, %2649
  %2651 = select i1 %2650, float %2645, float %2647
  %2652 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 4, i64 9, i64 0
  store float %2651, float* %2652, align 4
  %2653 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 15, i64 0, i64 0
  %2654 = load float* %2653, align 4
  %2655 = fcmp oge float 0xFFF0000000000000, %2654
  %2656 = select i1 %2655, float 0xFFF0000000000000, float %2654
  %2657 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 15, i64 1, i64 0
  %2658 = load float* %2657, align 4
  %2659 = fcmp oge float %2656, %2658
  %2660 = fcmp uno float %2656, 0.000000e+00
  %2661 = or i1 %2659, %2660
  %2662 = select i1 %2661, float %2656, float %2658
  %2663 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 15, i64 2, i64 0
  %2664 = load float* %2663, align 4
  %2665 = fcmp oge float %2662, %2664
  %2666 = fcmp uno float %2662, 0.000000e+00
  %2667 = or i1 %2665, %2666
  %2668 = select i1 %2667, float %2662, float %2664
  %2669 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 16, i64 0, i64 0
  %2670 = load float* %2669, align 4
  %2671 = fcmp oge float %2668, %2670
  %2672 = fcmp uno float %2668, 0.000000e+00
  %2673 = or i1 %2671, %2672
  %2674 = select i1 %2673, float %2668, float %2670
  %2675 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 16, i64 1, i64 0
  %2676 = load float* %2675, align 4
  %2677 = fcmp oge float %2674, %2676
  %2678 = fcmp uno float %2674, 0.000000e+00
  %2679 = or i1 %2677, %2678
  %2680 = select i1 %2679, float %2674, float %2676
  %2681 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 16, i64 2, i64 0
  %2682 = load float* %2681, align 4
  %2683 = fcmp oge float %2680, %2682
  %2684 = fcmp uno float %2680, 0.000000e+00
  %2685 = or i1 %2683, %2684
  %2686 = select i1 %2685, float %2680, float %2682
  %2687 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 17, i64 0, i64 0
  %2688 = load float* %2687, align 4
  %2689 = fcmp oge float %2686, %2688
  %2690 = fcmp uno float %2686, 0.000000e+00
  %2691 = or i1 %2689, %2690
  %2692 = select i1 %2691, float %2686, float %2688
  %2693 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 17, i64 1, i64 0
  %2694 = load float* %2693, align 4
  %2695 = fcmp oge float %2692, %2694
  %2696 = fcmp uno float %2692, 0.000000e+00
  %2697 = or i1 %2695, %2696
  %2698 = select i1 %2697, float %2692, float %2694
  %2699 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 17, i64 2, i64 0
  %2700 = load float* %2699, align 4
  %2701 = fcmp oge float %2698, %2700
  %2702 = fcmp uno float %2698, 0.000000e+00
  %2703 = or i1 %2701, %2702
  %2704 = select i1 %2703, float %2698, float %2700
  %2705 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 5, i64 0, i64 0
  store float %2704, float* %2705, align 4
  %2706 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 15, i64 3, i64 0
  %2707 = load float* %2706, align 4
  %2708 = fcmp oge float 0xFFF0000000000000, %2707
  %2709 = select i1 %2708, float 0xFFF0000000000000, float %2707
  %2710 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 15, i64 4, i64 0
  %2711 = load float* %2710, align 4
  %2712 = fcmp oge float %2709, %2711
  %2713 = fcmp uno float %2709, 0.000000e+00
  %2714 = or i1 %2712, %2713
  %2715 = select i1 %2714, float %2709, float %2711
  %2716 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 15, i64 5, i64 0
  %2717 = load float* %2716, align 4
  %2718 = fcmp oge float %2715, %2717
  %2719 = fcmp uno float %2715, 0.000000e+00
  %2720 = or i1 %2718, %2719
  %2721 = select i1 %2720, float %2715, float %2717
  %2722 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 16, i64 3, i64 0
  %2723 = load float* %2722, align 4
  %2724 = fcmp oge float %2721, %2723
  %2725 = fcmp uno float %2721, 0.000000e+00
  %2726 = or i1 %2724, %2725
  %2727 = select i1 %2726, float %2721, float %2723
  %2728 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 16, i64 4, i64 0
  %2729 = load float* %2728, align 4
  %2730 = fcmp oge float %2727, %2729
  %2731 = fcmp uno float %2727, 0.000000e+00
  %2732 = or i1 %2730, %2731
  %2733 = select i1 %2732, float %2727, float %2729
  %2734 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 16, i64 5, i64 0
  %2735 = load float* %2734, align 4
  %2736 = fcmp oge float %2733, %2735
  %2737 = fcmp uno float %2733, 0.000000e+00
  %2738 = or i1 %2736, %2737
  %2739 = select i1 %2738, float %2733, float %2735
  %2740 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 17, i64 3, i64 0
  %2741 = load float* %2740, align 4
  %2742 = fcmp oge float %2739, %2741
  %2743 = fcmp uno float %2739, 0.000000e+00
  %2744 = or i1 %2742, %2743
  %2745 = select i1 %2744, float %2739, float %2741
  %2746 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 17, i64 4, i64 0
  %2747 = load float* %2746, align 4
  %2748 = fcmp oge float %2745, %2747
  %2749 = fcmp uno float %2745, 0.000000e+00
  %2750 = or i1 %2748, %2749
  %2751 = select i1 %2750, float %2745, float %2747
  %2752 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 17, i64 5, i64 0
  %2753 = load float* %2752, align 4
  %2754 = fcmp oge float %2751, %2753
  %2755 = fcmp uno float %2751, 0.000000e+00
  %2756 = or i1 %2754, %2755
  %2757 = select i1 %2756, float %2751, float %2753
  %2758 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 5, i64 1, i64 0
  store float %2757, float* %2758, align 4
  %2759 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 15, i64 6, i64 0
  %2760 = load float* %2759, align 4
  %2761 = fcmp oge float 0xFFF0000000000000, %2760
  %2762 = select i1 %2761, float 0xFFF0000000000000, float %2760
  %2763 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 15, i64 7, i64 0
  %2764 = load float* %2763, align 4
  %2765 = fcmp oge float %2762, %2764
  %2766 = fcmp uno float %2762, 0.000000e+00
  %2767 = or i1 %2765, %2766
  %2768 = select i1 %2767, float %2762, float %2764
  %2769 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 15, i64 8, i64 0
  %2770 = load float* %2769, align 4
  %2771 = fcmp oge float %2768, %2770
  %2772 = fcmp uno float %2768, 0.000000e+00
  %2773 = or i1 %2771, %2772
  %2774 = select i1 %2773, float %2768, float %2770
  %2775 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 16, i64 6, i64 0
  %2776 = load float* %2775, align 4
  %2777 = fcmp oge float %2774, %2776
  %2778 = fcmp uno float %2774, 0.000000e+00
  %2779 = or i1 %2777, %2778
  %2780 = select i1 %2779, float %2774, float %2776
  %2781 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 16, i64 7, i64 0
  %2782 = load float* %2781, align 4
  %2783 = fcmp oge float %2780, %2782
  %2784 = fcmp uno float %2780, 0.000000e+00
  %2785 = or i1 %2783, %2784
  %2786 = select i1 %2785, float %2780, float %2782
  %2787 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 16, i64 8, i64 0
  %2788 = load float* %2787, align 4
  %2789 = fcmp oge float %2786, %2788
  %2790 = fcmp uno float %2786, 0.000000e+00
  %2791 = or i1 %2789, %2790
  %2792 = select i1 %2791, float %2786, float %2788
  %2793 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 17, i64 6, i64 0
  %2794 = load float* %2793, align 4
  %2795 = fcmp oge float %2792, %2794
  %2796 = fcmp uno float %2792, 0.000000e+00
  %2797 = or i1 %2795, %2796
  %2798 = select i1 %2797, float %2792, float %2794
  %2799 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 17, i64 7, i64 0
  %2800 = load float* %2799, align 4
  %2801 = fcmp oge float %2798, %2800
  %2802 = fcmp uno float %2798, 0.000000e+00
  %2803 = or i1 %2801, %2802
  %2804 = select i1 %2803, float %2798, float %2800
  %2805 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 17, i64 8, i64 0
  %2806 = load float* %2805, align 4
  %2807 = fcmp oge float %2804, %2806
  %2808 = fcmp uno float %2804, 0.000000e+00
  %2809 = or i1 %2807, %2808
  %2810 = select i1 %2809, float %2804, float %2806
  %2811 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 5, i64 2, i64 0
  store float %2810, float* %2811, align 4
  %2812 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 15, i64 9, i64 0
  %2813 = load float* %2812, align 4
  %2814 = fcmp oge float 0xFFF0000000000000, %2813
  %2815 = select i1 %2814, float 0xFFF0000000000000, float %2813
  %2816 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 15, i64 10, i64 0
  %2817 = load float* %2816, align 4
  %2818 = fcmp oge float %2815, %2817
  %2819 = fcmp uno float %2815, 0.000000e+00
  %2820 = or i1 %2818, %2819
  %2821 = select i1 %2820, float %2815, float %2817
  %2822 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 15, i64 11, i64 0
  %2823 = load float* %2822, align 4
  %2824 = fcmp oge float %2821, %2823
  %2825 = fcmp uno float %2821, 0.000000e+00
  %2826 = or i1 %2824, %2825
  %2827 = select i1 %2826, float %2821, float %2823
  %2828 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 16, i64 9, i64 0
  %2829 = load float* %2828, align 4
  %2830 = fcmp oge float %2827, %2829
  %2831 = fcmp uno float %2827, 0.000000e+00
  %2832 = or i1 %2830, %2831
  %2833 = select i1 %2832, float %2827, float %2829
  %2834 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 16, i64 10, i64 0
  %2835 = load float* %2834, align 4
  %2836 = fcmp oge float %2833, %2835
  %2837 = fcmp uno float %2833, 0.000000e+00
  %2838 = or i1 %2836, %2837
  %2839 = select i1 %2838, float %2833, float %2835
  %2840 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 16, i64 11, i64 0
  %2841 = load float* %2840, align 4
  %2842 = fcmp oge float %2839, %2841
  %2843 = fcmp uno float %2839, 0.000000e+00
  %2844 = or i1 %2842, %2843
  %2845 = select i1 %2844, float %2839, float %2841
  %2846 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 17, i64 9, i64 0
  %2847 = load float* %2846, align 4
  %2848 = fcmp oge float %2845, %2847
  %2849 = fcmp uno float %2845, 0.000000e+00
  %2850 = or i1 %2848, %2849
  %2851 = select i1 %2850, float %2845, float %2847
  %2852 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 17, i64 10, i64 0
  %2853 = load float* %2852, align 4
  %2854 = fcmp oge float %2851, %2853
  %2855 = fcmp uno float %2851, 0.000000e+00
  %2856 = or i1 %2854, %2855
  %2857 = select i1 %2856, float %2851, float %2853
  %2858 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 17, i64 11, i64 0
  %2859 = load float* %2858, align 4
  %2860 = fcmp oge float %2857, %2859
  %2861 = fcmp uno float %2857, 0.000000e+00
  %2862 = or i1 %2860, %2861
  %2863 = select i1 %2862, float %2857, float %2859
  %2864 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 5, i64 3, i64 0
  store float %2863, float* %2864, align 4
  %2865 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 15, i64 12, i64 0
  %2866 = load float* %2865, align 4
  %2867 = fcmp oge float 0xFFF0000000000000, %2866
  %2868 = select i1 %2867, float 0xFFF0000000000000, float %2866
  %2869 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 15, i64 13, i64 0
  %2870 = load float* %2869, align 4
  %2871 = fcmp oge float %2868, %2870
  %2872 = fcmp uno float %2868, 0.000000e+00
  %2873 = or i1 %2871, %2872
  %2874 = select i1 %2873, float %2868, float %2870
  %2875 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 15, i64 14, i64 0
  %2876 = load float* %2875, align 4
  %2877 = fcmp oge float %2874, %2876
  %2878 = fcmp uno float %2874, 0.000000e+00
  %2879 = or i1 %2877, %2878
  %2880 = select i1 %2879, float %2874, float %2876
  %2881 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 16, i64 12, i64 0
  %2882 = load float* %2881, align 4
  %2883 = fcmp oge float %2880, %2882
  %2884 = fcmp uno float %2880, 0.000000e+00
  %2885 = or i1 %2883, %2884
  %2886 = select i1 %2885, float %2880, float %2882
  %2887 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 16, i64 13, i64 0
  %2888 = load float* %2887, align 4
  %2889 = fcmp oge float %2886, %2888
  %2890 = fcmp uno float %2886, 0.000000e+00
  %2891 = or i1 %2889, %2890
  %2892 = select i1 %2891, float %2886, float %2888
  %2893 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 16, i64 14, i64 0
  %2894 = load float* %2893, align 4
  %2895 = fcmp oge float %2892, %2894
  %2896 = fcmp uno float %2892, 0.000000e+00
  %2897 = or i1 %2895, %2896
  %2898 = select i1 %2897, float %2892, float %2894
  %2899 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 17, i64 12, i64 0
  %2900 = load float* %2899, align 4
  %2901 = fcmp oge float %2898, %2900
  %2902 = fcmp uno float %2898, 0.000000e+00
  %2903 = or i1 %2901, %2902
  %2904 = select i1 %2903, float %2898, float %2900
  %2905 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 17, i64 13, i64 0
  %2906 = load float* %2905, align 4
  %2907 = fcmp oge float %2904, %2906
  %2908 = fcmp uno float %2904, 0.000000e+00
  %2909 = or i1 %2907, %2908
  %2910 = select i1 %2909, float %2904, float %2906
  %2911 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 17, i64 14, i64 0
  %2912 = load float* %2911, align 4
  %2913 = fcmp oge float %2910, %2912
  %2914 = fcmp uno float %2910, 0.000000e+00
  %2915 = or i1 %2913, %2914
  %2916 = select i1 %2915, float %2910, float %2912
  %2917 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 5, i64 4, i64 0
  store float %2916, float* %2917, align 4
  %2918 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 15, i64 15, i64 0
  %2919 = load float* %2918, align 4
  %2920 = fcmp oge float 0xFFF0000000000000, %2919
  %2921 = select i1 %2920, float 0xFFF0000000000000, float %2919
  %2922 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 15, i64 16, i64 0
  %2923 = load float* %2922, align 4
  %2924 = fcmp oge float %2921, %2923
  %2925 = fcmp uno float %2921, 0.000000e+00
  %2926 = or i1 %2924, %2925
  %2927 = select i1 %2926, float %2921, float %2923
  %2928 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 15, i64 17, i64 0
  %2929 = load float* %2928, align 4
  %2930 = fcmp oge float %2927, %2929
  %2931 = fcmp uno float %2927, 0.000000e+00
  %2932 = or i1 %2930, %2931
  %2933 = select i1 %2932, float %2927, float %2929
  %2934 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 16, i64 15, i64 0
  %2935 = load float* %2934, align 4
  %2936 = fcmp oge float %2933, %2935
  %2937 = fcmp uno float %2933, 0.000000e+00
  %2938 = or i1 %2936, %2937
  %2939 = select i1 %2938, float %2933, float %2935
  %2940 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 16, i64 16, i64 0
  %2941 = load float* %2940, align 4
  %2942 = fcmp oge float %2939, %2941
  %2943 = fcmp uno float %2939, 0.000000e+00
  %2944 = or i1 %2942, %2943
  %2945 = select i1 %2944, float %2939, float %2941
  %2946 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 16, i64 17, i64 0
  %2947 = load float* %2946, align 4
  %2948 = fcmp oge float %2945, %2947
  %2949 = fcmp uno float %2945, 0.000000e+00
  %2950 = or i1 %2948, %2949
  %2951 = select i1 %2950, float %2945, float %2947
  %2952 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 17, i64 15, i64 0
  %2953 = load float* %2952, align 4
  %2954 = fcmp oge float %2951, %2953
  %2955 = fcmp uno float %2951, 0.000000e+00
  %2956 = or i1 %2954, %2955
  %2957 = select i1 %2956, float %2951, float %2953
  %2958 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 17, i64 16, i64 0
  %2959 = load float* %2958, align 4
  %2960 = fcmp oge float %2957, %2959
  %2961 = fcmp uno float %2957, 0.000000e+00
  %2962 = or i1 %2960, %2961
  %2963 = select i1 %2962, float %2957, float %2959
  %2964 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 17, i64 17, i64 0
  %2965 = load float* %2964, align 4
  %2966 = fcmp oge float %2963, %2965
  %2967 = fcmp uno float %2963, 0.000000e+00
  %2968 = or i1 %2966, %2967
  %2969 = select i1 %2968, float %2963, float %2965
  %2970 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 5, i64 5, i64 0
  store float %2969, float* %2970, align 4
  %2971 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 15, i64 18, i64 0
  %2972 = load float* %2971, align 4
  %2973 = fcmp oge float 0xFFF0000000000000, %2972
  %2974 = select i1 %2973, float 0xFFF0000000000000, float %2972
  %2975 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 15, i64 19, i64 0
  %2976 = load float* %2975, align 4
  %2977 = fcmp oge float %2974, %2976
  %2978 = fcmp uno float %2974, 0.000000e+00
  %2979 = or i1 %2977, %2978
  %2980 = select i1 %2979, float %2974, float %2976
  %2981 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 15, i64 20, i64 0
  %2982 = load float* %2981, align 4
  %2983 = fcmp oge float %2980, %2982
  %2984 = fcmp uno float %2980, 0.000000e+00
  %2985 = or i1 %2983, %2984
  %2986 = select i1 %2985, float %2980, float %2982
  %2987 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 16, i64 18, i64 0
  %2988 = load float* %2987, align 4
  %2989 = fcmp oge float %2986, %2988
  %2990 = fcmp uno float %2986, 0.000000e+00
  %2991 = or i1 %2989, %2990
  %2992 = select i1 %2991, float %2986, float %2988
  %2993 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 16, i64 19, i64 0
  %2994 = load float* %2993, align 4
  %2995 = fcmp oge float %2992, %2994
  %2996 = fcmp uno float %2992, 0.000000e+00
  %2997 = or i1 %2995, %2996
  %2998 = select i1 %2997, float %2992, float %2994
  %2999 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 16, i64 20, i64 0
  %3000 = load float* %2999, align 4
  %3001 = fcmp oge float %2998, %3000
  %3002 = fcmp uno float %2998, 0.000000e+00
  %3003 = or i1 %3001, %3002
  %3004 = select i1 %3003, float %2998, float %3000
  %3005 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 17, i64 18, i64 0
  %3006 = load float* %3005, align 4
  %3007 = fcmp oge float %3004, %3006
  %3008 = fcmp uno float %3004, 0.000000e+00
  %3009 = or i1 %3007, %3008
  %3010 = select i1 %3009, float %3004, float %3006
  %3011 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 17, i64 19, i64 0
  %3012 = load float* %3011, align 4
  %3013 = fcmp oge float %3010, %3012
  %3014 = fcmp uno float %3010, 0.000000e+00
  %3015 = or i1 %3013, %3014
  %3016 = select i1 %3015, float %3010, float %3012
  %3017 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 17, i64 20, i64 0
  %3018 = load float* %3017, align 4
  %3019 = fcmp oge float %3016, %3018
  %3020 = fcmp uno float %3016, 0.000000e+00
  %3021 = or i1 %3019, %3020
  %3022 = select i1 %3021, float %3016, float %3018
  %3023 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 5, i64 6, i64 0
  store float %3022, float* %3023, align 4
  %3024 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 15, i64 21, i64 0
  %3025 = load float* %3024, align 4
  %3026 = fcmp oge float 0xFFF0000000000000, %3025
  %3027 = select i1 %3026, float 0xFFF0000000000000, float %3025
  %3028 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 15, i64 22, i64 0
  %3029 = load float* %3028, align 4
  %3030 = fcmp oge float %3027, %3029
  %3031 = fcmp uno float %3027, 0.000000e+00
  %3032 = or i1 %3030, %3031
  %3033 = select i1 %3032, float %3027, float %3029
  %3034 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 15, i64 23, i64 0
  %3035 = load float* %3034, align 4
  %3036 = fcmp oge float %3033, %3035
  %3037 = fcmp uno float %3033, 0.000000e+00
  %3038 = or i1 %3036, %3037
  %3039 = select i1 %3038, float %3033, float %3035
  %3040 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 16, i64 21, i64 0
  %3041 = load float* %3040, align 4
  %3042 = fcmp oge float %3039, %3041
  %3043 = fcmp uno float %3039, 0.000000e+00
  %3044 = or i1 %3042, %3043
  %3045 = select i1 %3044, float %3039, float %3041
  %3046 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 16, i64 22, i64 0
  %3047 = load float* %3046, align 4
  %3048 = fcmp oge float %3045, %3047
  %3049 = fcmp uno float %3045, 0.000000e+00
  %3050 = or i1 %3048, %3049
  %3051 = select i1 %3050, float %3045, float %3047
  %3052 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 16, i64 23, i64 0
  %3053 = load float* %3052, align 4
  %3054 = fcmp oge float %3051, %3053
  %3055 = fcmp uno float %3051, 0.000000e+00
  %3056 = or i1 %3054, %3055
  %3057 = select i1 %3056, float %3051, float %3053
  %3058 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 17, i64 21, i64 0
  %3059 = load float* %3058, align 4
  %3060 = fcmp oge float %3057, %3059
  %3061 = fcmp uno float %3057, 0.000000e+00
  %3062 = or i1 %3060, %3061
  %3063 = select i1 %3062, float %3057, float %3059
  %3064 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 17, i64 22, i64 0
  %3065 = load float* %3064, align 4
  %3066 = fcmp oge float %3063, %3065
  %3067 = fcmp uno float %3063, 0.000000e+00
  %3068 = or i1 %3066, %3067
  %3069 = select i1 %3068, float %3063, float %3065
  %3070 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 17, i64 23, i64 0
  %3071 = load float* %3070, align 4
  %3072 = fcmp oge float %3069, %3071
  %3073 = fcmp uno float %3069, 0.000000e+00
  %3074 = or i1 %3072, %3073
  %3075 = select i1 %3074, float %3069, float %3071
  %3076 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 5, i64 7, i64 0
  store float %3075, float* %3076, align 4
  %3077 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 15, i64 24, i64 0
  %3078 = load float* %3077, align 4
  %3079 = fcmp oge float 0xFFF0000000000000, %3078
  %3080 = select i1 %3079, float 0xFFF0000000000000, float %3078
  %3081 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 15, i64 25, i64 0
  %3082 = load float* %3081, align 4
  %3083 = fcmp oge float %3080, %3082
  %3084 = fcmp uno float %3080, 0.000000e+00
  %3085 = or i1 %3083, %3084
  %3086 = select i1 %3085, float %3080, float %3082
  %3087 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 15, i64 26, i64 0
  %3088 = load float* %3087, align 4
  %3089 = fcmp oge float %3086, %3088
  %3090 = fcmp uno float %3086, 0.000000e+00
  %3091 = or i1 %3089, %3090
  %3092 = select i1 %3091, float %3086, float %3088
  %3093 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 16, i64 24, i64 0
  %3094 = load float* %3093, align 4
  %3095 = fcmp oge float %3092, %3094
  %3096 = fcmp uno float %3092, 0.000000e+00
  %3097 = or i1 %3095, %3096
  %3098 = select i1 %3097, float %3092, float %3094
  %3099 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 16, i64 25, i64 0
  %3100 = load float* %3099, align 4
  %3101 = fcmp oge float %3098, %3100
  %3102 = fcmp uno float %3098, 0.000000e+00
  %3103 = or i1 %3101, %3102
  %3104 = select i1 %3103, float %3098, float %3100
  %3105 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 16, i64 26, i64 0
  %3106 = load float* %3105, align 4
  %3107 = fcmp oge float %3104, %3106
  %3108 = fcmp uno float %3104, 0.000000e+00
  %3109 = or i1 %3107, %3108
  %3110 = select i1 %3109, float %3104, float %3106
  %3111 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 17, i64 24, i64 0
  %3112 = load float* %3111, align 4
  %3113 = fcmp oge float %3110, %3112
  %3114 = fcmp uno float %3110, 0.000000e+00
  %3115 = or i1 %3113, %3114
  %3116 = select i1 %3115, float %3110, float %3112
  %3117 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 17, i64 25, i64 0
  %3118 = load float* %3117, align 4
  %3119 = fcmp oge float %3116, %3118
  %3120 = fcmp uno float %3116, 0.000000e+00
  %3121 = or i1 %3119, %3120
  %3122 = select i1 %3121, float %3116, float %3118
  %3123 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 17, i64 26, i64 0
  %3124 = load float* %3123, align 4
  %3125 = fcmp oge float %3122, %3124
  %3126 = fcmp uno float %3122, 0.000000e+00
  %3127 = or i1 %3125, %3126
  %3128 = select i1 %3127, float %3122, float %3124
  %3129 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 5, i64 8, i64 0
  store float %3128, float* %3129, align 4
  %3130 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 15, i64 27, i64 0
  %3131 = load float* %3130, align 4
  %3132 = fcmp oge float 0xFFF0000000000000, %3131
  %3133 = select i1 %3132, float 0xFFF0000000000000, float %3131
  %3134 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 15, i64 28, i64 0
  %3135 = load float* %3134, align 4
  %3136 = fcmp oge float %3133, %3135
  %3137 = fcmp uno float %3133, 0.000000e+00
  %3138 = or i1 %3136, %3137
  %3139 = select i1 %3138, float %3133, float %3135
  %3140 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 15, i64 29, i64 0
  %3141 = load float* %3140, align 4
  %3142 = fcmp oge float %3139, %3141
  %3143 = fcmp uno float %3139, 0.000000e+00
  %3144 = or i1 %3142, %3143
  %3145 = select i1 %3144, float %3139, float %3141
  %3146 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 16, i64 27, i64 0
  %3147 = load float* %3146, align 4
  %3148 = fcmp oge float %3145, %3147
  %3149 = fcmp uno float %3145, 0.000000e+00
  %3150 = or i1 %3148, %3149
  %3151 = select i1 %3150, float %3145, float %3147
  %3152 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 16, i64 28, i64 0
  %3153 = load float* %3152, align 4
  %3154 = fcmp oge float %3151, %3153
  %3155 = fcmp uno float %3151, 0.000000e+00
  %3156 = or i1 %3154, %3155
  %3157 = select i1 %3156, float %3151, float %3153
  %3158 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 16, i64 29, i64 0
  %3159 = load float* %3158, align 4
  %3160 = fcmp oge float %3157, %3159
  %3161 = fcmp uno float %3157, 0.000000e+00
  %3162 = or i1 %3160, %3161
  %3163 = select i1 %3162, float %3157, float %3159
  %3164 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 17, i64 27, i64 0
  %3165 = load float* %3164, align 4
  %3166 = fcmp oge float %3163, %3165
  %3167 = fcmp uno float %3163, 0.000000e+00
  %3168 = or i1 %3166, %3167
  %3169 = select i1 %3168, float %3163, float %3165
  %3170 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 17, i64 28, i64 0
  %3171 = load float* %3170, align 4
  %3172 = fcmp oge float %3169, %3171
  %3173 = fcmp uno float %3169, 0.000000e+00
  %3174 = or i1 %3172, %3173
  %3175 = select i1 %3174, float %3169, float %3171
  %3176 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 17, i64 29, i64 0
  %3177 = load float* %3176, align 4
  %3178 = fcmp oge float %3175, %3177
  %3179 = fcmp uno float %3175, 0.000000e+00
  %3180 = or i1 %3178, %3179
  %3181 = select i1 %3180, float %3175, float %3177
  %3182 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 5, i64 9, i64 0
  store float %3181, float* %3182, align 4
  %3183 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 18, i64 0, i64 0
  %3184 = load float* %3183, align 4
  %3185 = fcmp oge float 0xFFF0000000000000, %3184
  %3186 = select i1 %3185, float 0xFFF0000000000000, float %3184
  %3187 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 18, i64 1, i64 0
  %3188 = load float* %3187, align 4
  %3189 = fcmp oge float %3186, %3188
  %3190 = fcmp uno float %3186, 0.000000e+00
  %3191 = or i1 %3189, %3190
  %3192 = select i1 %3191, float %3186, float %3188
  %3193 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 18, i64 2, i64 0
  %3194 = load float* %3193, align 4
  %3195 = fcmp oge float %3192, %3194
  %3196 = fcmp uno float %3192, 0.000000e+00
  %3197 = or i1 %3195, %3196
  %3198 = select i1 %3197, float %3192, float %3194
  %3199 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 19, i64 0, i64 0
  %3200 = load float* %3199, align 4
  %3201 = fcmp oge float %3198, %3200
  %3202 = fcmp uno float %3198, 0.000000e+00
  %3203 = or i1 %3201, %3202
  %3204 = select i1 %3203, float %3198, float %3200
  %3205 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 19, i64 1, i64 0
  %3206 = load float* %3205, align 4
  %3207 = fcmp oge float %3204, %3206
  %3208 = fcmp uno float %3204, 0.000000e+00
  %3209 = or i1 %3207, %3208
  %3210 = select i1 %3209, float %3204, float %3206
  %3211 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 19, i64 2, i64 0
  %3212 = load float* %3211, align 4
  %3213 = fcmp oge float %3210, %3212
  %3214 = fcmp uno float %3210, 0.000000e+00
  %3215 = or i1 %3213, %3214
  %3216 = select i1 %3215, float %3210, float %3212
  %3217 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 20, i64 0, i64 0
  %3218 = load float* %3217, align 4
  %3219 = fcmp oge float %3216, %3218
  %3220 = fcmp uno float %3216, 0.000000e+00
  %3221 = or i1 %3219, %3220
  %3222 = select i1 %3221, float %3216, float %3218
  %3223 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 20, i64 1, i64 0
  %3224 = load float* %3223, align 4
  %3225 = fcmp oge float %3222, %3224
  %3226 = fcmp uno float %3222, 0.000000e+00
  %3227 = or i1 %3225, %3226
  %3228 = select i1 %3227, float %3222, float %3224
  %3229 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 20, i64 2, i64 0
  %3230 = load float* %3229, align 4
  %3231 = fcmp oge float %3228, %3230
  %3232 = fcmp uno float %3228, 0.000000e+00
  %3233 = or i1 %3231, %3232
  %3234 = select i1 %3233, float %3228, float %3230
  %3235 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 6, i64 0, i64 0
  store float %3234, float* %3235, align 4
  %3236 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 18, i64 3, i64 0
  %3237 = load float* %3236, align 4
  %3238 = fcmp oge float 0xFFF0000000000000, %3237
  %3239 = select i1 %3238, float 0xFFF0000000000000, float %3237
  %3240 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 18, i64 4, i64 0
  %3241 = load float* %3240, align 4
  %3242 = fcmp oge float %3239, %3241
  %3243 = fcmp uno float %3239, 0.000000e+00
  %3244 = or i1 %3242, %3243
  %3245 = select i1 %3244, float %3239, float %3241
  %3246 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 18, i64 5, i64 0
  %3247 = load float* %3246, align 4
  %3248 = fcmp oge float %3245, %3247
  %3249 = fcmp uno float %3245, 0.000000e+00
  %3250 = or i1 %3248, %3249
  %3251 = select i1 %3250, float %3245, float %3247
  %3252 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 19, i64 3, i64 0
  %3253 = load float* %3252, align 4
  %3254 = fcmp oge float %3251, %3253
  %3255 = fcmp uno float %3251, 0.000000e+00
  %3256 = or i1 %3254, %3255
  %3257 = select i1 %3256, float %3251, float %3253
  %3258 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 19, i64 4, i64 0
  %3259 = load float* %3258, align 4
  %3260 = fcmp oge float %3257, %3259
  %3261 = fcmp uno float %3257, 0.000000e+00
  %3262 = or i1 %3260, %3261
  %3263 = select i1 %3262, float %3257, float %3259
  %3264 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 19, i64 5, i64 0
  %3265 = load float* %3264, align 4
  %3266 = fcmp oge float %3263, %3265
  %3267 = fcmp uno float %3263, 0.000000e+00
  %3268 = or i1 %3266, %3267
  %3269 = select i1 %3268, float %3263, float %3265
  %3270 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 20, i64 3, i64 0
  %3271 = load float* %3270, align 4
  %3272 = fcmp oge float %3269, %3271
  %3273 = fcmp uno float %3269, 0.000000e+00
  %3274 = or i1 %3272, %3273
  %3275 = select i1 %3274, float %3269, float %3271
  %3276 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 20, i64 4, i64 0
  %3277 = load float* %3276, align 4
  %3278 = fcmp oge float %3275, %3277
  %3279 = fcmp uno float %3275, 0.000000e+00
  %3280 = or i1 %3278, %3279
  %3281 = select i1 %3280, float %3275, float %3277
  %3282 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 20, i64 5, i64 0
  %3283 = load float* %3282, align 4
  %3284 = fcmp oge float %3281, %3283
  %3285 = fcmp uno float %3281, 0.000000e+00
  %3286 = or i1 %3284, %3285
  %3287 = select i1 %3286, float %3281, float %3283
  %3288 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 6, i64 1, i64 0
  store float %3287, float* %3288, align 4
  %3289 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 18, i64 6, i64 0
  %3290 = load float* %3289, align 4
  %3291 = fcmp oge float 0xFFF0000000000000, %3290
  %3292 = select i1 %3291, float 0xFFF0000000000000, float %3290
  %3293 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 18, i64 7, i64 0
  %3294 = load float* %3293, align 4
  %3295 = fcmp oge float %3292, %3294
  %3296 = fcmp uno float %3292, 0.000000e+00
  %3297 = or i1 %3295, %3296
  %3298 = select i1 %3297, float %3292, float %3294
  %3299 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 18, i64 8, i64 0
  %3300 = load float* %3299, align 4
  %3301 = fcmp oge float %3298, %3300
  %3302 = fcmp uno float %3298, 0.000000e+00
  %3303 = or i1 %3301, %3302
  %3304 = select i1 %3303, float %3298, float %3300
  %3305 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 19, i64 6, i64 0
  %3306 = load float* %3305, align 4
  %3307 = fcmp oge float %3304, %3306
  %3308 = fcmp uno float %3304, 0.000000e+00
  %3309 = or i1 %3307, %3308
  %3310 = select i1 %3309, float %3304, float %3306
  %3311 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 19, i64 7, i64 0
  %3312 = load float* %3311, align 4
  %3313 = fcmp oge float %3310, %3312
  %3314 = fcmp uno float %3310, 0.000000e+00
  %3315 = or i1 %3313, %3314
  %3316 = select i1 %3315, float %3310, float %3312
  %3317 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 19, i64 8, i64 0
  %3318 = load float* %3317, align 4
  %3319 = fcmp oge float %3316, %3318
  %3320 = fcmp uno float %3316, 0.000000e+00
  %3321 = or i1 %3319, %3320
  %3322 = select i1 %3321, float %3316, float %3318
  %3323 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 20, i64 6, i64 0
  %3324 = load float* %3323, align 4
  %3325 = fcmp oge float %3322, %3324
  %3326 = fcmp uno float %3322, 0.000000e+00
  %3327 = or i1 %3325, %3326
  %3328 = select i1 %3327, float %3322, float %3324
  %3329 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 20, i64 7, i64 0
  %3330 = load float* %3329, align 4
  %3331 = fcmp oge float %3328, %3330
  %3332 = fcmp uno float %3328, 0.000000e+00
  %3333 = or i1 %3331, %3332
  %3334 = select i1 %3333, float %3328, float %3330
  %3335 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 20, i64 8, i64 0
  %3336 = load float* %3335, align 4
  %3337 = fcmp oge float %3334, %3336
  %3338 = fcmp uno float %3334, 0.000000e+00
  %3339 = or i1 %3337, %3338
  %3340 = select i1 %3339, float %3334, float %3336
  %3341 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 6, i64 2, i64 0
  store float %3340, float* %3341, align 4
  %3342 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 18, i64 9, i64 0
  %3343 = load float* %3342, align 4
  %3344 = fcmp oge float 0xFFF0000000000000, %3343
  %3345 = select i1 %3344, float 0xFFF0000000000000, float %3343
  %3346 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 18, i64 10, i64 0
  %3347 = load float* %3346, align 4
  %3348 = fcmp oge float %3345, %3347
  %3349 = fcmp uno float %3345, 0.000000e+00
  %3350 = or i1 %3348, %3349
  %3351 = select i1 %3350, float %3345, float %3347
  %3352 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 18, i64 11, i64 0
  %3353 = load float* %3352, align 4
  %3354 = fcmp oge float %3351, %3353
  %3355 = fcmp uno float %3351, 0.000000e+00
  %3356 = or i1 %3354, %3355
  %3357 = select i1 %3356, float %3351, float %3353
  %3358 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 19, i64 9, i64 0
  %3359 = load float* %3358, align 4
  %3360 = fcmp oge float %3357, %3359
  %3361 = fcmp uno float %3357, 0.000000e+00
  %3362 = or i1 %3360, %3361
  %3363 = select i1 %3362, float %3357, float %3359
  %3364 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 19, i64 10, i64 0
  %3365 = load float* %3364, align 4
  %3366 = fcmp oge float %3363, %3365
  %3367 = fcmp uno float %3363, 0.000000e+00
  %3368 = or i1 %3366, %3367
  %3369 = select i1 %3368, float %3363, float %3365
  %3370 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 19, i64 11, i64 0
  %3371 = load float* %3370, align 4
  %3372 = fcmp oge float %3369, %3371
  %3373 = fcmp uno float %3369, 0.000000e+00
  %3374 = or i1 %3372, %3373
  %3375 = select i1 %3374, float %3369, float %3371
  %3376 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 20, i64 9, i64 0
  %3377 = load float* %3376, align 4
  %3378 = fcmp oge float %3375, %3377
  %3379 = fcmp uno float %3375, 0.000000e+00
  %3380 = or i1 %3378, %3379
  %3381 = select i1 %3380, float %3375, float %3377
  %3382 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 20, i64 10, i64 0
  %3383 = load float* %3382, align 4
  %3384 = fcmp oge float %3381, %3383
  %3385 = fcmp uno float %3381, 0.000000e+00
  %3386 = or i1 %3384, %3385
  %3387 = select i1 %3386, float %3381, float %3383
  %3388 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 20, i64 11, i64 0
  %3389 = load float* %3388, align 4
  %3390 = fcmp oge float %3387, %3389
  %3391 = fcmp uno float %3387, 0.000000e+00
  %3392 = or i1 %3390, %3391
  %3393 = select i1 %3392, float %3387, float %3389
  %3394 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 6, i64 3, i64 0
  store float %3393, float* %3394, align 4
  %3395 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 18, i64 12, i64 0
  %3396 = load float* %3395, align 4
  %3397 = fcmp oge float 0xFFF0000000000000, %3396
  %3398 = select i1 %3397, float 0xFFF0000000000000, float %3396
  %3399 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 18, i64 13, i64 0
  %3400 = load float* %3399, align 4
  %3401 = fcmp oge float %3398, %3400
  %3402 = fcmp uno float %3398, 0.000000e+00
  %3403 = or i1 %3401, %3402
  %3404 = select i1 %3403, float %3398, float %3400
  %3405 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 18, i64 14, i64 0
  %3406 = load float* %3405, align 4
  %3407 = fcmp oge float %3404, %3406
  %3408 = fcmp uno float %3404, 0.000000e+00
  %3409 = or i1 %3407, %3408
  %3410 = select i1 %3409, float %3404, float %3406
  %3411 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 19, i64 12, i64 0
  %3412 = load float* %3411, align 4
  %3413 = fcmp oge float %3410, %3412
  %3414 = fcmp uno float %3410, 0.000000e+00
  %3415 = or i1 %3413, %3414
  %3416 = select i1 %3415, float %3410, float %3412
  %3417 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 19, i64 13, i64 0
  %3418 = load float* %3417, align 4
  %3419 = fcmp oge float %3416, %3418
  %3420 = fcmp uno float %3416, 0.000000e+00
  %3421 = or i1 %3419, %3420
  %3422 = select i1 %3421, float %3416, float %3418
  %3423 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 19, i64 14, i64 0
  %3424 = load float* %3423, align 4
  %3425 = fcmp oge float %3422, %3424
  %3426 = fcmp uno float %3422, 0.000000e+00
  %3427 = or i1 %3425, %3426
  %3428 = select i1 %3427, float %3422, float %3424
  %3429 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 20, i64 12, i64 0
  %3430 = load float* %3429, align 4
  %3431 = fcmp oge float %3428, %3430
  %3432 = fcmp uno float %3428, 0.000000e+00
  %3433 = or i1 %3431, %3432
  %3434 = select i1 %3433, float %3428, float %3430
  %3435 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 20, i64 13, i64 0
  %3436 = load float* %3435, align 4
  %3437 = fcmp oge float %3434, %3436
  %3438 = fcmp uno float %3434, 0.000000e+00
  %3439 = or i1 %3437, %3438
  %3440 = select i1 %3439, float %3434, float %3436
  %3441 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 20, i64 14, i64 0
  %3442 = load float* %3441, align 4
  %3443 = fcmp oge float %3440, %3442
  %3444 = fcmp uno float %3440, 0.000000e+00
  %3445 = or i1 %3443, %3444
  %3446 = select i1 %3445, float %3440, float %3442
  %3447 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 6, i64 4, i64 0
  store float %3446, float* %3447, align 4
  %3448 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 18, i64 15, i64 0
  %3449 = load float* %3448, align 4
  %3450 = fcmp oge float 0xFFF0000000000000, %3449
  %3451 = select i1 %3450, float 0xFFF0000000000000, float %3449
  %3452 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 18, i64 16, i64 0
  %3453 = load float* %3452, align 4
  %3454 = fcmp oge float %3451, %3453
  %3455 = fcmp uno float %3451, 0.000000e+00
  %3456 = or i1 %3454, %3455
  %3457 = select i1 %3456, float %3451, float %3453
  %3458 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 18, i64 17, i64 0
  %3459 = load float* %3458, align 4
  %3460 = fcmp oge float %3457, %3459
  %3461 = fcmp uno float %3457, 0.000000e+00
  %3462 = or i1 %3460, %3461
  %3463 = select i1 %3462, float %3457, float %3459
  %3464 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 19, i64 15, i64 0
  %3465 = load float* %3464, align 4
  %3466 = fcmp oge float %3463, %3465
  %3467 = fcmp uno float %3463, 0.000000e+00
  %3468 = or i1 %3466, %3467
  %3469 = select i1 %3468, float %3463, float %3465
  %3470 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 19, i64 16, i64 0
  %3471 = load float* %3470, align 4
  %3472 = fcmp oge float %3469, %3471
  %3473 = fcmp uno float %3469, 0.000000e+00
  %3474 = or i1 %3472, %3473
  %3475 = select i1 %3474, float %3469, float %3471
  %3476 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 19, i64 17, i64 0
  %3477 = load float* %3476, align 4
  %3478 = fcmp oge float %3475, %3477
  %3479 = fcmp uno float %3475, 0.000000e+00
  %3480 = or i1 %3478, %3479
  %3481 = select i1 %3480, float %3475, float %3477
  %3482 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 20, i64 15, i64 0
  %3483 = load float* %3482, align 4
  %3484 = fcmp oge float %3481, %3483
  %3485 = fcmp uno float %3481, 0.000000e+00
  %3486 = or i1 %3484, %3485
  %3487 = select i1 %3486, float %3481, float %3483
  %3488 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 20, i64 16, i64 0
  %3489 = load float* %3488, align 4
  %3490 = fcmp oge float %3487, %3489
  %3491 = fcmp uno float %3487, 0.000000e+00
  %3492 = or i1 %3490, %3491
  %3493 = select i1 %3492, float %3487, float %3489
  %3494 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 20, i64 17, i64 0
  %3495 = load float* %3494, align 4
  %3496 = fcmp oge float %3493, %3495
  %3497 = fcmp uno float %3493, 0.000000e+00
  %3498 = or i1 %3496, %3497
  %3499 = select i1 %3498, float %3493, float %3495
  %3500 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 6, i64 5, i64 0
  store float %3499, float* %3500, align 4
  %3501 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 18, i64 18, i64 0
  %3502 = load float* %3501, align 4
  %3503 = fcmp oge float 0xFFF0000000000000, %3502
  %3504 = select i1 %3503, float 0xFFF0000000000000, float %3502
  %3505 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 18, i64 19, i64 0
  %3506 = load float* %3505, align 4
  %3507 = fcmp oge float %3504, %3506
  %3508 = fcmp uno float %3504, 0.000000e+00
  %3509 = or i1 %3507, %3508
  %3510 = select i1 %3509, float %3504, float %3506
  %3511 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 18, i64 20, i64 0
  %3512 = load float* %3511, align 4
  %3513 = fcmp oge float %3510, %3512
  %3514 = fcmp uno float %3510, 0.000000e+00
  %3515 = or i1 %3513, %3514
  %3516 = select i1 %3515, float %3510, float %3512
  %3517 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 19, i64 18, i64 0
  %3518 = load float* %3517, align 4
  %3519 = fcmp oge float %3516, %3518
  %3520 = fcmp uno float %3516, 0.000000e+00
  %3521 = or i1 %3519, %3520
  %3522 = select i1 %3521, float %3516, float %3518
  %3523 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 19, i64 19, i64 0
  %3524 = load float* %3523, align 4
  %3525 = fcmp oge float %3522, %3524
  %3526 = fcmp uno float %3522, 0.000000e+00
  %3527 = or i1 %3525, %3526
  %3528 = select i1 %3527, float %3522, float %3524
  %3529 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 19, i64 20, i64 0
  %3530 = load float* %3529, align 4
  %3531 = fcmp oge float %3528, %3530
  %3532 = fcmp uno float %3528, 0.000000e+00
  %3533 = or i1 %3531, %3532
  %3534 = select i1 %3533, float %3528, float %3530
  %3535 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 20, i64 18, i64 0
  %3536 = load float* %3535, align 4
  %3537 = fcmp oge float %3534, %3536
  %3538 = fcmp uno float %3534, 0.000000e+00
  %3539 = or i1 %3537, %3538
  %3540 = select i1 %3539, float %3534, float %3536
  %3541 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 20, i64 19, i64 0
  %3542 = load float* %3541, align 4
  %3543 = fcmp oge float %3540, %3542
  %3544 = fcmp uno float %3540, 0.000000e+00
  %3545 = or i1 %3543, %3544
  %3546 = select i1 %3545, float %3540, float %3542
  %3547 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 20, i64 20, i64 0
  %3548 = load float* %3547, align 4
  %3549 = fcmp oge float %3546, %3548
  %3550 = fcmp uno float %3546, 0.000000e+00
  %3551 = or i1 %3549, %3550
  %3552 = select i1 %3551, float %3546, float %3548
  %3553 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 6, i64 6, i64 0
  store float %3552, float* %3553, align 4
  %3554 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 18, i64 21, i64 0
  %3555 = load float* %3554, align 4
  %3556 = fcmp oge float 0xFFF0000000000000, %3555
  %3557 = select i1 %3556, float 0xFFF0000000000000, float %3555
  %3558 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 18, i64 22, i64 0
  %3559 = load float* %3558, align 4
  %3560 = fcmp oge float %3557, %3559
  %3561 = fcmp uno float %3557, 0.000000e+00
  %3562 = or i1 %3560, %3561
  %3563 = select i1 %3562, float %3557, float %3559
  %3564 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 18, i64 23, i64 0
  %3565 = load float* %3564, align 4
  %3566 = fcmp oge float %3563, %3565
  %3567 = fcmp uno float %3563, 0.000000e+00
  %3568 = or i1 %3566, %3567
  %3569 = select i1 %3568, float %3563, float %3565
  %3570 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 19, i64 21, i64 0
  %3571 = load float* %3570, align 4
  %3572 = fcmp oge float %3569, %3571
  %3573 = fcmp uno float %3569, 0.000000e+00
  %3574 = or i1 %3572, %3573
  %3575 = select i1 %3574, float %3569, float %3571
  %3576 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 19, i64 22, i64 0
  %3577 = load float* %3576, align 4
  %3578 = fcmp oge float %3575, %3577
  %3579 = fcmp uno float %3575, 0.000000e+00
  %3580 = or i1 %3578, %3579
  %3581 = select i1 %3580, float %3575, float %3577
  %3582 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 19, i64 23, i64 0
  %3583 = load float* %3582, align 4
  %3584 = fcmp oge float %3581, %3583
  %3585 = fcmp uno float %3581, 0.000000e+00
  %3586 = or i1 %3584, %3585
  %3587 = select i1 %3586, float %3581, float %3583
  %3588 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 20, i64 21, i64 0
  %3589 = load float* %3588, align 4
  %3590 = fcmp oge float %3587, %3589
  %3591 = fcmp uno float %3587, 0.000000e+00
  %3592 = or i1 %3590, %3591
  %3593 = select i1 %3592, float %3587, float %3589
  %3594 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 20, i64 22, i64 0
  %3595 = load float* %3594, align 4
  %3596 = fcmp oge float %3593, %3595
  %3597 = fcmp uno float %3593, 0.000000e+00
  %3598 = or i1 %3596, %3597
  %3599 = select i1 %3598, float %3593, float %3595
  %3600 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 20, i64 23, i64 0
  %3601 = load float* %3600, align 4
  %3602 = fcmp oge float %3599, %3601
  %3603 = fcmp uno float %3599, 0.000000e+00
  %3604 = or i1 %3602, %3603
  %3605 = select i1 %3604, float %3599, float %3601
  %3606 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 6, i64 7, i64 0
  store float %3605, float* %3606, align 4
  %3607 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 18, i64 24, i64 0
  %3608 = load float* %3607, align 4
  %3609 = fcmp oge float 0xFFF0000000000000, %3608
  %3610 = select i1 %3609, float 0xFFF0000000000000, float %3608
  %3611 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 18, i64 25, i64 0
  %3612 = load float* %3611, align 4
  %3613 = fcmp oge float %3610, %3612
  %3614 = fcmp uno float %3610, 0.000000e+00
  %3615 = or i1 %3613, %3614
  %3616 = select i1 %3615, float %3610, float %3612
  %3617 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 18, i64 26, i64 0
  %3618 = load float* %3617, align 4
  %3619 = fcmp oge float %3616, %3618
  %3620 = fcmp uno float %3616, 0.000000e+00
  %3621 = or i1 %3619, %3620
  %3622 = select i1 %3621, float %3616, float %3618
  %3623 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 19, i64 24, i64 0
  %3624 = load float* %3623, align 4
  %3625 = fcmp oge float %3622, %3624
  %3626 = fcmp uno float %3622, 0.000000e+00
  %3627 = or i1 %3625, %3626
  %3628 = select i1 %3627, float %3622, float %3624
  %3629 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 19, i64 25, i64 0
  %3630 = load float* %3629, align 4
  %3631 = fcmp oge float %3628, %3630
  %3632 = fcmp uno float %3628, 0.000000e+00
  %3633 = or i1 %3631, %3632
  %3634 = select i1 %3633, float %3628, float %3630
  %3635 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 19, i64 26, i64 0
  %3636 = load float* %3635, align 4
  %3637 = fcmp oge float %3634, %3636
  %3638 = fcmp uno float %3634, 0.000000e+00
  %3639 = or i1 %3637, %3638
  %3640 = select i1 %3639, float %3634, float %3636
  %3641 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 20, i64 24, i64 0
  %3642 = load float* %3641, align 4
  %3643 = fcmp oge float %3640, %3642
  %3644 = fcmp uno float %3640, 0.000000e+00
  %3645 = or i1 %3643, %3644
  %3646 = select i1 %3645, float %3640, float %3642
  %3647 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 20, i64 25, i64 0
  %3648 = load float* %3647, align 4
  %3649 = fcmp oge float %3646, %3648
  %3650 = fcmp uno float %3646, 0.000000e+00
  %3651 = or i1 %3649, %3650
  %3652 = select i1 %3651, float %3646, float %3648
  %3653 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 20, i64 26, i64 0
  %3654 = load float* %3653, align 4
  %3655 = fcmp oge float %3652, %3654
  %3656 = fcmp uno float %3652, 0.000000e+00
  %3657 = or i1 %3655, %3656
  %3658 = select i1 %3657, float %3652, float %3654
  %3659 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 6, i64 8, i64 0
  store float %3658, float* %3659, align 4
  %3660 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 18, i64 27, i64 0
  %3661 = load float* %3660, align 4
  %3662 = fcmp oge float 0xFFF0000000000000, %3661
  %3663 = select i1 %3662, float 0xFFF0000000000000, float %3661
  %3664 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 18, i64 28, i64 0
  %3665 = load float* %3664, align 4
  %3666 = fcmp oge float %3663, %3665
  %3667 = fcmp uno float %3663, 0.000000e+00
  %3668 = or i1 %3666, %3667
  %3669 = select i1 %3668, float %3663, float %3665
  %3670 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 18, i64 29, i64 0
  %3671 = load float* %3670, align 4
  %3672 = fcmp oge float %3669, %3671
  %3673 = fcmp uno float %3669, 0.000000e+00
  %3674 = or i1 %3672, %3673
  %3675 = select i1 %3674, float %3669, float %3671
  %3676 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 19, i64 27, i64 0
  %3677 = load float* %3676, align 4
  %3678 = fcmp oge float %3675, %3677
  %3679 = fcmp uno float %3675, 0.000000e+00
  %3680 = or i1 %3678, %3679
  %3681 = select i1 %3680, float %3675, float %3677
  %3682 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 19, i64 28, i64 0
  %3683 = load float* %3682, align 4
  %3684 = fcmp oge float %3681, %3683
  %3685 = fcmp uno float %3681, 0.000000e+00
  %3686 = or i1 %3684, %3685
  %3687 = select i1 %3686, float %3681, float %3683
  %3688 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 19, i64 29, i64 0
  %3689 = load float* %3688, align 4
  %3690 = fcmp oge float %3687, %3689
  %3691 = fcmp uno float %3687, 0.000000e+00
  %3692 = or i1 %3690, %3691
  %3693 = select i1 %3692, float %3687, float %3689
  %3694 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 20, i64 27, i64 0
  %3695 = load float* %3694, align 4
  %3696 = fcmp oge float %3693, %3695
  %3697 = fcmp uno float %3693, 0.000000e+00
  %3698 = or i1 %3696, %3697
  %3699 = select i1 %3698, float %3693, float %3695
  %3700 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 20, i64 28, i64 0
  %3701 = load float* %3700, align 4
  %3702 = fcmp oge float %3699, %3701
  %3703 = fcmp uno float %3699, 0.000000e+00
  %3704 = or i1 %3702, %3703
  %3705 = select i1 %3704, float %3699, float %3701
  %3706 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 20, i64 29, i64 0
  %3707 = load float* %3706, align 4
  %3708 = fcmp oge float %3705, %3707
  %3709 = fcmp uno float %3705, 0.000000e+00
  %3710 = or i1 %3708, %3709
  %3711 = select i1 %3710, float %3705, float %3707
  %3712 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 6, i64 9, i64 0
  store float %3711, float* %3712, align 4
  %3713 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 21, i64 0, i64 0
  %3714 = load float* %3713, align 4
  %3715 = fcmp oge float 0xFFF0000000000000, %3714
  %3716 = select i1 %3715, float 0xFFF0000000000000, float %3714
  %3717 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 21, i64 1, i64 0
  %3718 = load float* %3717, align 4
  %3719 = fcmp oge float %3716, %3718
  %3720 = fcmp uno float %3716, 0.000000e+00
  %3721 = or i1 %3719, %3720
  %3722 = select i1 %3721, float %3716, float %3718
  %3723 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 21, i64 2, i64 0
  %3724 = load float* %3723, align 4
  %3725 = fcmp oge float %3722, %3724
  %3726 = fcmp uno float %3722, 0.000000e+00
  %3727 = or i1 %3725, %3726
  %3728 = select i1 %3727, float %3722, float %3724
  %3729 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 22, i64 0, i64 0
  %3730 = load float* %3729, align 4
  %3731 = fcmp oge float %3728, %3730
  %3732 = fcmp uno float %3728, 0.000000e+00
  %3733 = or i1 %3731, %3732
  %3734 = select i1 %3733, float %3728, float %3730
  %3735 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 22, i64 1, i64 0
  %3736 = load float* %3735, align 4
  %3737 = fcmp oge float %3734, %3736
  %3738 = fcmp uno float %3734, 0.000000e+00
  %3739 = or i1 %3737, %3738
  %3740 = select i1 %3739, float %3734, float %3736
  %3741 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 22, i64 2, i64 0
  %3742 = load float* %3741, align 4
  %3743 = fcmp oge float %3740, %3742
  %3744 = fcmp uno float %3740, 0.000000e+00
  %3745 = or i1 %3743, %3744
  %3746 = select i1 %3745, float %3740, float %3742
  %3747 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 23, i64 0, i64 0
  %3748 = load float* %3747, align 4
  %3749 = fcmp oge float %3746, %3748
  %3750 = fcmp uno float %3746, 0.000000e+00
  %3751 = or i1 %3749, %3750
  %3752 = select i1 %3751, float %3746, float %3748
  %3753 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 23, i64 1, i64 0
  %3754 = load float* %3753, align 4
  %3755 = fcmp oge float %3752, %3754
  %3756 = fcmp uno float %3752, 0.000000e+00
  %3757 = or i1 %3755, %3756
  %3758 = select i1 %3757, float %3752, float %3754
  %3759 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 23, i64 2, i64 0
  %3760 = load float* %3759, align 4
  %3761 = fcmp oge float %3758, %3760
  %3762 = fcmp uno float %3758, 0.000000e+00
  %3763 = or i1 %3761, %3762
  %3764 = select i1 %3763, float %3758, float %3760
  %3765 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 7, i64 0, i64 0
  store float %3764, float* %3765, align 4
  %3766 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 21, i64 3, i64 0
  %3767 = load float* %3766, align 4
  %3768 = fcmp oge float 0xFFF0000000000000, %3767
  %3769 = select i1 %3768, float 0xFFF0000000000000, float %3767
  %3770 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 21, i64 4, i64 0
  %3771 = load float* %3770, align 4
  %3772 = fcmp oge float %3769, %3771
  %3773 = fcmp uno float %3769, 0.000000e+00
  %3774 = or i1 %3772, %3773
  %3775 = select i1 %3774, float %3769, float %3771
  %3776 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 21, i64 5, i64 0
  %3777 = load float* %3776, align 4
  %3778 = fcmp oge float %3775, %3777
  %3779 = fcmp uno float %3775, 0.000000e+00
  %3780 = or i1 %3778, %3779
  %3781 = select i1 %3780, float %3775, float %3777
  %3782 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 22, i64 3, i64 0
  %3783 = load float* %3782, align 4
  %3784 = fcmp oge float %3781, %3783
  %3785 = fcmp uno float %3781, 0.000000e+00
  %3786 = or i1 %3784, %3785
  %3787 = select i1 %3786, float %3781, float %3783
  %3788 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 22, i64 4, i64 0
  %3789 = load float* %3788, align 4
  %3790 = fcmp oge float %3787, %3789
  %3791 = fcmp uno float %3787, 0.000000e+00
  %3792 = or i1 %3790, %3791
  %3793 = select i1 %3792, float %3787, float %3789
  %3794 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 22, i64 5, i64 0
  %3795 = load float* %3794, align 4
  %3796 = fcmp oge float %3793, %3795
  %3797 = fcmp uno float %3793, 0.000000e+00
  %3798 = or i1 %3796, %3797
  %3799 = select i1 %3798, float %3793, float %3795
  %3800 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 23, i64 3, i64 0
  %3801 = load float* %3800, align 4
  %3802 = fcmp oge float %3799, %3801
  %3803 = fcmp uno float %3799, 0.000000e+00
  %3804 = or i1 %3802, %3803
  %3805 = select i1 %3804, float %3799, float %3801
  %3806 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 23, i64 4, i64 0
  %3807 = load float* %3806, align 4
  %3808 = fcmp oge float %3805, %3807
  %3809 = fcmp uno float %3805, 0.000000e+00
  %3810 = or i1 %3808, %3809
  %3811 = select i1 %3810, float %3805, float %3807
  %3812 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 23, i64 5, i64 0
  %3813 = load float* %3812, align 4
  %3814 = fcmp oge float %3811, %3813
  %3815 = fcmp uno float %3811, 0.000000e+00
  %3816 = or i1 %3814, %3815
  %3817 = select i1 %3816, float %3811, float %3813
  %3818 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 7, i64 1, i64 0
  store float %3817, float* %3818, align 4
  %3819 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 21, i64 6, i64 0
  %3820 = load float* %3819, align 4
  %3821 = fcmp oge float 0xFFF0000000000000, %3820
  %3822 = select i1 %3821, float 0xFFF0000000000000, float %3820
  %3823 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 21, i64 7, i64 0
  %3824 = load float* %3823, align 4
  %3825 = fcmp oge float %3822, %3824
  %3826 = fcmp uno float %3822, 0.000000e+00
  %3827 = or i1 %3825, %3826
  %3828 = select i1 %3827, float %3822, float %3824
  %3829 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 21, i64 8, i64 0
  %3830 = load float* %3829, align 4
  %3831 = fcmp oge float %3828, %3830
  %3832 = fcmp uno float %3828, 0.000000e+00
  %3833 = or i1 %3831, %3832
  %3834 = select i1 %3833, float %3828, float %3830
  %3835 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 22, i64 6, i64 0
  %3836 = load float* %3835, align 4
  %3837 = fcmp oge float %3834, %3836
  %3838 = fcmp uno float %3834, 0.000000e+00
  %3839 = or i1 %3837, %3838
  %3840 = select i1 %3839, float %3834, float %3836
  %3841 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 22, i64 7, i64 0
  %3842 = load float* %3841, align 4
  %3843 = fcmp oge float %3840, %3842
  %3844 = fcmp uno float %3840, 0.000000e+00
  %3845 = or i1 %3843, %3844
  %3846 = select i1 %3845, float %3840, float %3842
  %3847 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 22, i64 8, i64 0
  %3848 = load float* %3847, align 4
  %3849 = fcmp oge float %3846, %3848
  %3850 = fcmp uno float %3846, 0.000000e+00
  %3851 = or i1 %3849, %3850
  %3852 = select i1 %3851, float %3846, float %3848
  %3853 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 23, i64 6, i64 0
  %3854 = load float* %3853, align 4
  %3855 = fcmp oge float %3852, %3854
  %3856 = fcmp uno float %3852, 0.000000e+00
  %3857 = or i1 %3855, %3856
  %3858 = select i1 %3857, float %3852, float %3854
  %3859 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 23, i64 7, i64 0
  %3860 = load float* %3859, align 4
  %3861 = fcmp oge float %3858, %3860
  %3862 = fcmp uno float %3858, 0.000000e+00
  %3863 = or i1 %3861, %3862
  %3864 = select i1 %3863, float %3858, float %3860
  %3865 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 23, i64 8, i64 0
  %3866 = load float* %3865, align 4
  %3867 = fcmp oge float %3864, %3866
  %3868 = fcmp uno float %3864, 0.000000e+00
  %3869 = or i1 %3867, %3868
  %3870 = select i1 %3869, float %3864, float %3866
  %3871 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 7, i64 2, i64 0
  store float %3870, float* %3871, align 4
  %3872 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 21, i64 9, i64 0
  %3873 = load float* %3872, align 4
  %3874 = fcmp oge float 0xFFF0000000000000, %3873
  %3875 = select i1 %3874, float 0xFFF0000000000000, float %3873
  %3876 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 21, i64 10, i64 0
  %3877 = load float* %3876, align 4
  %3878 = fcmp oge float %3875, %3877
  %3879 = fcmp uno float %3875, 0.000000e+00
  %3880 = or i1 %3878, %3879
  %3881 = select i1 %3880, float %3875, float %3877
  %3882 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 21, i64 11, i64 0
  %3883 = load float* %3882, align 4
  %3884 = fcmp oge float %3881, %3883
  %3885 = fcmp uno float %3881, 0.000000e+00
  %3886 = or i1 %3884, %3885
  %3887 = select i1 %3886, float %3881, float %3883
  %3888 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 22, i64 9, i64 0
  %3889 = load float* %3888, align 4
  %3890 = fcmp oge float %3887, %3889
  %3891 = fcmp uno float %3887, 0.000000e+00
  %3892 = or i1 %3890, %3891
  %3893 = select i1 %3892, float %3887, float %3889
  %3894 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 22, i64 10, i64 0
  %3895 = load float* %3894, align 4
  %3896 = fcmp oge float %3893, %3895
  %3897 = fcmp uno float %3893, 0.000000e+00
  %3898 = or i1 %3896, %3897
  %3899 = select i1 %3898, float %3893, float %3895
  %3900 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 22, i64 11, i64 0
  %3901 = load float* %3900, align 4
  %3902 = fcmp oge float %3899, %3901
  %3903 = fcmp uno float %3899, 0.000000e+00
  %3904 = or i1 %3902, %3903
  %3905 = select i1 %3904, float %3899, float %3901
  %3906 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 23, i64 9, i64 0
  %3907 = load float* %3906, align 4
  %3908 = fcmp oge float %3905, %3907
  %3909 = fcmp uno float %3905, 0.000000e+00
  %3910 = or i1 %3908, %3909
  %3911 = select i1 %3910, float %3905, float %3907
  %3912 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 23, i64 10, i64 0
  %3913 = load float* %3912, align 4
  %3914 = fcmp oge float %3911, %3913
  %3915 = fcmp uno float %3911, 0.000000e+00
  %3916 = or i1 %3914, %3915
  %3917 = select i1 %3916, float %3911, float %3913
  %3918 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 23, i64 11, i64 0
  %3919 = load float* %3918, align 4
  %3920 = fcmp oge float %3917, %3919
  %3921 = fcmp uno float %3917, 0.000000e+00
  %3922 = or i1 %3920, %3921
  %3923 = select i1 %3922, float %3917, float %3919
  %3924 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 7, i64 3, i64 0
  store float %3923, float* %3924, align 4
  %3925 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 21, i64 12, i64 0
  %3926 = load float* %3925, align 4
  %3927 = fcmp oge float 0xFFF0000000000000, %3926
  %3928 = select i1 %3927, float 0xFFF0000000000000, float %3926
  %3929 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 21, i64 13, i64 0
  %3930 = load float* %3929, align 4
  %3931 = fcmp oge float %3928, %3930
  %3932 = fcmp uno float %3928, 0.000000e+00
  %3933 = or i1 %3931, %3932
  %3934 = select i1 %3933, float %3928, float %3930
  %3935 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 21, i64 14, i64 0
  %3936 = load float* %3935, align 4
  %3937 = fcmp oge float %3934, %3936
  %3938 = fcmp uno float %3934, 0.000000e+00
  %3939 = or i1 %3937, %3938
  %3940 = select i1 %3939, float %3934, float %3936
  %3941 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 22, i64 12, i64 0
  %3942 = load float* %3941, align 4
  %3943 = fcmp oge float %3940, %3942
  %3944 = fcmp uno float %3940, 0.000000e+00
  %3945 = or i1 %3943, %3944
  %3946 = select i1 %3945, float %3940, float %3942
  %3947 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 22, i64 13, i64 0
  %3948 = load float* %3947, align 4
  %3949 = fcmp oge float %3946, %3948
  %3950 = fcmp uno float %3946, 0.000000e+00
  %3951 = or i1 %3949, %3950
  %3952 = select i1 %3951, float %3946, float %3948
  %3953 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 22, i64 14, i64 0
  %3954 = load float* %3953, align 4
  %3955 = fcmp oge float %3952, %3954
  %3956 = fcmp uno float %3952, 0.000000e+00
  %3957 = or i1 %3955, %3956
  %3958 = select i1 %3957, float %3952, float %3954
  %3959 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 23, i64 12, i64 0
  %3960 = load float* %3959, align 4
  %3961 = fcmp oge float %3958, %3960
  %3962 = fcmp uno float %3958, 0.000000e+00
  %3963 = or i1 %3961, %3962
  %3964 = select i1 %3963, float %3958, float %3960
  %3965 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 23, i64 13, i64 0
  %3966 = load float* %3965, align 4
  %3967 = fcmp oge float %3964, %3966
  %3968 = fcmp uno float %3964, 0.000000e+00
  %3969 = or i1 %3967, %3968
  %3970 = select i1 %3969, float %3964, float %3966
  %3971 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 23, i64 14, i64 0
  %3972 = load float* %3971, align 4
  %3973 = fcmp oge float %3970, %3972
  %3974 = fcmp uno float %3970, 0.000000e+00
  %3975 = or i1 %3973, %3974
  %3976 = select i1 %3975, float %3970, float %3972
  %3977 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 7, i64 4, i64 0
  store float %3976, float* %3977, align 4
  %3978 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 21, i64 15, i64 0
  %3979 = load float* %3978, align 4
  %3980 = fcmp oge float 0xFFF0000000000000, %3979
  %3981 = select i1 %3980, float 0xFFF0000000000000, float %3979
  %3982 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 21, i64 16, i64 0
  %3983 = load float* %3982, align 4
  %3984 = fcmp oge float %3981, %3983
  %3985 = fcmp uno float %3981, 0.000000e+00
  %3986 = or i1 %3984, %3985
  %3987 = select i1 %3986, float %3981, float %3983
  %3988 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 21, i64 17, i64 0
  %3989 = load float* %3988, align 4
  %3990 = fcmp oge float %3987, %3989
  %3991 = fcmp uno float %3987, 0.000000e+00
  %3992 = or i1 %3990, %3991
  %3993 = select i1 %3992, float %3987, float %3989
  %3994 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 22, i64 15, i64 0
  %3995 = load float* %3994, align 4
  %3996 = fcmp oge float %3993, %3995
  %3997 = fcmp uno float %3993, 0.000000e+00
  %3998 = or i1 %3996, %3997
  %3999 = select i1 %3998, float %3993, float %3995
  %4000 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 22, i64 16, i64 0
  %4001 = load float* %4000, align 4
  %4002 = fcmp oge float %3999, %4001
  %4003 = fcmp uno float %3999, 0.000000e+00
  %4004 = or i1 %4002, %4003
  %4005 = select i1 %4004, float %3999, float %4001
  %4006 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 22, i64 17, i64 0
  %4007 = load float* %4006, align 4
  %4008 = fcmp oge float %4005, %4007
  %4009 = fcmp uno float %4005, 0.000000e+00
  %4010 = or i1 %4008, %4009
  %4011 = select i1 %4010, float %4005, float %4007
  %4012 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 23, i64 15, i64 0
  %4013 = load float* %4012, align 4
  %4014 = fcmp oge float %4011, %4013
  %4015 = fcmp uno float %4011, 0.000000e+00
  %4016 = or i1 %4014, %4015
  %4017 = select i1 %4016, float %4011, float %4013
  %4018 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 23, i64 16, i64 0
  %4019 = load float* %4018, align 4
  %4020 = fcmp oge float %4017, %4019
  %4021 = fcmp uno float %4017, 0.000000e+00
  %4022 = or i1 %4020, %4021
  %4023 = select i1 %4022, float %4017, float %4019
  %4024 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 23, i64 17, i64 0
  %4025 = load float* %4024, align 4
  %4026 = fcmp oge float %4023, %4025
  %4027 = fcmp uno float %4023, 0.000000e+00
  %4028 = or i1 %4026, %4027
  %4029 = select i1 %4028, float %4023, float %4025
  %4030 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 7, i64 5, i64 0
  store float %4029, float* %4030, align 4
  %4031 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 21, i64 18, i64 0
  %4032 = load float* %4031, align 4
  %4033 = fcmp oge float 0xFFF0000000000000, %4032
  %4034 = select i1 %4033, float 0xFFF0000000000000, float %4032
  %4035 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 21, i64 19, i64 0
  %4036 = load float* %4035, align 4
  %4037 = fcmp oge float %4034, %4036
  %4038 = fcmp uno float %4034, 0.000000e+00
  %4039 = or i1 %4037, %4038
  %4040 = select i1 %4039, float %4034, float %4036
  %4041 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 21, i64 20, i64 0
  %4042 = load float* %4041, align 4
  %4043 = fcmp oge float %4040, %4042
  %4044 = fcmp uno float %4040, 0.000000e+00
  %4045 = or i1 %4043, %4044
  %4046 = select i1 %4045, float %4040, float %4042
  %4047 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 22, i64 18, i64 0
  %4048 = load float* %4047, align 4
  %4049 = fcmp oge float %4046, %4048
  %4050 = fcmp uno float %4046, 0.000000e+00
  %4051 = or i1 %4049, %4050
  %4052 = select i1 %4051, float %4046, float %4048
  %4053 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 22, i64 19, i64 0
  %4054 = load float* %4053, align 4
  %4055 = fcmp oge float %4052, %4054
  %4056 = fcmp uno float %4052, 0.000000e+00
  %4057 = or i1 %4055, %4056
  %4058 = select i1 %4057, float %4052, float %4054
  %4059 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 22, i64 20, i64 0
  %4060 = load float* %4059, align 4
  %4061 = fcmp oge float %4058, %4060
  %4062 = fcmp uno float %4058, 0.000000e+00
  %4063 = or i1 %4061, %4062
  %4064 = select i1 %4063, float %4058, float %4060
  %4065 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 23, i64 18, i64 0
  %4066 = load float* %4065, align 4
  %4067 = fcmp oge float %4064, %4066
  %4068 = fcmp uno float %4064, 0.000000e+00
  %4069 = or i1 %4067, %4068
  %4070 = select i1 %4069, float %4064, float %4066
  %4071 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 23, i64 19, i64 0
  %4072 = load float* %4071, align 4
  %4073 = fcmp oge float %4070, %4072
  %4074 = fcmp uno float %4070, 0.000000e+00
  %4075 = or i1 %4073, %4074
  %4076 = select i1 %4075, float %4070, float %4072
  %4077 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 23, i64 20, i64 0
  %4078 = load float* %4077, align 4
  %4079 = fcmp oge float %4076, %4078
  %4080 = fcmp uno float %4076, 0.000000e+00
  %4081 = or i1 %4079, %4080
  %4082 = select i1 %4081, float %4076, float %4078
  %4083 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 7, i64 6, i64 0
  store float %4082, float* %4083, align 4
  %4084 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 21, i64 21, i64 0
  %4085 = load float* %4084, align 4
  %4086 = fcmp oge float 0xFFF0000000000000, %4085
  %4087 = select i1 %4086, float 0xFFF0000000000000, float %4085
  %4088 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 21, i64 22, i64 0
  %4089 = load float* %4088, align 4
  %4090 = fcmp oge float %4087, %4089
  %4091 = fcmp uno float %4087, 0.000000e+00
  %4092 = or i1 %4090, %4091
  %4093 = select i1 %4092, float %4087, float %4089
  %4094 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 21, i64 23, i64 0
  %4095 = load float* %4094, align 4
  %4096 = fcmp oge float %4093, %4095
  %4097 = fcmp uno float %4093, 0.000000e+00
  %4098 = or i1 %4096, %4097
  %4099 = select i1 %4098, float %4093, float %4095
  %4100 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 22, i64 21, i64 0
  %4101 = load float* %4100, align 4
  %4102 = fcmp oge float %4099, %4101
  %4103 = fcmp uno float %4099, 0.000000e+00
  %4104 = or i1 %4102, %4103
  %4105 = select i1 %4104, float %4099, float %4101
  %4106 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 22, i64 22, i64 0
  %4107 = load float* %4106, align 4
  %4108 = fcmp oge float %4105, %4107
  %4109 = fcmp uno float %4105, 0.000000e+00
  %4110 = or i1 %4108, %4109
  %4111 = select i1 %4110, float %4105, float %4107
  %4112 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 22, i64 23, i64 0
  %4113 = load float* %4112, align 4
  %4114 = fcmp oge float %4111, %4113
  %4115 = fcmp uno float %4111, 0.000000e+00
  %4116 = or i1 %4114, %4115
  %4117 = select i1 %4116, float %4111, float %4113
  %4118 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 23, i64 21, i64 0
  %4119 = load float* %4118, align 4
  %4120 = fcmp oge float %4117, %4119
  %4121 = fcmp uno float %4117, 0.000000e+00
  %4122 = or i1 %4120, %4121
  %4123 = select i1 %4122, float %4117, float %4119
  %4124 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 23, i64 22, i64 0
  %4125 = load float* %4124, align 4
  %4126 = fcmp oge float %4123, %4125
  %4127 = fcmp uno float %4123, 0.000000e+00
  %4128 = or i1 %4126, %4127
  %4129 = select i1 %4128, float %4123, float %4125
  %4130 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 23, i64 23, i64 0
  %4131 = load float* %4130, align 4
  %4132 = fcmp oge float %4129, %4131
  %4133 = fcmp uno float %4129, 0.000000e+00
  %4134 = or i1 %4132, %4133
  %4135 = select i1 %4134, float %4129, float %4131
  %4136 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 7, i64 7, i64 0
  store float %4135, float* %4136, align 4
  %4137 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 21, i64 24, i64 0
  %4138 = load float* %4137, align 4
  %4139 = fcmp oge float 0xFFF0000000000000, %4138
  %4140 = select i1 %4139, float 0xFFF0000000000000, float %4138
  %4141 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 21, i64 25, i64 0
  %4142 = load float* %4141, align 4
  %4143 = fcmp oge float %4140, %4142
  %4144 = fcmp uno float %4140, 0.000000e+00
  %4145 = or i1 %4143, %4144
  %4146 = select i1 %4145, float %4140, float %4142
  %4147 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 21, i64 26, i64 0
  %4148 = load float* %4147, align 4
  %4149 = fcmp oge float %4146, %4148
  %4150 = fcmp uno float %4146, 0.000000e+00
  %4151 = or i1 %4149, %4150
  %4152 = select i1 %4151, float %4146, float %4148
  %4153 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 22, i64 24, i64 0
  %4154 = load float* %4153, align 4
  %4155 = fcmp oge float %4152, %4154
  %4156 = fcmp uno float %4152, 0.000000e+00
  %4157 = or i1 %4155, %4156
  %4158 = select i1 %4157, float %4152, float %4154
  %4159 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 22, i64 25, i64 0
  %4160 = load float* %4159, align 4
  %4161 = fcmp oge float %4158, %4160
  %4162 = fcmp uno float %4158, 0.000000e+00
  %4163 = or i1 %4161, %4162
  %4164 = select i1 %4163, float %4158, float %4160
  %4165 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 22, i64 26, i64 0
  %4166 = load float* %4165, align 4
  %4167 = fcmp oge float %4164, %4166
  %4168 = fcmp uno float %4164, 0.000000e+00
  %4169 = or i1 %4167, %4168
  %4170 = select i1 %4169, float %4164, float %4166
  %4171 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 23, i64 24, i64 0
  %4172 = load float* %4171, align 4
  %4173 = fcmp oge float %4170, %4172
  %4174 = fcmp uno float %4170, 0.000000e+00
  %4175 = or i1 %4173, %4174
  %4176 = select i1 %4175, float %4170, float %4172
  %4177 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 23, i64 25, i64 0
  %4178 = load float* %4177, align 4
  %4179 = fcmp oge float %4176, %4178
  %4180 = fcmp uno float %4176, 0.000000e+00
  %4181 = or i1 %4179, %4180
  %4182 = select i1 %4181, float %4176, float %4178
  %4183 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 23, i64 26, i64 0
  %4184 = load float* %4183, align 4
  %4185 = fcmp oge float %4182, %4184
  %4186 = fcmp uno float %4182, 0.000000e+00
  %4187 = or i1 %4185, %4186
  %4188 = select i1 %4187, float %4182, float %4184
  %4189 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 7, i64 8, i64 0
  store float %4188, float* %4189, align 4
  %4190 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 21, i64 27, i64 0
  %4191 = load float* %4190, align 4
  %4192 = fcmp oge float 0xFFF0000000000000, %4191
  %4193 = select i1 %4192, float 0xFFF0000000000000, float %4191
  %4194 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 21, i64 28, i64 0
  %4195 = load float* %4194, align 4
  %4196 = fcmp oge float %4193, %4195
  %4197 = fcmp uno float %4193, 0.000000e+00
  %4198 = or i1 %4196, %4197
  %4199 = select i1 %4198, float %4193, float %4195
  %4200 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 21, i64 29, i64 0
  %4201 = load float* %4200, align 4
  %4202 = fcmp oge float %4199, %4201
  %4203 = fcmp uno float %4199, 0.000000e+00
  %4204 = or i1 %4202, %4203
  %4205 = select i1 %4204, float %4199, float %4201
  %4206 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 22, i64 27, i64 0
  %4207 = load float* %4206, align 4
  %4208 = fcmp oge float %4205, %4207
  %4209 = fcmp uno float %4205, 0.000000e+00
  %4210 = or i1 %4208, %4209
  %4211 = select i1 %4210, float %4205, float %4207
  %4212 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 22, i64 28, i64 0
  %4213 = load float* %4212, align 4
  %4214 = fcmp oge float %4211, %4213
  %4215 = fcmp uno float %4211, 0.000000e+00
  %4216 = or i1 %4214, %4215
  %4217 = select i1 %4216, float %4211, float %4213
  %4218 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 22, i64 29, i64 0
  %4219 = load float* %4218, align 4
  %4220 = fcmp oge float %4217, %4219
  %4221 = fcmp uno float %4217, 0.000000e+00
  %4222 = or i1 %4220, %4221
  %4223 = select i1 %4222, float %4217, float %4219
  %4224 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 23, i64 27, i64 0
  %4225 = load float* %4224, align 4
  %4226 = fcmp oge float %4223, %4225
  %4227 = fcmp uno float %4223, 0.000000e+00
  %4228 = or i1 %4226, %4227
  %4229 = select i1 %4228, float %4223, float %4225
  %4230 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 23, i64 28, i64 0
  %4231 = load float* %4230, align 4
  %4232 = fcmp oge float %4229, %4231
  %4233 = fcmp uno float %4229, 0.000000e+00
  %4234 = or i1 %4232, %4233
  %4235 = select i1 %4234, float %4229, float %4231
  %4236 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 23, i64 29, i64 0
  %4237 = load float* %4236, align 4
  %4238 = fcmp oge float %4235, %4237
  %4239 = fcmp uno float %4235, 0.000000e+00
  %4240 = or i1 %4238, %4239
  %4241 = select i1 %4240, float %4235, float %4237
  %4242 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 7, i64 9, i64 0
  store float %4241, float* %4242, align 4
  %4243 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 24, i64 0, i64 0
  %4244 = load float* %4243, align 4
  %4245 = fcmp oge float 0xFFF0000000000000, %4244
  %4246 = select i1 %4245, float 0xFFF0000000000000, float %4244
  %4247 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 24, i64 1, i64 0
  %4248 = load float* %4247, align 4
  %4249 = fcmp oge float %4246, %4248
  %4250 = fcmp uno float %4246, 0.000000e+00
  %4251 = or i1 %4249, %4250
  %4252 = select i1 %4251, float %4246, float %4248
  %4253 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 24, i64 2, i64 0
  %4254 = load float* %4253, align 4
  %4255 = fcmp oge float %4252, %4254
  %4256 = fcmp uno float %4252, 0.000000e+00
  %4257 = or i1 %4255, %4256
  %4258 = select i1 %4257, float %4252, float %4254
  %4259 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 25, i64 0, i64 0
  %4260 = load float* %4259, align 4
  %4261 = fcmp oge float %4258, %4260
  %4262 = fcmp uno float %4258, 0.000000e+00
  %4263 = or i1 %4261, %4262
  %4264 = select i1 %4263, float %4258, float %4260
  %4265 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 25, i64 1, i64 0
  %4266 = load float* %4265, align 4
  %4267 = fcmp oge float %4264, %4266
  %4268 = fcmp uno float %4264, 0.000000e+00
  %4269 = or i1 %4267, %4268
  %4270 = select i1 %4269, float %4264, float %4266
  %4271 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 25, i64 2, i64 0
  %4272 = load float* %4271, align 4
  %4273 = fcmp oge float %4270, %4272
  %4274 = fcmp uno float %4270, 0.000000e+00
  %4275 = or i1 %4273, %4274
  %4276 = select i1 %4275, float %4270, float %4272
  %4277 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 26, i64 0, i64 0
  %4278 = load float* %4277, align 4
  %4279 = fcmp oge float %4276, %4278
  %4280 = fcmp uno float %4276, 0.000000e+00
  %4281 = or i1 %4279, %4280
  %4282 = select i1 %4281, float %4276, float %4278
  %4283 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 26, i64 1, i64 0
  %4284 = load float* %4283, align 4
  %4285 = fcmp oge float %4282, %4284
  %4286 = fcmp uno float %4282, 0.000000e+00
  %4287 = or i1 %4285, %4286
  %4288 = select i1 %4287, float %4282, float %4284
  %4289 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 26, i64 2, i64 0
  %4290 = load float* %4289, align 4
  %4291 = fcmp oge float %4288, %4290
  %4292 = fcmp uno float %4288, 0.000000e+00
  %4293 = or i1 %4291, %4292
  %4294 = select i1 %4293, float %4288, float %4290
  %4295 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 8, i64 0, i64 0
  store float %4294, float* %4295, align 4
  %4296 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 24, i64 3, i64 0
  %4297 = load float* %4296, align 4
  %4298 = fcmp oge float 0xFFF0000000000000, %4297
  %4299 = select i1 %4298, float 0xFFF0000000000000, float %4297
  %4300 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 24, i64 4, i64 0
  %4301 = load float* %4300, align 4
  %4302 = fcmp oge float %4299, %4301
  %4303 = fcmp uno float %4299, 0.000000e+00
  %4304 = or i1 %4302, %4303
  %4305 = select i1 %4304, float %4299, float %4301
  %4306 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 24, i64 5, i64 0
  %4307 = load float* %4306, align 4
  %4308 = fcmp oge float %4305, %4307
  %4309 = fcmp uno float %4305, 0.000000e+00
  %4310 = or i1 %4308, %4309
  %4311 = select i1 %4310, float %4305, float %4307
  %4312 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 25, i64 3, i64 0
  %4313 = load float* %4312, align 4
  %4314 = fcmp oge float %4311, %4313
  %4315 = fcmp uno float %4311, 0.000000e+00
  %4316 = or i1 %4314, %4315
  %4317 = select i1 %4316, float %4311, float %4313
  %4318 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 25, i64 4, i64 0
  %4319 = load float* %4318, align 4
  %4320 = fcmp oge float %4317, %4319
  %4321 = fcmp uno float %4317, 0.000000e+00
  %4322 = or i1 %4320, %4321
  %4323 = select i1 %4322, float %4317, float %4319
  %4324 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 25, i64 5, i64 0
  %4325 = load float* %4324, align 4
  %4326 = fcmp oge float %4323, %4325
  %4327 = fcmp uno float %4323, 0.000000e+00
  %4328 = or i1 %4326, %4327
  %4329 = select i1 %4328, float %4323, float %4325
  %4330 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 26, i64 3, i64 0
  %4331 = load float* %4330, align 4
  %4332 = fcmp oge float %4329, %4331
  %4333 = fcmp uno float %4329, 0.000000e+00
  %4334 = or i1 %4332, %4333
  %4335 = select i1 %4334, float %4329, float %4331
  %4336 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 26, i64 4, i64 0
  %4337 = load float* %4336, align 4
  %4338 = fcmp oge float %4335, %4337
  %4339 = fcmp uno float %4335, 0.000000e+00
  %4340 = or i1 %4338, %4339
  %4341 = select i1 %4340, float %4335, float %4337
  %4342 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 26, i64 5, i64 0
  %4343 = load float* %4342, align 4
  %4344 = fcmp oge float %4341, %4343
  %4345 = fcmp uno float %4341, 0.000000e+00
  %4346 = or i1 %4344, %4345
  %4347 = select i1 %4346, float %4341, float %4343
  %4348 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 8, i64 1, i64 0
  store float %4347, float* %4348, align 4
  %4349 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 24, i64 6, i64 0
  %4350 = load float* %4349, align 4
  %4351 = fcmp oge float 0xFFF0000000000000, %4350
  %4352 = select i1 %4351, float 0xFFF0000000000000, float %4350
  %4353 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 24, i64 7, i64 0
  %4354 = load float* %4353, align 4
  %4355 = fcmp oge float %4352, %4354
  %4356 = fcmp uno float %4352, 0.000000e+00
  %4357 = or i1 %4355, %4356
  %4358 = select i1 %4357, float %4352, float %4354
  %4359 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 24, i64 8, i64 0
  %4360 = load float* %4359, align 4
  %4361 = fcmp oge float %4358, %4360
  %4362 = fcmp uno float %4358, 0.000000e+00
  %4363 = or i1 %4361, %4362
  %4364 = select i1 %4363, float %4358, float %4360
  %4365 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 25, i64 6, i64 0
  %4366 = load float* %4365, align 4
  %4367 = fcmp oge float %4364, %4366
  %4368 = fcmp uno float %4364, 0.000000e+00
  %4369 = or i1 %4367, %4368
  %4370 = select i1 %4369, float %4364, float %4366
  %4371 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 25, i64 7, i64 0
  %4372 = load float* %4371, align 4
  %4373 = fcmp oge float %4370, %4372
  %4374 = fcmp uno float %4370, 0.000000e+00
  %4375 = or i1 %4373, %4374
  %4376 = select i1 %4375, float %4370, float %4372
  %4377 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 25, i64 8, i64 0
  %4378 = load float* %4377, align 4
  %4379 = fcmp oge float %4376, %4378
  %4380 = fcmp uno float %4376, 0.000000e+00
  %4381 = or i1 %4379, %4380
  %4382 = select i1 %4381, float %4376, float %4378
  %4383 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 26, i64 6, i64 0
  %4384 = load float* %4383, align 4
  %4385 = fcmp oge float %4382, %4384
  %4386 = fcmp uno float %4382, 0.000000e+00
  %4387 = or i1 %4385, %4386
  %4388 = select i1 %4387, float %4382, float %4384
  %4389 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 26, i64 7, i64 0
  %4390 = load float* %4389, align 4
  %4391 = fcmp oge float %4388, %4390
  %4392 = fcmp uno float %4388, 0.000000e+00
  %4393 = or i1 %4391, %4392
  %4394 = select i1 %4393, float %4388, float %4390
  %4395 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 26, i64 8, i64 0
  %4396 = load float* %4395, align 4
  %4397 = fcmp oge float %4394, %4396
  %4398 = fcmp uno float %4394, 0.000000e+00
  %4399 = or i1 %4397, %4398
  %4400 = select i1 %4399, float %4394, float %4396
  %4401 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 8, i64 2, i64 0
  store float %4400, float* %4401, align 4
  %4402 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 24, i64 9, i64 0
  %4403 = load float* %4402, align 4
  %4404 = fcmp oge float 0xFFF0000000000000, %4403
  %4405 = select i1 %4404, float 0xFFF0000000000000, float %4403
  %4406 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 24, i64 10, i64 0
  %4407 = load float* %4406, align 4
  %4408 = fcmp oge float %4405, %4407
  %4409 = fcmp uno float %4405, 0.000000e+00
  %4410 = or i1 %4408, %4409
  %4411 = select i1 %4410, float %4405, float %4407
  %4412 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 24, i64 11, i64 0
  %4413 = load float* %4412, align 4
  %4414 = fcmp oge float %4411, %4413
  %4415 = fcmp uno float %4411, 0.000000e+00
  %4416 = or i1 %4414, %4415
  %4417 = select i1 %4416, float %4411, float %4413
  %4418 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 25, i64 9, i64 0
  %4419 = load float* %4418, align 4
  %4420 = fcmp oge float %4417, %4419
  %4421 = fcmp uno float %4417, 0.000000e+00
  %4422 = or i1 %4420, %4421
  %4423 = select i1 %4422, float %4417, float %4419
  %4424 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 25, i64 10, i64 0
  %4425 = load float* %4424, align 4
  %4426 = fcmp oge float %4423, %4425
  %4427 = fcmp uno float %4423, 0.000000e+00
  %4428 = or i1 %4426, %4427
  %4429 = select i1 %4428, float %4423, float %4425
  %4430 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 25, i64 11, i64 0
  %4431 = load float* %4430, align 4
  %4432 = fcmp oge float %4429, %4431
  %4433 = fcmp uno float %4429, 0.000000e+00
  %4434 = or i1 %4432, %4433
  %4435 = select i1 %4434, float %4429, float %4431
  %4436 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 26, i64 9, i64 0
  %4437 = load float* %4436, align 4
  %4438 = fcmp oge float %4435, %4437
  %4439 = fcmp uno float %4435, 0.000000e+00
  %4440 = or i1 %4438, %4439
  %4441 = select i1 %4440, float %4435, float %4437
  %4442 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 26, i64 10, i64 0
  %4443 = load float* %4442, align 4
  %4444 = fcmp oge float %4441, %4443
  %4445 = fcmp uno float %4441, 0.000000e+00
  %4446 = or i1 %4444, %4445
  %4447 = select i1 %4446, float %4441, float %4443
  %4448 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 26, i64 11, i64 0
  %4449 = load float* %4448, align 4
  %4450 = fcmp oge float %4447, %4449
  %4451 = fcmp uno float %4447, 0.000000e+00
  %4452 = or i1 %4450, %4451
  %4453 = select i1 %4452, float %4447, float %4449
  %4454 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 8, i64 3, i64 0
  store float %4453, float* %4454, align 4
  %4455 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 24, i64 12, i64 0
  %4456 = load float* %4455, align 4
  %4457 = fcmp oge float 0xFFF0000000000000, %4456
  %4458 = select i1 %4457, float 0xFFF0000000000000, float %4456
  %4459 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 24, i64 13, i64 0
  %4460 = load float* %4459, align 4
  %4461 = fcmp oge float %4458, %4460
  %4462 = fcmp uno float %4458, 0.000000e+00
  %4463 = or i1 %4461, %4462
  %4464 = select i1 %4463, float %4458, float %4460
  %4465 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 24, i64 14, i64 0
  %4466 = load float* %4465, align 4
  %4467 = fcmp oge float %4464, %4466
  %4468 = fcmp uno float %4464, 0.000000e+00
  %4469 = or i1 %4467, %4468
  %4470 = select i1 %4469, float %4464, float %4466
  %4471 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 25, i64 12, i64 0
  %4472 = load float* %4471, align 4
  %4473 = fcmp oge float %4470, %4472
  %4474 = fcmp uno float %4470, 0.000000e+00
  %4475 = or i1 %4473, %4474
  %4476 = select i1 %4475, float %4470, float %4472
  %4477 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 25, i64 13, i64 0
  %4478 = load float* %4477, align 4
  %4479 = fcmp oge float %4476, %4478
  %4480 = fcmp uno float %4476, 0.000000e+00
  %4481 = or i1 %4479, %4480
  %4482 = select i1 %4481, float %4476, float %4478
  %4483 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 25, i64 14, i64 0
  %4484 = load float* %4483, align 4
  %4485 = fcmp oge float %4482, %4484
  %4486 = fcmp uno float %4482, 0.000000e+00
  %4487 = or i1 %4485, %4486
  %4488 = select i1 %4487, float %4482, float %4484
  %4489 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 26, i64 12, i64 0
  %4490 = load float* %4489, align 4
  %4491 = fcmp oge float %4488, %4490
  %4492 = fcmp uno float %4488, 0.000000e+00
  %4493 = or i1 %4491, %4492
  %4494 = select i1 %4493, float %4488, float %4490
  %4495 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 26, i64 13, i64 0
  %4496 = load float* %4495, align 4
  %4497 = fcmp oge float %4494, %4496
  %4498 = fcmp uno float %4494, 0.000000e+00
  %4499 = or i1 %4497, %4498
  %4500 = select i1 %4499, float %4494, float %4496
  %4501 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 26, i64 14, i64 0
  %4502 = load float* %4501, align 4
  %4503 = fcmp oge float %4500, %4502
  %4504 = fcmp uno float %4500, 0.000000e+00
  %4505 = or i1 %4503, %4504
  %4506 = select i1 %4505, float %4500, float %4502
  %4507 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 8, i64 4, i64 0
  store float %4506, float* %4507, align 4
  %4508 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 24, i64 15, i64 0
  %4509 = load float* %4508, align 4
  %4510 = fcmp oge float 0xFFF0000000000000, %4509
  %4511 = select i1 %4510, float 0xFFF0000000000000, float %4509
  %4512 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 24, i64 16, i64 0
  %4513 = load float* %4512, align 4
  %4514 = fcmp oge float %4511, %4513
  %4515 = fcmp uno float %4511, 0.000000e+00
  %4516 = or i1 %4514, %4515
  %4517 = select i1 %4516, float %4511, float %4513
  %4518 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 24, i64 17, i64 0
  %4519 = load float* %4518, align 4
  %4520 = fcmp oge float %4517, %4519
  %4521 = fcmp uno float %4517, 0.000000e+00
  %4522 = or i1 %4520, %4521
  %4523 = select i1 %4522, float %4517, float %4519
  %4524 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 25, i64 15, i64 0
  %4525 = load float* %4524, align 4
  %4526 = fcmp oge float %4523, %4525
  %4527 = fcmp uno float %4523, 0.000000e+00
  %4528 = or i1 %4526, %4527
  %4529 = select i1 %4528, float %4523, float %4525
  %4530 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 25, i64 16, i64 0
  %4531 = load float* %4530, align 4
  %4532 = fcmp oge float %4529, %4531
  %4533 = fcmp uno float %4529, 0.000000e+00
  %4534 = or i1 %4532, %4533
  %4535 = select i1 %4534, float %4529, float %4531
  %4536 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 25, i64 17, i64 0
  %4537 = load float* %4536, align 4
  %4538 = fcmp oge float %4535, %4537
  %4539 = fcmp uno float %4535, 0.000000e+00
  %4540 = or i1 %4538, %4539
  %4541 = select i1 %4540, float %4535, float %4537
  %4542 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 26, i64 15, i64 0
  %4543 = load float* %4542, align 4
  %4544 = fcmp oge float %4541, %4543
  %4545 = fcmp uno float %4541, 0.000000e+00
  %4546 = or i1 %4544, %4545
  %4547 = select i1 %4546, float %4541, float %4543
  %4548 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 26, i64 16, i64 0
  %4549 = load float* %4548, align 4
  %4550 = fcmp oge float %4547, %4549
  %4551 = fcmp uno float %4547, 0.000000e+00
  %4552 = or i1 %4550, %4551
  %4553 = select i1 %4552, float %4547, float %4549
  %4554 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 26, i64 17, i64 0
  %4555 = load float* %4554, align 4
  %4556 = fcmp oge float %4553, %4555
  %4557 = fcmp uno float %4553, 0.000000e+00
  %4558 = or i1 %4556, %4557
  %4559 = select i1 %4558, float %4553, float %4555
  %4560 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 8, i64 5, i64 0
  store float %4559, float* %4560, align 4
  %4561 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 24, i64 18, i64 0
  %4562 = load float* %4561, align 4
  %4563 = fcmp oge float 0xFFF0000000000000, %4562
  %4564 = select i1 %4563, float 0xFFF0000000000000, float %4562
  %4565 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 24, i64 19, i64 0
  %4566 = load float* %4565, align 4
  %4567 = fcmp oge float %4564, %4566
  %4568 = fcmp uno float %4564, 0.000000e+00
  %4569 = or i1 %4567, %4568
  %4570 = select i1 %4569, float %4564, float %4566
  %4571 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 24, i64 20, i64 0
  %4572 = load float* %4571, align 4
  %4573 = fcmp oge float %4570, %4572
  %4574 = fcmp uno float %4570, 0.000000e+00
  %4575 = or i1 %4573, %4574
  %4576 = select i1 %4575, float %4570, float %4572
  %4577 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 25, i64 18, i64 0
  %4578 = load float* %4577, align 4
  %4579 = fcmp oge float %4576, %4578
  %4580 = fcmp uno float %4576, 0.000000e+00
  %4581 = or i1 %4579, %4580
  %4582 = select i1 %4581, float %4576, float %4578
  %4583 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 25, i64 19, i64 0
  %4584 = load float* %4583, align 4
  %4585 = fcmp oge float %4582, %4584
  %4586 = fcmp uno float %4582, 0.000000e+00
  %4587 = or i1 %4585, %4586
  %4588 = select i1 %4587, float %4582, float %4584
  %4589 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 25, i64 20, i64 0
  %4590 = load float* %4589, align 4
  %4591 = fcmp oge float %4588, %4590
  %4592 = fcmp uno float %4588, 0.000000e+00
  %4593 = or i1 %4591, %4592
  %4594 = select i1 %4593, float %4588, float %4590
  %4595 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 26, i64 18, i64 0
  %4596 = load float* %4595, align 4
  %4597 = fcmp oge float %4594, %4596
  %4598 = fcmp uno float %4594, 0.000000e+00
  %4599 = or i1 %4597, %4598
  %4600 = select i1 %4599, float %4594, float %4596
  %4601 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 26, i64 19, i64 0
  %4602 = load float* %4601, align 4
  %4603 = fcmp oge float %4600, %4602
  %4604 = fcmp uno float %4600, 0.000000e+00
  %4605 = or i1 %4603, %4604
  %4606 = select i1 %4605, float %4600, float %4602
  %4607 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 26, i64 20, i64 0
  %4608 = load float* %4607, align 4
  %4609 = fcmp oge float %4606, %4608
  %4610 = fcmp uno float %4606, 0.000000e+00
  %4611 = or i1 %4609, %4610
  %4612 = select i1 %4611, float %4606, float %4608
  %4613 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 8, i64 6, i64 0
  store float %4612, float* %4613, align 4
  %4614 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 24, i64 21, i64 0
  %4615 = load float* %4614, align 4
  %4616 = fcmp oge float 0xFFF0000000000000, %4615
  %4617 = select i1 %4616, float 0xFFF0000000000000, float %4615
  %4618 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 24, i64 22, i64 0
  %4619 = load float* %4618, align 4
  %4620 = fcmp oge float %4617, %4619
  %4621 = fcmp uno float %4617, 0.000000e+00
  %4622 = or i1 %4620, %4621
  %4623 = select i1 %4622, float %4617, float %4619
  %4624 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 24, i64 23, i64 0
  %4625 = load float* %4624, align 4
  %4626 = fcmp oge float %4623, %4625
  %4627 = fcmp uno float %4623, 0.000000e+00
  %4628 = or i1 %4626, %4627
  %4629 = select i1 %4628, float %4623, float %4625
  %4630 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 25, i64 21, i64 0
  %4631 = load float* %4630, align 4
  %4632 = fcmp oge float %4629, %4631
  %4633 = fcmp uno float %4629, 0.000000e+00
  %4634 = or i1 %4632, %4633
  %4635 = select i1 %4634, float %4629, float %4631
  %4636 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 25, i64 22, i64 0
  %4637 = load float* %4636, align 4
  %4638 = fcmp oge float %4635, %4637
  %4639 = fcmp uno float %4635, 0.000000e+00
  %4640 = or i1 %4638, %4639
  %4641 = select i1 %4640, float %4635, float %4637
  %4642 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 25, i64 23, i64 0
  %4643 = load float* %4642, align 4
  %4644 = fcmp oge float %4641, %4643
  %4645 = fcmp uno float %4641, 0.000000e+00
  %4646 = or i1 %4644, %4645
  %4647 = select i1 %4646, float %4641, float %4643
  %4648 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 26, i64 21, i64 0
  %4649 = load float* %4648, align 4
  %4650 = fcmp oge float %4647, %4649
  %4651 = fcmp uno float %4647, 0.000000e+00
  %4652 = or i1 %4650, %4651
  %4653 = select i1 %4652, float %4647, float %4649
  %4654 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 26, i64 22, i64 0
  %4655 = load float* %4654, align 4
  %4656 = fcmp oge float %4653, %4655
  %4657 = fcmp uno float %4653, 0.000000e+00
  %4658 = or i1 %4656, %4657
  %4659 = select i1 %4658, float %4653, float %4655
  %4660 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 26, i64 23, i64 0
  %4661 = load float* %4660, align 4
  %4662 = fcmp oge float %4659, %4661
  %4663 = fcmp uno float %4659, 0.000000e+00
  %4664 = or i1 %4662, %4663
  %4665 = select i1 %4664, float %4659, float %4661
  %4666 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 8, i64 7, i64 0
  store float %4665, float* %4666, align 4
  %4667 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 24, i64 24, i64 0
  %4668 = load float* %4667, align 4
  %4669 = fcmp oge float 0xFFF0000000000000, %4668
  %4670 = select i1 %4669, float 0xFFF0000000000000, float %4668
  %4671 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 24, i64 25, i64 0
  %4672 = load float* %4671, align 4
  %4673 = fcmp oge float %4670, %4672
  %4674 = fcmp uno float %4670, 0.000000e+00
  %4675 = or i1 %4673, %4674
  %4676 = select i1 %4675, float %4670, float %4672
  %4677 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 24, i64 26, i64 0
  %4678 = load float* %4677, align 4
  %4679 = fcmp oge float %4676, %4678
  %4680 = fcmp uno float %4676, 0.000000e+00
  %4681 = or i1 %4679, %4680
  %4682 = select i1 %4681, float %4676, float %4678
  %4683 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 25, i64 24, i64 0
  %4684 = load float* %4683, align 4
  %4685 = fcmp oge float %4682, %4684
  %4686 = fcmp uno float %4682, 0.000000e+00
  %4687 = or i1 %4685, %4686
  %4688 = select i1 %4687, float %4682, float %4684
  %4689 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 25, i64 25, i64 0
  %4690 = load float* %4689, align 4
  %4691 = fcmp oge float %4688, %4690
  %4692 = fcmp uno float %4688, 0.000000e+00
  %4693 = or i1 %4691, %4692
  %4694 = select i1 %4693, float %4688, float %4690
  %4695 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 25, i64 26, i64 0
  %4696 = load float* %4695, align 4
  %4697 = fcmp oge float %4694, %4696
  %4698 = fcmp uno float %4694, 0.000000e+00
  %4699 = or i1 %4697, %4698
  %4700 = select i1 %4699, float %4694, float %4696
  %4701 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 26, i64 24, i64 0
  %4702 = load float* %4701, align 4
  %4703 = fcmp oge float %4700, %4702
  %4704 = fcmp uno float %4700, 0.000000e+00
  %4705 = or i1 %4703, %4704
  %4706 = select i1 %4705, float %4700, float %4702
  %4707 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 26, i64 25, i64 0
  %4708 = load float* %4707, align 4
  %4709 = fcmp oge float %4706, %4708
  %4710 = fcmp uno float %4706, 0.000000e+00
  %4711 = or i1 %4709, %4710
  %4712 = select i1 %4711, float %4706, float %4708
  %4713 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 26, i64 26, i64 0
  %4714 = load float* %4713, align 4
  %4715 = fcmp oge float %4712, %4714
  %4716 = fcmp uno float %4712, 0.000000e+00
  %4717 = or i1 %4715, %4716
  %4718 = select i1 %4717, float %4712, float %4714
  %4719 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 8, i64 8, i64 0
  store float %4718, float* %4719, align 4
  %4720 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 24, i64 27, i64 0
  %4721 = load float* %4720, align 4
  %4722 = fcmp oge float 0xFFF0000000000000, %4721
  %4723 = select i1 %4722, float 0xFFF0000000000000, float %4721
  %4724 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 24, i64 28, i64 0
  %4725 = load float* %4724, align 4
  %4726 = fcmp oge float %4723, %4725
  %4727 = fcmp uno float %4723, 0.000000e+00
  %4728 = or i1 %4726, %4727
  %4729 = select i1 %4728, float %4723, float %4725
  %4730 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 24, i64 29, i64 0
  %4731 = load float* %4730, align 4
  %4732 = fcmp oge float %4729, %4731
  %4733 = fcmp uno float %4729, 0.000000e+00
  %4734 = or i1 %4732, %4733
  %4735 = select i1 %4734, float %4729, float %4731
  %4736 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 25, i64 27, i64 0
  %4737 = load float* %4736, align 4
  %4738 = fcmp oge float %4735, %4737
  %4739 = fcmp uno float %4735, 0.000000e+00
  %4740 = or i1 %4738, %4739
  %4741 = select i1 %4740, float %4735, float %4737
  %4742 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 25, i64 28, i64 0
  %4743 = load float* %4742, align 4
  %4744 = fcmp oge float %4741, %4743
  %4745 = fcmp uno float %4741, 0.000000e+00
  %4746 = or i1 %4744, %4745
  %4747 = select i1 %4746, float %4741, float %4743
  %4748 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 25, i64 29, i64 0
  %4749 = load float* %4748, align 4
  %4750 = fcmp oge float %4747, %4749
  %4751 = fcmp uno float %4747, 0.000000e+00
  %4752 = or i1 %4750, %4751
  %4753 = select i1 %4752, float %4747, float %4749
  %4754 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 26, i64 27, i64 0
  %4755 = load float* %4754, align 4
  %4756 = fcmp oge float %4753, %4755
  %4757 = fcmp uno float %4753, 0.000000e+00
  %4758 = or i1 %4756, %4757
  %4759 = select i1 %4758, float %4753, float %4755
  %4760 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 26, i64 28, i64 0
  %4761 = load float* %4760, align 4
  %4762 = fcmp oge float %4759, %4761
  %4763 = fcmp uno float %4759, 0.000000e+00
  %4764 = or i1 %4762, %4763
  %4765 = select i1 %4764, float %4759, float %4761
  %4766 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 26, i64 29, i64 0
  %4767 = load float* %4766, align 4
  %4768 = fcmp oge float %4765, %4767
  %4769 = fcmp uno float %4765, 0.000000e+00
  %4770 = or i1 %4768, %4769
  %4771 = select i1 %4770, float %4765, float %4767
  %4772 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 8, i64 9, i64 0
  store float %4771, float* %4772, align 4
  %4773 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 27, i64 0, i64 0
  %4774 = load float* %4773, align 4
  %4775 = fcmp oge float 0xFFF0000000000000, %4774
  %4776 = select i1 %4775, float 0xFFF0000000000000, float %4774
  %4777 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 27, i64 1, i64 0
  %4778 = load float* %4777, align 4
  %4779 = fcmp oge float %4776, %4778
  %4780 = fcmp uno float %4776, 0.000000e+00
  %4781 = or i1 %4779, %4780
  %4782 = select i1 %4781, float %4776, float %4778
  %4783 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 27, i64 2, i64 0
  %4784 = load float* %4783, align 4
  %4785 = fcmp oge float %4782, %4784
  %4786 = fcmp uno float %4782, 0.000000e+00
  %4787 = or i1 %4785, %4786
  %4788 = select i1 %4787, float %4782, float %4784
  %4789 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 28, i64 0, i64 0
  %4790 = load float* %4789, align 4
  %4791 = fcmp oge float %4788, %4790
  %4792 = fcmp uno float %4788, 0.000000e+00
  %4793 = or i1 %4791, %4792
  %4794 = select i1 %4793, float %4788, float %4790
  %4795 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 28, i64 1, i64 0
  %4796 = load float* %4795, align 4
  %4797 = fcmp oge float %4794, %4796
  %4798 = fcmp uno float %4794, 0.000000e+00
  %4799 = or i1 %4797, %4798
  %4800 = select i1 %4799, float %4794, float %4796
  %4801 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 28, i64 2, i64 0
  %4802 = load float* %4801, align 4
  %4803 = fcmp oge float %4800, %4802
  %4804 = fcmp uno float %4800, 0.000000e+00
  %4805 = or i1 %4803, %4804
  %4806 = select i1 %4805, float %4800, float %4802
  %4807 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 29, i64 0, i64 0
  %4808 = load float* %4807, align 4
  %4809 = fcmp oge float %4806, %4808
  %4810 = fcmp uno float %4806, 0.000000e+00
  %4811 = or i1 %4809, %4810
  %4812 = select i1 %4811, float %4806, float %4808
  %4813 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 29, i64 1, i64 0
  %4814 = load float* %4813, align 4
  %4815 = fcmp oge float %4812, %4814
  %4816 = fcmp uno float %4812, 0.000000e+00
  %4817 = or i1 %4815, %4816
  %4818 = select i1 %4817, float %4812, float %4814
  %4819 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 29, i64 2, i64 0
  %4820 = load float* %4819, align 4
  %4821 = fcmp oge float %4818, %4820
  %4822 = fcmp uno float %4818, 0.000000e+00
  %4823 = or i1 %4821, %4822
  %4824 = select i1 %4823, float %4818, float %4820
  %4825 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 9, i64 0, i64 0
  store float %4824, float* %4825, align 4
  %4826 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 27, i64 3, i64 0
  %4827 = load float* %4826, align 4
  %4828 = fcmp oge float 0xFFF0000000000000, %4827
  %4829 = select i1 %4828, float 0xFFF0000000000000, float %4827
  %4830 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 27, i64 4, i64 0
  %4831 = load float* %4830, align 4
  %4832 = fcmp oge float %4829, %4831
  %4833 = fcmp uno float %4829, 0.000000e+00
  %4834 = or i1 %4832, %4833
  %4835 = select i1 %4834, float %4829, float %4831
  %4836 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 27, i64 5, i64 0
  %4837 = load float* %4836, align 4
  %4838 = fcmp oge float %4835, %4837
  %4839 = fcmp uno float %4835, 0.000000e+00
  %4840 = or i1 %4838, %4839
  %4841 = select i1 %4840, float %4835, float %4837
  %4842 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 28, i64 3, i64 0
  %4843 = load float* %4842, align 4
  %4844 = fcmp oge float %4841, %4843
  %4845 = fcmp uno float %4841, 0.000000e+00
  %4846 = or i1 %4844, %4845
  %4847 = select i1 %4846, float %4841, float %4843
  %4848 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 28, i64 4, i64 0
  %4849 = load float* %4848, align 4
  %4850 = fcmp oge float %4847, %4849
  %4851 = fcmp uno float %4847, 0.000000e+00
  %4852 = or i1 %4850, %4851
  %4853 = select i1 %4852, float %4847, float %4849
  %4854 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 28, i64 5, i64 0
  %4855 = load float* %4854, align 4
  %4856 = fcmp oge float %4853, %4855
  %4857 = fcmp uno float %4853, 0.000000e+00
  %4858 = or i1 %4856, %4857
  %4859 = select i1 %4858, float %4853, float %4855
  %4860 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 29, i64 3, i64 0
  %4861 = load float* %4860, align 4
  %4862 = fcmp oge float %4859, %4861
  %4863 = fcmp uno float %4859, 0.000000e+00
  %4864 = or i1 %4862, %4863
  %4865 = select i1 %4864, float %4859, float %4861
  %4866 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 29, i64 4, i64 0
  %4867 = load float* %4866, align 4
  %4868 = fcmp oge float %4865, %4867
  %4869 = fcmp uno float %4865, 0.000000e+00
  %4870 = or i1 %4868, %4869
  %4871 = select i1 %4870, float %4865, float %4867
  %4872 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 29, i64 5, i64 0
  %4873 = load float* %4872, align 4
  %4874 = fcmp oge float %4871, %4873
  %4875 = fcmp uno float %4871, 0.000000e+00
  %4876 = or i1 %4874, %4875
  %4877 = select i1 %4876, float %4871, float %4873
  %4878 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 9, i64 1, i64 0
  store float %4877, float* %4878, align 4
  %4879 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 27, i64 6, i64 0
  %4880 = load float* %4879, align 4
  %4881 = fcmp oge float 0xFFF0000000000000, %4880
  %4882 = select i1 %4881, float 0xFFF0000000000000, float %4880
  %4883 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 27, i64 7, i64 0
  %4884 = load float* %4883, align 4
  %4885 = fcmp oge float %4882, %4884
  %4886 = fcmp uno float %4882, 0.000000e+00
  %4887 = or i1 %4885, %4886
  %4888 = select i1 %4887, float %4882, float %4884
  %4889 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 27, i64 8, i64 0
  %4890 = load float* %4889, align 4
  %4891 = fcmp oge float %4888, %4890
  %4892 = fcmp uno float %4888, 0.000000e+00
  %4893 = or i1 %4891, %4892
  %4894 = select i1 %4893, float %4888, float %4890
  %4895 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 28, i64 6, i64 0
  %4896 = load float* %4895, align 4
  %4897 = fcmp oge float %4894, %4896
  %4898 = fcmp uno float %4894, 0.000000e+00
  %4899 = or i1 %4897, %4898
  %4900 = select i1 %4899, float %4894, float %4896
  %4901 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 28, i64 7, i64 0
  %4902 = load float* %4901, align 4
  %4903 = fcmp oge float %4900, %4902
  %4904 = fcmp uno float %4900, 0.000000e+00
  %4905 = or i1 %4903, %4904
  %4906 = select i1 %4905, float %4900, float %4902
  %4907 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 28, i64 8, i64 0
  %4908 = load float* %4907, align 4
  %4909 = fcmp oge float %4906, %4908
  %4910 = fcmp uno float %4906, 0.000000e+00
  %4911 = or i1 %4909, %4910
  %4912 = select i1 %4911, float %4906, float %4908
  %4913 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 29, i64 6, i64 0
  %4914 = load float* %4913, align 4
  %4915 = fcmp oge float %4912, %4914
  %4916 = fcmp uno float %4912, 0.000000e+00
  %4917 = or i1 %4915, %4916
  %4918 = select i1 %4917, float %4912, float %4914
  %4919 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 29, i64 7, i64 0
  %4920 = load float* %4919, align 4
  %4921 = fcmp oge float %4918, %4920
  %4922 = fcmp uno float %4918, 0.000000e+00
  %4923 = or i1 %4921, %4922
  %4924 = select i1 %4923, float %4918, float %4920
  %4925 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 29, i64 8, i64 0
  %4926 = load float* %4925, align 4
  %4927 = fcmp oge float %4924, %4926
  %4928 = fcmp uno float %4924, 0.000000e+00
  %4929 = or i1 %4927, %4928
  %4930 = select i1 %4929, float %4924, float %4926
  %4931 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 9, i64 2, i64 0
  store float %4930, float* %4931, align 4
  %4932 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 27, i64 9, i64 0
  %4933 = load float* %4932, align 4
  %4934 = fcmp oge float 0xFFF0000000000000, %4933
  %4935 = select i1 %4934, float 0xFFF0000000000000, float %4933
  %4936 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 27, i64 10, i64 0
  %4937 = load float* %4936, align 4
  %4938 = fcmp oge float %4935, %4937
  %4939 = fcmp uno float %4935, 0.000000e+00
  %4940 = or i1 %4938, %4939
  %4941 = select i1 %4940, float %4935, float %4937
  %4942 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 27, i64 11, i64 0
  %4943 = load float* %4942, align 4
  %4944 = fcmp oge float %4941, %4943
  %4945 = fcmp uno float %4941, 0.000000e+00
  %4946 = or i1 %4944, %4945
  %4947 = select i1 %4946, float %4941, float %4943
  %4948 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 28, i64 9, i64 0
  %4949 = load float* %4948, align 4
  %4950 = fcmp oge float %4947, %4949
  %4951 = fcmp uno float %4947, 0.000000e+00
  %4952 = or i1 %4950, %4951
  %4953 = select i1 %4952, float %4947, float %4949
  %4954 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 28, i64 10, i64 0
  %4955 = load float* %4954, align 4
  %4956 = fcmp oge float %4953, %4955
  %4957 = fcmp uno float %4953, 0.000000e+00
  %4958 = or i1 %4956, %4957
  %4959 = select i1 %4958, float %4953, float %4955
  %4960 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 28, i64 11, i64 0
  %4961 = load float* %4960, align 4
  %4962 = fcmp oge float %4959, %4961
  %4963 = fcmp uno float %4959, 0.000000e+00
  %4964 = or i1 %4962, %4963
  %4965 = select i1 %4964, float %4959, float %4961
  %4966 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 29, i64 9, i64 0
  %4967 = load float* %4966, align 4
  %4968 = fcmp oge float %4965, %4967
  %4969 = fcmp uno float %4965, 0.000000e+00
  %4970 = or i1 %4968, %4969
  %4971 = select i1 %4970, float %4965, float %4967
  %4972 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 29, i64 10, i64 0
  %4973 = load float* %4972, align 4
  %4974 = fcmp oge float %4971, %4973
  %4975 = fcmp uno float %4971, 0.000000e+00
  %4976 = or i1 %4974, %4975
  %4977 = select i1 %4976, float %4971, float %4973
  %4978 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 29, i64 11, i64 0
  %4979 = load float* %4978, align 4
  %4980 = fcmp oge float %4977, %4979
  %4981 = fcmp uno float %4977, 0.000000e+00
  %4982 = or i1 %4980, %4981
  %4983 = select i1 %4982, float %4977, float %4979
  %4984 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 9, i64 3, i64 0
  store float %4983, float* %4984, align 4
  %4985 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 27, i64 12, i64 0
  %4986 = load float* %4985, align 4
  %4987 = fcmp oge float 0xFFF0000000000000, %4986
  %4988 = select i1 %4987, float 0xFFF0000000000000, float %4986
  %4989 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 27, i64 13, i64 0
  %4990 = load float* %4989, align 4
  %4991 = fcmp oge float %4988, %4990
  %4992 = fcmp uno float %4988, 0.000000e+00
  %4993 = or i1 %4991, %4992
  %4994 = select i1 %4993, float %4988, float %4990
  %4995 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 27, i64 14, i64 0
  %4996 = load float* %4995, align 4
  %4997 = fcmp oge float %4994, %4996
  %4998 = fcmp uno float %4994, 0.000000e+00
  %4999 = or i1 %4997, %4998
  %5000 = select i1 %4999, float %4994, float %4996
  %5001 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 28, i64 12, i64 0
  %5002 = load float* %5001, align 4
  %5003 = fcmp oge float %5000, %5002
  %5004 = fcmp uno float %5000, 0.000000e+00
  %5005 = or i1 %5003, %5004
  %5006 = select i1 %5005, float %5000, float %5002
  %5007 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 28, i64 13, i64 0
  %5008 = load float* %5007, align 4
  %5009 = fcmp oge float %5006, %5008
  %5010 = fcmp uno float %5006, 0.000000e+00
  %5011 = or i1 %5009, %5010
  %5012 = select i1 %5011, float %5006, float %5008
  %5013 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 28, i64 14, i64 0
  %5014 = load float* %5013, align 4
  %5015 = fcmp oge float %5012, %5014
  %5016 = fcmp uno float %5012, 0.000000e+00
  %5017 = or i1 %5015, %5016
  %5018 = select i1 %5017, float %5012, float %5014
  %5019 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 29, i64 12, i64 0
  %5020 = load float* %5019, align 4
  %5021 = fcmp oge float %5018, %5020
  %5022 = fcmp uno float %5018, 0.000000e+00
  %5023 = or i1 %5021, %5022
  %5024 = select i1 %5023, float %5018, float %5020
  %5025 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 29, i64 13, i64 0
  %5026 = load float* %5025, align 4
  %5027 = fcmp oge float %5024, %5026
  %5028 = fcmp uno float %5024, 0.000000e+00
  %5029 = or i1 %5027, %5028
  %5030 = select i1 %5029, float %5024, float %5026
  %5031 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 29, i64 14, i64 0
  %5032 = load float* %5031, align 4
  %5033 = fcmp oge float %5030, %5032
  %5034 = fcmp uno float %5030, 0.000000e+00
  %5035 = or i1 %5033, %5034
  %5036 = select i1 %5035, float %5030, float %5032
  %5037 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 9, i64 4, i64 0
  store float %5036, float* %5037, align 4
  %5038 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 27, i64 15, i64 0
  %5039 = load float* %5038, align 4
  %5040 = fcmp oge float 0xFFF0000000000000, %5039
  %5041 = select i1 %5040, float 0xFFF0000000000000, float %5039
  %5042 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 27, i64 16, i64 0
  %5043 = load float* %5042, align 4
  %5044 = fcmp oge float %5041, %5043
  %5045 = fcmp uno float %5041, 0.000000e+00
  %5046 = or i1 %5044, %5045
  %5047 = select i1 %5046, float %5041, float %5043
  %5048 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 27, i64 17, i64 0
  %5049 = load float* %5048, align 4
  %5050 = fcmp oge float %5047, %5049
  %5051 = fcmp uno float %5047, 0.000000e+00
  %5052 = or i1 %5050, %5051
  %5053 = select i1 %5052, float %5047, float %5049
  %5054 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 28, i64 15, i64 0
  %5055 = load float* %5054, align 4
  %5056 = fcmp oge float %5053, %5055
  %5057 = fcmp uno float %5053, 0.000000e+00
  %5058 = or i1 %5056, %5057
  %5059 = select i1 %5058, float %5053, float %5055
  %5060 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 28, i64 16, i64 0
  %5061 = load float* %5060, align 4
  %5062 = fcmp oge float %5059, %5061
  %5063 = fcmp uno float %5059, 0.000000e+00
  %5064 = or i1 %5062, %5063
  %5065 = select i1 %5064, float %5059, float %5061
  %5066 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 28, i64 17, i64 0
  %5067 = load float* %5066, align 4
  %5068 = fcmp oge float %5065, %5067
  %5069 = fcmp uno float %5065, 0.000000e+00
  %5070 = or i1 %5068, %5069
  %5071 = select i1 %5070, float %5065, float %5067
  %5072 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 29, i64 15, i64 0
  %5073 = load float* %5072, align 4
  %5074 = fcmp oge float %5071, %5073
  %5075 = fcmp uno float %5071, 0.000000e+00
  %5076 = or i1 %5074, %5075
  %5077 = select i1 %5076, float %5071, float %5073
  %5078 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 29, i64 16, i64 0
  %5079 = load float* %5078, align 4
  %5080 = fcmp oge float %5077, %5079
  %5081 = fcmp uno float %5077, 0.000000e+00
  %5082 = or i1 %5080, %5081
  %5083 = select i1 %5082, float %5077, float %5079
  %5084 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 29, i64 17, i64 0
  %5085 = load float* %5084, align 4
  %5086 = fcmp oge float %5083, %5085
  %5087 = fcmp uno float %5083, 0.000000e+00
  %5088 = or i1 %5086, %5087
  %5089 = select i1 %5088, float %5083, float %5085
  %5090 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 9, i64 5, i64 0
  store float %5089, float* %5090, align 4
  %5091 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 27, i64 18, i64 0
  %5092 = load float* %5091, align 4
  %5093 = fcmp oge float 0xFFF0000000000000, %5092
  %5094 = select i1 %5093, float 0xFFF0000000000000, float %5092
  %5095 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 27, i64 19, i64 0
  %5096 = load float* %5095, align 4
  %5097 = fcmp oge float %5094, %5096
  %5098 = fcmp uno float %5094, 0.000000e+00
  %5099 = or i1 %5097, %5098
  %5100 = select i1 %5099, float %5094, float %5096
  %5101 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 27, i64 20, i64 0
  %5102 = load float* %5101, align 4
  %5103 = fcmp oge float %5100, %5102
  %5104 = fcmp uno float %5100, 0.000000e+00
  %5105 = or i1 %5103, %5104
  %5106 = select i1 %5105, float %5100, float %5102
  %5107 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 28, i64 18, i64 0
  %5108 = load float* %5107, align 4
  %5109 = fcmp oge float %5106, %5108
  %5110 = fcmp uno float %5106, 0.000000e+00
  %5111 = or i1 %5109, %5110
  %5112 = select i1 %5111, float %5106, float %5108
  %5113 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 28, i64 19, i64 0
  %5114 = load float* %5113, align 4
  %5115 = fcmp oge float %5112, %5114
  %5116 = fcmp uno float %5112, 0.000000e+00
  %5117 = or i1 %5115, %5116
  %5118 = select i1 %5117, float %5112, float %5114
  %5119 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 28, i64 20, i64 0
  %5120 = load float* %5119, align 4
  %5121 = fcmp oge float %5118, %5120
  %5122 = fcmp uno float %5118, 0.000000e+00
  %5123 = or i1 %5121, %5122
  %5124 = select i1 %5123, float %5118, float %5120
  %5125 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 29, i64 18, i64 0
  %5126 = load float* %5125, align 4
  %5127 = fcmp oge float %5124, %5126
  %5128 = fcmp uno float %5124, 0.000000e+00
  %5129 = or i1 %5127, %5128
  %5130 = select i1 %5129, float %5124, float %5126
  %5131 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 29, i64 19, i64 0
  %5132 = load float* %5131, align 4
  %5133 = fcmp oge float %5130, %5132
  %5134 = fcmp uno float %5130, 0.000000e+00
  %5135 = or i1 %5133, %5134
  %5136 = select i1 %5135, float %5130, float %5132
  %5137 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 29, i64 20, i64 0
  %5138 = load float* %5137, align 4
  %5139 = fcmp oge float %5136, %5138
  %5140 = fcmp uno float %5136, 0.000000e+00
  %5141 = or i1 %5139, %5140
  %5142 = select i1 %5141, float %5136, float %5138
  %5143 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 9, i64 6, i64 0
  store float %5142, float* %5143, align 4
  %5144 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 27, i64 21, i64 0
  %5145 = load float* %5144, align 4
  %5146 = fcmp oge float 0xFFF0000000000000, %5145
  %5147 = select i1 %5146, float 0xFFF0000000000000, float %5145
  %5148 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 27, i64 22, i64 0
  %5149 = load float* %5148, align 4
  %5150 = fcmp oge float %5147, %5149
  %5151 = fcmp uno float %5147, 0.000000e+00
  %5152 = or i1 %5150, %5151
  %5153 = select i1 %5152, float %5147, float %5149
  %5154 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 27, i64 23, i64 0
  %5155 = load float* %5154, align 4
  %5156 = fcmp oge float %5153, %5155
  %5157 = fcmp uno float %5153, 0.000000e+00
  %5158 = or i1 %5156, %5157
  %5159 = select i1 %5158, float %5153, float %5155
  %5160 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 28, i64 21, i64 0
  %5161 = load float* %5160, align 4
  %5162 = fcmp oge float %5159, %5161
  %5163 = fcmp uno float %5159, 0.000000e+00
  %5164 = or i1 %5162, %5163
  %5165 = select i1 %5164, float %5159, float %5161
  %5166 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 28, i64 22, i64 0
  %5167 = load float* %5166, align 4
  %5168 = fcmp oge float %5165, %5167
  %5169 = fcmp uno float %5165, 0.000000e+00
  %5170 = or i1 %5168, %5169
  %5171 = select i1 %5170, float %5165, float %5167
  %5172 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 28, i64 23, i64 0
  %5173 = load float* %5172, align 4
  %5174 = fcmp oge float %5171, %5173
  %5175 = fcmp uno float %5171, 0.000000e+00
  %5176 = or i1 %5174, %5175
  %5177 = select i1 %5176, float %5171, float %5173
  %5178 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 29, i64 21, i64 0
  %5179 = load float* %5178, align 4
  %5180 = fcmp oge float %5177, %5179
  %5181 = fcmp uno float %5177, 0.000000e+00
  %5182 = or i1 %5180, %5181
  %5183 = select i1 %5182, float %5177, float %5179
  %5184 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 29, i64 22, i64 0
  %5185 = load float* %5184, align 4
  %5186 = fcmp oge float %5183, %5185
  %5187 = fcmp uno float %5183, 0.000000e+00
  %5188 = or i1 %5186, %5187
  %5189 = select i1 %5188, float %5183, float %5185
  %5190 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 29, i64 23, i64 0
  %5191 = load float* %5190, align 4
  %5192 = fcmp oge float %5189, %5191
  %5193 = fcmp uno float %5189, 0.000000e+00
  %5194 = or i1 %5192, %5193
  %5195 = select i1 %5194, float %5189, float %5191
  %5196 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 9, i64 7, i64 0
  store float %5195, float* %5196, align 4
  %5197 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 27, i64 24, i64 0
  %5198 = load float* %5197, align 4
  %5199 = fcmp oge float 0xFFF0000000000000, %5198
  %5200 = select i1 %5199, float 0xFFF0000000000000, float %5198
  %5201 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 27, i64 25, i64 0
  %5202 = load float* %5201, align 4
  %5203 = fcmp oge float %5200, %5202
  %5204 = fcmp uno float %5200, 0.000000e+00
  %5205 = or i1 %5203, %5204
  %5206 = select i1 %5205, float %5200, float %5202
  %5207 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 27, i64 26, i64 0
  %5208 = load float* %5207, align 4
  %5209 = fcmp oge float %5206, %5208
  %5210 = fcmp uno float %5206, 0.000000e+00
  %5211 = or i1 %5209, %5210
  %5212 = select i1 %5211, float %5206, float %5208
  %5213 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 28, i64 24, i64 0
  %5214 = load float* %5213, align 4
  %5215 = fcmp oge float %5212, %5214
  %5216 = fcmp uno float %5212, 0.000000e+00
  %5217 = or i1 %5215, %5216
  %5218 = select i1 %5217, float %5212, float %5214
  %5219 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 28, i64 25, i64 0
  %5220 = load float* %5219, align 4
  %5221 = fcmp oge float %5218, %5220
  %5222 = fcmp uno float %5218, 0.000000e+00
  %5223 = or i1 %5221, %5222
  %5224 = select i1 %5223, float %5218, float %5220
  %5225 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 28, i64 26, i64 0
  %5226 = load float* %5225, align 4
  %5227 = fcmp oge float %5224, %5226
  %5228 = fcmp uno float %5224, 0.000000e+00
  %5229 = or i1 %5227, %5228
  %5230 = select i1 %5229, float %5224, float %5226
  %5231 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 29, i64 24, i64 0
  %5232 = load float* %5231, align 4
  %5233 = fcmp oge float %5230, %5232
  %5234 = fcmp uno float %5230, 0.000000e+00
  %5235 = or i1 %5233, %5234
  %5236 = select i1 %5235, float %5230, float %5232
  %5237 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 29, i64 25, i64 0
  %5238 = load float* %5237, align 4
  %5239 = fcmp oge float %5236, %5238
  %5240 = fcmp uno float %5236, 0.000000e+00
  %5241 = or i1 %5239, %5240
  %5242 = select i1 %5241, float %5236, float %5238
  %5243 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 29, i64 26, i64 0
  %5244 = load float* %5243, align 4
  %5245 = fcmp oge float %5242, %5244
  %5246 = fcmp uno float %5242, 0.000000e+00
  %5247 = or i1 %5245, %5246
  %5248 = select i1 %5247, float %5242, float %5244
  %5249 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 9, i64 8, i64 0
  store float %5248, float* %5249, align 4
  %5250 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 27, i64 27, i64 0
  %5251 = load float* %5250, align 4
  %5252 = fcmp oge float 0xFFF0000000000000, %5251
  %5253 = select i1 %5252, float 0xFFF0000000000000, float %5251
  %5254 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 27, i64 28, i64 0
  %5255 = load float* %5254, align 4
  %5256 = fcmp oge float %5253, %5255
  %5257 = fcmp uno float %5253, 0.000000e+00
  %5258 = or i1 %5256, %5257
  %5259 = select i1 %5258, float %5253, float %5255
  %5260 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 27, i64 29, i64 0
  %5261 = load float* %5260, align 4
  %5262 = fcmp oge float %5259, %5261
  %5263 = fcmp uno float %5259, 0.000000e+00
  %5264 = or i1 %5262, %5263
  %5265 = select i1 %5264, float %5259, float %5261
  %5266 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 28, i64 27, i64 0
  %5267 = load float* %5266, align 4
  %5268 = fcmp oge float %5265, %5267
  %5269 = fcmp uno float %5265, 0.000000e+00
  %5270 = or i1 %5268, %5269
  %5271 = select i1 %5270, float %5265, float %5267
  %5272 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 28, i64 28, i64 0
  %5273 = load float* %5272, align 4
  %5274 = fcmp oge float %5271, %5273
  %5275 = fcmp uno float %5271, 0.000000e+00
  %5276 = or i1 %5274, %5275
  %5277 = select i1 %5276, float %5271, float %5273
  %5278 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 28, i64 29, i64 0
  %5279 = load float* %5278, align 4
  %5280 = fcmp oge float %5277, %5279
  %5281 = fcmp uno float %5277, 0.000000e+00
  %5282 = or i1 %5280, %5281
  %5283 = select i1 %5282, float %5277, float %5279
  %5284 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 29, i64 27, i64 0
  %5285 = load float* %5284, align 4
  %5286 = fcmp oge float %5283, %5285
  %5287 = fcmp uno float %5283, 0.000000e+00
  %5288 = or i1 %5286, %5287
  %5289 = select i1 %5288, float %5283, float %5285
  %5290 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 29, i64 28, i64 0
  %5291 = load float* %5290, align 4
  %5292 = fcmp oge float %5289, %5291
  %5293 = fcmp uno float %5289, 0.000000e+00
  %5294 = or i1 %5292, %5293
  %5295 = select i1 %5294, float %5289, float %5291
  %5296 = getelementptr inbounds [1 x [32 x [32 x [1 x float]]]]* %0, i64 0, i64 0, i64 29, i64 29, i64 0
  %5297 = load float* %5296, align 4
  %5298 = fcmp oge float %5295, %5297
  %5299 = fcmp uno float %5295, 0.000000e+00
  %5300 = or i1 %5298, %5299
  %5301 = select i1 %5300, float %5295, float %5297
  %5302 = getelementptr inbounds [1 x [10 x [10 x [1 x float]]]]* %reduce-window, i64 0, i64 0, i64 9, i64 9, i64 0
  store float %5301, float* %5302, align 4
  %5303 = bitcast i8* %retval to i8**
  store i8* %2, i8** %5303, align 8
  ret void
}

attributes #0 = { "no-frame-pointer-elim"="false" }

!0 = metadata !{i64 4096}
!1 = metadata !{i64 16}
!2 = metadata !{i64 400}
!3 = metadata !{i64 8}
