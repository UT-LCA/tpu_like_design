; ModuleID = '14_maxp_b_f.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux_gnu"

@temp0 = internal global [1 x [10 x [10 x [1 x float]]]] zeroinitializer, align 8
@param0 = internal global [1 x [32 x [32 x [1 x float]]]] zeroinitializer, align 8

; Function Attrs: nounwind
define float @main() #0 {
reduce-window.loop_body.dim.1.lr.ph:
  %0 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 0, i64 0), align 8
  %1 = fcmp ole float %0, 0xFFF0000000000000
  %2 = select i1 %1, float 0xFFF0000000000000, float %0
  %3 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 1, i64 0), align 4
  %4 = fcmp oge float %2, %3
  %5 = fcmp ueq float %2, 0.000000e+00
  %6 = or i1 %4, %5
  %7 = select i1 %6, float %2, float %3
  %8 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 2, i64 0), align 8
  %9 = fcmp oge float %7, %8
  %10 = fcmp ueq float %7, 0.000000e+00
  %11 = or i1 %9, %10
  %12 = select i1 %11, float %7, float %8
  %13 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 0, i64 0), align 8
  %14 = fcmp oge float %12, %13
  %15 = fcmp ueq float %12, 0.000000e+00
  %16 = or i1 %14, %15
  %17 = select i1 %16, float %12, float %13
  %18 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 1, i64 0), align 4
  %19 = fcmp oge float %17, %18
  %20 = fcmp ueq float %17, 0.000000e+00
  %21 = or i1 %19, %20
  %22 = select i1 %21, float %17, float %18
  %23 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 2, i64 0), align 8
  %24 = fcmp oge float %22, %23
  %25 = fcmp ueq float %22, 0.000000e+00
  %26 = or i1 %24, %25
  %27 = select i1 %26, float %22, float %23
  %28 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 0, i64 0), align 8
  %29 = fcmp oge float %27, %28
  %30 = fcmp ueq float %27, 0.000000e+00
  %31 = or i1 %29, %30
  %32 = select i1 %31, float %27, float %28
  %33 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 1, i64 0), align 4
  %34 = fcmp oge float %32, %33
  %35 = fcmp ueq float %32, 0.000000e+00
  %36 = or i1 %34, %35
  %37 = select i1 %36, float %32, float %33
  %38 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 2, i64 0), align 8
  %39 = fcmp oge float %37, %38
  %40 = fcmp ueq float %37, 0.000000e+00
  %41 = or i1 %39, %40
  %42 = select i1 %41, float %37, float %38
  store volatile float %42, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 0, i64 0, i64 0), align 8
  %43 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 3, i64 0), align 4
  %44 = fcmp ole float %43, 0xFFF0000000000000
  %45 = select i1 %44, float 0xFFF0000000000000, float %43
  %46 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 4, i64 0), align 8
  %47 = fcmp oge float %45, %46
  %48 = fcmp ueq float %45, 0.000000e+00
  %49 = or i1 %47, %48
  %50 = select i1 %49, float %45, float %46
  %51 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 5, i64 0), align 4
  %52 = fcmp oge float %50, %51
  %53 = fcmp ueq float %50, 0.000000e+00
  %54 = or i1 %52, %53
  %55 = select i1 %54, float %50, float %51
  %56 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 3, i64 0), align 4
  %57 = fcmp oge float %55, %56
  %58 = fcmp ueq float %55, 0.000000e+00
  %59 = or i1 %57, %58
  %60 = select i1 %59, float %55, float %56
  %61 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 4, i64 0), align 8
  %62 = fcmp oge float %60, %61
  %63 = fcmp ueq float %60, 0.000000e+00
  %64 = or i1 %62, %63
  %65 = select i1 %64, float %60, float %61
  %66 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 5, i64 0), align 4
  %67 = fcmp oge float %65, %66
  %68 = fcmp ueq float %65, 0.000000e+00
  %69 = or i1 %67, %68
  %70 = select i1 %69, float %65, float %66
  %71 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 3, i64 0), align 4
  %72 = fcmp oge float %70, %71
  %73 = fcmp ueq float %70, 0.000000e+00
  %74 = or i1 %72, %73
  %75 = select i1 %74, float %70, float %71
  %76 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 4, i64 0), align 8
  %77 = fcmp oge float %75, %76
  %78 = fcmp ueq float %75, 0.000000e+00
  %79 = or i1 %77, %78
  %80 = select i1 %79, float %75, float %76
  %81 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 5, i64 0), align 4
  %82 = fcmp oge float %80, %81
  %83 = fcmp ueq float %80, 0.000000e+00
  %84 = or i1 %82, %83
  %85 = select i1 %84, float %80, float %81
  store volatile float %85, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 0, i64 1, i64 0), align 4
  %86 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 6, i64 0), align 8
  %87 = fcmp ole float %86, 0xFFF0000000000000
  %88 = select i1 %87, float 0xFFF0000000000000, float %86
  %89 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 7, i64 0), align 4
  %90 = fcmp oge float %88, %89
  %91 = fcmp ueq float %88, 0.000000e+00
  %92 = or i1 %90, %91
  %93 = select i1 %92, float %88, float %89
  %94 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 8, i64 0), align 8
  %95 = fcmp oge float %93, %94
  %96 = fcmp ueq float %93, 0.000000e+00
  %97 = or i1 %95, %96
  %98 = select i1 %97, float %93, float %94
  %99 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 6, i64 0), align 8
  %100 = fcmp oge float %98, %99
  %101 = fcmp ueq float %98, 0.000000e+00
  %102 = or i1 %100, %101
  %103 = select i1 %102, float %98, float %99
  %104 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 7, i64 0), align 4
  %105 = fcmp oge float %103, %104
  %106 = fcmp ueq float %103, 0.000000e+00
  %107 = or i1 %105, %106
  %108 = select i1 %107, float %103, float %104
  %109 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 8, i64 0), align 8
  %110 = fcmp oge float %108, %109
  %111 = fcmp ueq float %108, 0.000000e+00
  %112 = or i1 %110, %111
  %113 = select i1 %112, float %108, float %109
  %114 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 6, i64 0), align 8
  %115 = fcmp oge float %113, %114
  %116 = fcmp ueq float %113, 0.000000e+00
  %117 = or i1 %115, %116
  %118 = select i1 %117, float %113, float %114
  %119 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 7, i64 0), align 4
  %120 = fcmp oge float %118, %119
  %121 = fcmp ueq float %118, 0.000000e+00
  %122 = or i1 %120, %121
  %123 = select i1 %122, float %118, float %119
  %124 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 8, i64 0), align 8
  %125 = fcmp oge float %123, %124
  %126 = fcmp ueq float %123, 0.000000e+00
  %127 = or i1 %125, %126
  %128 = select i1 %127, float %123, float %124
  store volatile float %128, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 0, i64 2, i64 0), align 8
  %129 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 9, i64 0), align 4
  %130 = fcmp ole float %129, 0xFFF0000000000000
  %131 = select i1 %130, float 0xFFF0000000000000, float %129
  %132 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 10, i64 0), align 8
  %133 = fcmp oge float %131, %132
  %134 = fcmp ueq float %131, 0.000000e+00
  %135 = or i1 %133, %134
  %136 = select i1 %135, float %131, float %132
  %137 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 11, i64 0), align 4
  %138 = fcmp oge float %136, %137
  %139 = fcmp ueq float %136, 0.000000e+00
  %140 = or i1 %138, %139
  %141 = select i1 %140, float %136, float %137
  %142 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 9, i64 0), align 4
  %143 = fcmp oge float %141, %142
  %144 = fcmp ueq float %141, 0.000000e+00
  %145 = or i1 %143, %144
  %146 = select i1 %145, float %141, float %142
  %147 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 10, i64 0), align 8
  %148 = fcmp oge float %146, %147
  %149 = fcmp ueq float %146, 0.000000e+00
  %150 = or i1 %148, %149
  %151 = select i1 %150, float %146, float %147
  %152 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 11, i64 0), align 4
  %153 = fcmp oge float %151, %152
  %154 = fcmp ueq float %151, 0.000000e+00
  %155 = or i1 %153, %154
  %156 = select i1 %155, float %151, float %152
  %157 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 9, i64 0), align 4
  %158 = fcmp oge float %156, %157
  %159 = fcmp ueq float %156, 0.000000e+00
  %160 = or i1 %158, %159
  %161 = select i1 %160, float %156, float %157
  %162 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 10, i64 0), align 8
  %163 = fcmp oge float %161, %162
  %164 = fcmp ueq float %161, 0.000000e+00
  %165 = or i1 %163, %164
  %166 = select i1 %165, float %161, float %162
  %167 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 11, i64 0), align 4
  %168 = fcmp oge float %166, %167
  %169 = fcmp ueq float %166, 0.000000e+00
  %170 = or i1 %168, %169
  %171 = select i1 %170, float %166, float %167
  store volatile float %171, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 0, i64 3, i64 0), align 4
  %172 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 12, i64 0), align 8
  %173 = fcmp ole float %172, 0xFFF0000000000000
  %174 = select i1 %173, float 0xFFF0000000000000, float %172
  %175 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 13, i64 0), align 4
  %176 = fcmp oge float %174, %175
  %177 = fcmp ueq float %174, 0.000000e+00
  %178 = or i1 %176, %177
  %179 = select i1 %178, float %174, float %175
  %180 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 14, i64 0), align 8
  %181 = fcmp oge float %179, %180
  %182 = fcmp ueq float %179, 0.000000e+00
  %183 = or i1 %181, %182
  %184 = select i1 %183, float %179, float %180
  %185 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 12, i64 0), align 8
  %186 = fcmp oge float %184, %185
  %187 = fcmp ueq float %184, 0.000000e+00
  %188 = or i1 %186, %187
  %189 = select i1 %188, float %184, float %185
  %190 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 13, i64 0), align 4
  %191 = fcmp oge float %189, %190
  %192 = fcmp ueq float %189, 0.000000e+00
  %193 = or i1 %191, %192
  %194 = select i1 %193, float %189, float %190
  %195 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 14, i64 0), align 8
  %196 = fcmp oge float %194, %195
  %197 = fcmp ueq float %194, 0.000000e+00
  %198 = or i1 %196, %197
  %199 = select i1 %198, float %194, float %195
  %200 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 12, i64 0), align 8
  %201 = fcmp oge float %199, %200
  %202 = fcmp ueq float %199, 0.000000e+00
  %203 = or i1 %201, %202
  %204 = select i1 %203, float %199, float %200
  %205 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 13, i64 0), align 4
  %206 = fcmp oge float %204, %205
  %207 = fcmp ueq float %204, 0.000000e+00
  %208 = or i1 %206, %207
  %209 = select i1 %208, float %204, float %205
  %210 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 14, i64 0), align 8
  %211 = fcmp oge float %209, %210
  %212 = fcmp ueq float %209, 0.000000e+00
  %213 = or i1 %211, %212
  %214 = select i1 %213, float %209, float %210
  store volatile float %214, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 0, i64 4, i64 0), align 8
  %215 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 15, i64 0), align 4
  %216 = fcmp ole float %215, 0xFFF0000000000000
  %217 = select i1 %216, float 0xFFF0000000000000, float %215
  %218 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 16, i64 0), align 8
  %219 = fcmp oge float %217, %218
  %220 = fcmp ueq float %217, 0.000000e+00
  %221 = or i1 %219, %220
  %222 = select i1 %221, float %217, float %218
  %223 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 17, i64 0), align 4
  %224 = fcmp oge float %222, %223
  %225 = fcmp ueq float %222, 0.000000e+00
  %226 = or i1 %224, %225
  %227 = select i1 %226, float %222, float %223
  %228 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 15, i64 0), align 4
  %229 = fcmp oge float %227, %228
  %230 = fcmp ueq float %227, 0.000000e+00
  %231 = or i1 %229, %230
  %232 = select i1 %231, float %227, float %228
  %233 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 16, i64 0), align 8
  %234 = fcmp oge float %232, %233
  %235 = fcmp ueq float %232, 0.000000e+00
  %236 = or i1 %234, %235
  %237 = select i1 %236, float %232, float %233
  %238 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 17, i64 0), align 4
  %239 = fcmp oge float %237, %238
  %240 = fcmp ueq float %237, 0.000000e+00
  %241 = or i1 %239, %240
  %242 = select i1 %241, float %237, float %238
  %243 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 15, i64 0), align 4
  %244 = fcmp oge float %242, %243
  %245 = fcmp ueq float %242, 0.000000e+00
  %246 = or i1 %244, %245
  %247 = select i1 %246, float %242, float %243
  %248 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 16, i64 0), align 8
  %249 = fcmp oge float %247, %248
  %250 = fcmp ueq float %247, 0.000000e+00
  %251 = or i1 %249, %250
  %252 = select i1 %251, float %247, float %248
  %253 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 17, i64 0), align 4
  %254 = fcmp oge float %252, %253
  %255 = fcmp ueq float %252, 0.000000e+00
  %256 = or i1 %254, %255
  %257 = select i1 %256, float %252, float %253
  store volatile float %257, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 0, i64 5, i64 0), align 4
  %258 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 18, i64 0), align 8
  %259 = fcmp ole float %258, 0xFFF0000000000000
  %260 = select i1 %259, float 0xFFF0000000000000, float %258
  %261 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 19, i64 0), align 4
  %262 = fcmp oge float %260, %261
  %263 = fcmp ueq float %260, 0.000000e+00
  %264 = or i1 %262, %263
  %265 = select i1 %264, float %260, float %261
  %266 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 20, i64 0), align 8
  %267 = fcmp oge float %265, %266
  %268 = fcmp ueq float %265, 0.000000e+00
  %269 = or i1 %267, %268
  %270 = select i1 %269, float %265, float %266
  %271 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 18, i64 0), align 8
  %272 = fcmp oge float %270, %271
  %273 = fcmp ueq float %270, 0.000000e+00
  %274 = or i1 %272, %273
  %275 = select i1 %274, float %270, float %271
  %276 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 19, i64 0), align 4
  %277 = fcmp oge float %275, %276
  %278 = fcmp ueq float %275, 0.000000e+00
  %279 = or i1 %277, %278
  %280 = select i1 %279, float %275, float %276
  %281 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 20, i64 0), align 8
  %282 = fcmp oge float %280, %281
  %283 = fcmp ueq float %280, 0.000000e+00
  %284 = or i1 %282, %283
  %285 = select i1 %284, float %280, float %281
  %286 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 18, i64 0), align 8
  %287 = fcmp oge float %285, %286
  %288 = fcmp ueq float %285, 0.000000e+00
  %289 = or i1 %287, %288
  %290 = select i1 %289, float %285, float %286
  %291 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 19, i64 0), align 4
  %292 = fcmp oge float %290, %291
  %293 = fcmp ueq float %290, 0.000000e+00
  %294 = or i1 %292, %293
  %295 = select i1 %294, float %290, float %291
  %296 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 20, i64 0), align 8
  %297 = fcmp oge float %295, %296
  %298 = fcmp ueq float %295, 0.000000e+00
  %299 = or i1 %297, %298
  %300 = select i1 %299, float %295, float %296
  store volatile float %300, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 0, i64 6, i64 0), align 8
  %301 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 21, i64 0), align 4
  %302 = fcmp ole float %301, 0xFFF0000000000000
  %303 = select i1 %302, float 0xFFF0000000000000, float %301
  %304 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 22, i64 0), align 8
  %305 = fcmp oge float %303, %304
  %306 = fcmp ueq float %303, 0.000000e+00
  %307 = or i1 %305, %306
  %308 = select i1 %307, float %303, float %304
  %309 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 23, i64 0), align 4
  %310 = fcmp oge float %308, %309
  %311 = fcmp ueq float %308, 0.000000e+00
  %312 = or i1 %310, %311
  %313 = select i1 %312, float %308, float %309
  %314 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 21, i64 0), align 4
  %315 = fcmp oge float %313, %314
  %316 = fcmp ueq float %313, 0.000000e+00
  %317 = or i1 %315, %316
  %318 = select i1 %317, float %313, float %314
  %319 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 22, i64 0), align 8
  %320 = fcmp oge float %318, %319
  %321 = fcmp ueq float %318, 0.000000e+00
  %322 = or i1 %320, %321
  %323 = select i1 %322, float %318, float %319
  %324 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 23, i64 0), align 4
  %325 = fcmp oge float %323, %324
  %326 = fcmp ueq float %323, 0.000000e+00
  %327 = or i1 %325, %326
  %328 = select i1 %327, float %323, float %324
  %329 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 21, i64 0), align 4
  %330 = fcmp oge float %328, %329
  %331 = fcmp ueq float %328, 0.000000e+00
  %332 = or i1 %330, %331
  %333 = select i1 %332, float %328, float %329
  %334 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 22, i64 0), align 8
  %335 = fcmp oge float %333, %334
  %336 = fcmp ueq float %333, 0.000000e+00
  %337 = or i1 %335, %336
  %338 = select i1 %337, float %333, float %334
  %339 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 23, i64 0), align 4
  %340 = fcmp oge float %338, %339
  %341 = fcmp ueq float %338, 0.000000e+00
  %342 = or i1 %340, %341
  %343 = select i1 %342, float %338, float %339
  store volatile float %343, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 0, i64 7, i64 0), align 4
  %344 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 24, i64 0), align 8
  %345 = fcmp ole float %344, 0xFFF0000000000000
  %346 = select i1 %345, float 0xFFF0000000000000, float %344
  %347 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 25, i64 0), align 4
  %348 = fcmp oge float %346, %347
  %349 = fcmp ueq float %346, 0.000000e+00
  %350 = or i1 %348, %349
  %351 = select i1 %350, float %346, float %347
  %352 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 26, i64 0), align 8
  %353 = fcmp oge float %351, %352
  %354 = fcmp ueq float %351, 0.000000e+00
  %355 = or i1 %353, %354
  %356 = select i1 %355, float %351, float %352
  %357 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 24, i64 0), align 8
  %358 = fcmp oge float %356, %357
  %359 = fcmp ueq float %356, 0.000000e+00
  %360 = or i1 %358, %359
  %361 = select i1 %360, float %356, float %357
  %362 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 25, i64 0), align 4
  %363 = fcmp oge float %361, %362
  %364 = fcmp ueq float %361, 0.000000e+00
  %365 = or i1 %363, %364
  %366 = select i1 %365, float %361, float %362
  %367 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 26, i64 0), align 8
  %368 = fcmp oge float %366, %367
  %369 = fcmp ueq float %366, 0.000000e+00
  %370 = or i1 %368, %369
  %371 = select i1 %370, float %366, float %367
  %372 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 24, i64 0), align 8
  %373 = fcmp oge float %371, %372
  %374 = fcmp ueq float %371, 0.000000e+00
  %375 = or i1 %373, %374
  %376 = select i1 %375, float %371, float %372
  %377 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 25, i64 0), align 4
  %378 = fcmp oge float %376, %377
  %379 = fcmp ueq float %376, 0.000000e+00
  %380 = or i1 %378, %379
  %381 = select i1 %380, float %376, float %377
  %382 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 26, i64 0), align 8
  %383 = fcmp oge float %381, %382
  %384 = fcmp ueq float %381, 0.000000e+00
  %385 = or i1 %383, %384
  %386 = select i1 %385, float %381, float %382
  store volatile float %386, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 0, i64 8, i64 0), align 8
  %387 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 27, i64 0), align 4
  %388 = fcmp ole float %387, 0xFFF0000000000000
  %389 = select i1 %388, float 0xFFF0000000000000, float %387
  %390 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 28, i64 0), align 8
  %391 = fcmp oge float %389, %390
  %392 = fcmp ueq float %389, 0.000000e+00
  %393 = or i1 %391, %392
  %394 = select i1 %393, float %389, float %390
  %395 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 0, i64 29, i64 0), align 4
  %396 = fcmp oge float %394, %395
  %397 = fcmp ueq float %394, 0.000000e+00
  %398 = or i1 %396, %397
  %399 = select i1 %398, float %394, float %395
  %400 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 27, i64 0), align 4
  %401 = fcmp oge float %399, %400
  %402 = fcmp ueq float %399, 0.000000e+00
  %403 = or i1 %401, %402
  %404 = select i1 %403, float %399, float %400
  %405 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 28, i64 0), align 8
  %406 = fcmp oge float %404, %405
  %407 = fcmp ueq float %404, 0.000000e+00
  %408 = or i1 %406, %407
  %409 = select i1 %408, float %404, float %405
  %410 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 1, i64 29, i64 0), align 4
  %411 = fcmp oge float %409, %410
  %412 = fcmp ueq float %409, 0.000000e+00
  %413 = or i1 %411, %412
  %414 = select i1 %413, float %409, float %410
  %415 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 27, i64 0), align 4
  %416 = fcmp oge float %414, %415
  %417 = fcmp ueq float %414, 0.000000e+00
  %418 = or i1 %416, %417
  %419 = select i1 %418, float %414, float %415
  %420 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 28, i64 0), align 8
  %421 = fcmp oge float %419, %420
  %422 = fcmp ueq float %419, 0.000000e+00
  %423 = or i1 %421, %422
  %424 = select i1 %423, float %419, float %420
  %425 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 2, i64 29, i64 0), align 4
  %426 = fcmp oge float %424, %425
  %427 = fcmp ueq float %424, 0.000000e+00
  %428 = or i1 %426, %427
  %429 = select i1 %428, float %424, float %425
  store volatile float %429, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 0, i64 9, i64 0), align 4
  %430 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 0, i64 0), align 8
  %431 = fcmp ole float %430, 0xFFF0000000000000
  %432 = select i1 %431, float 0xFFF0000000000000, float %430
  %433 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 1, i64 0), align 4
  %434 = fcmp oge float %432, %433
  %435 = fcmp ueq float %432, 0.000000e+00
  %436 = or i1 %434, %435
  %437 = select i1 %436, float %432, float %433
  %438 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 2, i64 0), align 8
  %439 = fcmp oge float %437, %438
  %440 = fcmp ueq float %437, 0.000000e+00
  %441 = or i1 %439, %440
  %442 = select i1 %441, float %437, float %438
  %443 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 0, i64 0), align 8
  %444 = fcmp oge float %442, %443
  %445 = fcmp ueq float %442, 0.000000e+00
  %446 = or i1 %444, %445
  %447 = select i1 %446, float %442, float %443
  %448 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 1, i64 0), align 4
  %449 = fcmp oge float %447, %448
  %450 = fcmp ueq float %447, 0.000000e+00
  %451 = or i1 %449, %450
  %452 = select i1 %451, float %447, float %448
  %453 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 2, i64 0), align 8
  %454 = fcmp oge float %452, %453
  %455 = fcmp ueq float %452, 0.000000e+00
  %456 = or i1 %454, %455
  %457 = select i1 %456, float %452, float %453
  %458 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 0, i64 0), align 8
  %459 = fcmp oge float %457, %458
  %460 = fcmp ueq float %457, 0.000000e+00
  %461 = or i1 %459, %460
  %462 = select i1 %461, float %457, float %458
  %463 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 1, i64 0), align 4
  %464 = fcmp oge float %462, %463
  %465 = fcmp ueq float %462, 0.000000e+00
  %466 = or i1 %464, %465
  %467 = select i1 %466, float %462, float %463
  %468 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 2, i64 0), align 8
  %469 = fcmp oge float %467, %468
  %470 = fcmp ueq float %467, 0.000000e+00
  %471 = or i1 %469, %470
  %472 = select i1 %471, float %467, float %468
  store volatile float %472, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 1, i64 0, i64 0), align 8
  %473 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 3, i64 0), align 4
  %474 = fcmp ole float %473, 0xFFF0000000000000
  %475 = select i1 %474, float 0xFFF0000000000000, float %473
  %476 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 4, i64 0), align 8
  %477 = fcmp oge float %475, %476
  %478 = fcmp ueq float %475, 0.000000e+00
  %479 = or i1 %477, %478
  %480 = select i1 %479, float %475, float %476
  %481 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 5, i64 0), align 4
  %482 = fcmp oge float %480, %481
  %483 = fcmp ueq float %480, 0.000000e+00
  %484 = or i1 %482, %483
  %485 = select i1 %484, float %480, float %481
  %486 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 3, i64 0), align 4
  %487 = fcmp oge float %485, %486
  %488 = fcmp ueq float %485, 0.000000e+00
  %489 = or i1 %487, %488
  %490 = select i1 %489, float %485, float %486
  %491 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 4, i64 0), align 8
  %492 = fcmp oge float %490, %491
  %493 = fcmp ueq float %490, 0.000000e+00
  %494 = or i1 %492, %493
  %495 = select i1 %494, float %490, float %491
  %496 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 5, i64 0), align 4
  %497 = fcmp oge float %495, %496
  %498 = fcmp ueq float %495, 0.000000e+00
  %499 = or i1 %497, %498
  %500 = select i1 %499, float %495, float %496
  %501 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 3, i64 0), align 4
  %502 = fcmp oge float %500, %501
  %503 = fcmp ueq float %500, 0.000000e+00
  %504 = or i1 %502, %503
  %505 = select i1 %504, float %500, float %501
  %506 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 4, i64 0), align 8
  %507 = fcmp oge float %505, %506
  %508 = fcmp ueq float %505, 0.000000e+00
  %509 = or i1 %507, %508
  %510 = select i1 %509, float %505, float %506
  %511 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 5, i64 0), align 4
  %512 = fcmp oge float %510, %511
  %513 = fcmp ueq float %510, 0.000000e+00
  %514 = or i1 %512, %513
  %515 = select i1 %514, float %510, float %511
  store volatile float %515, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 1, i64 1, i64 0), align 4
  %516 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 6, i64 0), align 8
  %517 = fcmp ole float %516, 0xFFF0000000000000
  %518 = select i1 %517, float 0xFFF0000000000000, float %516
  %519 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 7, i64 0), align 4
  %520 = fcmp oge float %518, %519
  %521 = fcmp ueq float %518, 0.000000e+00
  %522 = or i1 %520, %521
  %523 = select i1 %522, float %518, float %519
  %524 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 8, i64 0), align 8
  %525 = fcmp oge float %523, %524
  %526 = fcmp ueq float %523, 0.000000e+00
  %527 = or i1 %525, %526
  %528 = select i1 %527, float %523, float %524
  %529 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 6, i64 0), align 8
  %530 = fcmp oge float %528, %529
  %531 = fcmp ueq float %528, 0.000000e+00
  %532 = or i1 %530, %531
  %533 = select i1 %532, float %528, float %529
  %534 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 7, i64 0), align 4
  %535 = fcmp oge float %533, %534
  %536 = fcmp ueq float %533, 0.000000e+00
  %537 = or i1 %535, %536
  %538 = select i1 %537, float %533, float %534
  %539 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 8, i64 0), align 8
  %540 = fcmp oge float %538, %539
  %541 = fcmp ueq float %538, 0.000000e+00
  %542 = or i1 %540, %541
  %543 = select i1 %542, float %538, float %539
  %544 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 6, i64 0), align 8
  %545 = fcmp oge float %543, %544
  %546 = fcmp ueq float %543, 0.000000e+00
  %547 = or i1 %545, %546
  %548 = select i1 %547, float %543, float %544
  %549 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 7, i64 0), align 4
  %550 = fcmp oge float %548, %549
  %551 = fcmp ueq float %548, 0.000000e+00
  %552 = or i1 %550, %551
  %553 = select i1 %552, float %548, float %549
  %554 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 8, i64 0), align 8
  %555 = fcmp oge float %553, %554
  %556 = fcmp ueq float %553, 0.000000e+00
  %557 = or i1 %555, %556
  %558 = select i1 %557, float %553, float %554
  store volatile float %558, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 1, i64 2, i64 0), align 8
  %559 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 9, i64 0), align 4
  %560 = fcmp ole float %559, 0xFFF0000000000000
  %561 = select i1 %560, float 0xFFF0000000000000, float %559
  %562 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 10, i64 0), align 8
  %563 = fcmp oge float %561, %562
  %564 = fcmp ueq float %561, 0.000000e+00
  %565 = or i1 %563, %564
  %566 = select i1 %565, float %561, float %562
  %567 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 11, i64 0), align 4
  %568 = fcmp oge float %566, %567
  %569 = fcmp ueq float %566, 0.000000e+00
  %570 = or i1 %568, %569
  %571 = select i1 %570, float %566, float %567
  %572 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 9, i64 0), align 4
  %573 = fcmp oge float %571, %572
  %574 = fcmp ueq float %571, 0.000000e+00
  %575 = or i1 %573, %574
  %576 = select i1 %575, float %571, float %572
  %577 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 10, i64 0), align 8
  %578 = fcmp oge float %576, %577
  %579 = fcmp ueq float %576, 0.000000e+00
  %580 = or i1 %578, %579
  %581 = select i1 %580, float %576, float %577
  %582 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 11, i64 0), align 4
  %583 = fcmp oge float %581, %582
  %584 = fcmp ueq float %581, 0.000000e+00
  %585 = or i1 %583, %584
  %586 = select i1 %585, float %581, float %582
  %587 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 9, i64 0), align 4
  %588 = fcmp oge float %586, %587
  %589 = fcmp ueq float %586, 0.000000e+00
  %590 = or i1 %588, %589
  %591 = select i1 %590, float %586, float %587
  %592 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 10, i64 0), align 8
  %593 = fcmp oge float %591, %592
  %594 = fcmp ueq float %591, 0.000000e+00
  %595 = or i1 %593, %594
  %596 = select i1 %595, float %591, float %592
  %597 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 11, i64 0), align 4
  %598 = fcmp oge float %596, %597
  %599 = fcmp ueq float %596, 0.000000e+00
  %600 = or i1 %598, %599
  %601 = select i1 %600, float %596, float %597
  store volatile float %601, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 1, i64 3, i64 0), align 4
  %602 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 12, i64 0), align 8
  %603 = fcmp ole float %602, 0xFFF0000000000000
  %604 = select i1 %603, float 0xFFF0000000000000, float %602
  %605 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 13, i64 0), align 4
  %606 = fcmp oge float %604, %605
  %607 = fcmp ueq float %604, 0.000000e+00
  %608 = or i1 %606, %607
  %609 = select i1 %608, float %604, float %605
  %610 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 14, i64 0), align 8
  %611 = fcmp oge float %609, %610
  %612 = fcmp ueq float %609, 0.000000e+00
  %613 = or i1 %611, %612
  %614 = select i1 %613, float %609, float %610
  %615 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 12, i64 0), align 8
  %616 = fcmp oge float %614, %615
  %617 = fcmp ueq float %614, 0.000000e+00
  %618 = or i1 %616, %617
  %619 = select i1 %618, float %614, float %615
  %620 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 13, i64 0), align 4
  %621 = fcmp oge float %619, %620
  %622 = fcmp ueq float %619, 0.000000e+00
  %623 = or i1 %621, %622
  %624 = select i1 %623, float %619, float %620
  %625 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 14, i64 0), align 8
  %626 = fcmp oge float %624, %625
  %627 = fcmp ueq float %624, 0.000000e+00
  %628 = or i1 %626, %627
  %629 = select i1 %628, float %624, float %625
  %630 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 12, i64 0), align 8
  %631 = fcmp oge float %629, %630
  %632 = fcmp ueq float %629, 0.000000e+00
  %633 = or i1 %631, %632
  %634 = select i1 %633, float %629, float %630
  %635 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 13, i64 0), align 4
  %636 = fcmp oge float %634, %635
  %637 = fcmp ueq float %634, 0.000000e+00
  %638 = or i1 %636, %637
  %639 = select i1 %638, float %634, float %635
  %640 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 14, i64 0), align 8
  %641 = fcmp oge float %639, %640
  %642 = fcmp ueq float %639, 0.000000e+00
  %643 = or i1 %641, %642
  %644 = select i1 %643, float %639, float %640
  store volatile float %644, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 1, i64 4, i64 0), align 8
  %645 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 15, i64 0), align 4
  %646 = fcmp ole float %645, 0xFFF0000000000000
  %647 = select i1 %646, float 0xFFF0000000000000, float %645
  %648 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 16, i64 0), align 8
  %649 = fcmp oge float %647, %648
  %650 = fcmp ueq float %647, 0.000000e+00
  %651 = or i1 %649, %650
  %652 = select i1 %651, float %647, float %648
  %653 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 17, i64 0), align 4
  %654 = fcmp oge float %652, %653
  %655 = fcmp ueq float %652, 0.000000e+00
  %656 = or i1 %654, %655
  %657 = select i1 %656, float %652, float %653
  %658 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 15, i64 0), align 4
  %659 = fcmp oge float %657, %658
  %660 = fcmp ueq float %657, 0.000000e+00
  %661 = or i1 %659, %660
  %662 = select i1 %661, float %657, float %658
  %663 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 16, i64 0), align 8
  %664 = fcmp oge float %662, %663
  %665 = fcmp ueq float %662, 0.000000e+00
  %666 = or i1 %664, %665
  %667 = select i1 %666, float %662, float %663
  %668 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 17, i64 0), align 4
  %669 = fcmp oge float %667, %668
  %670 = fcmp ueq float %667, 0.000000e+00
  %671 = or i1 %669, %670
  %672 = select i1 %671, float %667, float %668
  %673 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 15, i64 0), align 4
  %674 = fcmp oge float %672, %673
  %675 = fcmp ueq float %672, 0.000000e+00
  %676 = or i1 %674, %675
  %677 = select i1 %676, float %672, float %673
  %678 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 16, i64 0), align 8
  %679 = fcmp oge float %677, %678
  %680 = fcmp ueq float %677, 0.000000e+00
  %681 = or i1 %679, %680
  %682 = select i1 %681, float %677, float %678
  %683 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 17, i64 0), align 4
  %684 = fcmp oge float %682, %683
  %685 = fcmp ueq float %682, 0.000000e+00
  %686 = or i1 %684, %685
  %687 = select i1 %686, float %682, float %683
  store volatile float %687, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 1, i64 5, i64 0), align 4
  %688 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 18, i64 0), align 8
  %689 = fcmp ole float %688, 0xFFF0000000000000
  %690 = select i1 %689, float 0xFFF0000000000000, float %688
  %691 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 19, i64 0), align 4
  %692 = fcmp oge float %690, %691
  %693 = fcmp ueq float %690, 0.000000e+00
  %694 = or i1 %692, %693
  %695 = select i1 %694, float %690, float %691
  %696 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 20, i64 0), align 8
  %697 = fcmp oge float %695, %696
  %698 = fcmp ueq float %695, 0.000000e+00
  %699 = or i1 %697, %698
  %700 = select i1 %699, float %695, float %696
  %701 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 18, i64 0), align 8
  %702 = fcmp oge float %700, %701
  %703 = fcmp ueq float %700, 0.000000e+00
  %704 = or i1 %702, %703
  %705 = select i1 %704, float %700, float %701
  %706 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 19, i64 0), align 4
  %707 = fcmp oge float %705, %706
  %708 = fcmp ueq float %705, 0.000000e+00
  %709 = or i1 %707, %708
  %710 = select i1 %709, float %705, float %706
  %711 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 20, i64 0), align 8
  %712 = fcmp oge float %710, %711
  %713 = fcmp ueq float %710, 0.000000e+00
  %714 = or i1 %712, %713
  %715 = select i1 %714, float %710, float %711
  %716 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 18, i64 0), align 8
  %717 = fcmp oge float %715, %716
  %718 = fcmp ueq float %715, 0.000000e+00
  %719 = or i1 %717, %718
  %720 = select i1 %719, float %715, float %716
  %721 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 19, i64 0), align 4
  %722 = fcmp oge float %720, %721
  %723 = fcmp ueq float %720, 0.000000e+00
  %724 = or i1 %722, %723
  %725 = select i1 %724, float %720, float %721
  %726 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 20, i64 0), align 8
  %727 = fcmp oge float %725, %726
  %728 = fcmp ueq float %725, 0.000000e+00
  %729 = or i1 %727, %728
  %730 = select i1 %729, float %725, float %726
  store volatile float %730, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 1, i64 6, i64 0), align 8
  %731 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 21, i64 0), align 4
  %732 = fcmp ole float %731, 0xFFF0000000000000
  %733 = select i1 %732, float 0xFFF0000000000000, float %731
  %734 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 22, i64 0), align 8
  %735 = fcmp oge float %733, %734
  %736 = fcmp ueq float %733, 0.000000e+00
  %737 = or i1 %735, %736
  %738 = select i1 %737, float %733, float %734
  %739 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 23, i64 0), align 4
  %740 = fcmp oge float %738, %739
  %741 = fcmp ueq float %738, 0.000000e+00
  %742 = or i1 %740, %741
  %743 = select i1 %742, float %738, float %739
  %744 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 21, i64 0), align 4
  %745 = fcmp oge float %743, %744
  %746 = fcmp ueq float %743, 0.000000e+00
  %747 = or i1 %745, %746
  %748 = select i1 %747, float %743, float %744
  %749 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 22, i64 0), align 8
  %750 = fcmp oge float %748, %749
  %751 = fcmp ueq float %748, 0.000000e+00
  %752 = or i1 %750, %751
  %753 = select i1 %752, float %748, float %749
  %754 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 23, i64 0), align 4
  %755 = fcmp oge float %753, %754
  %756 = fcmp ueq float %753, 0.000000e+00
  %757 = or i1 %755, %756
  %758 = select i1 %757, float %753, float %754
  %759 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 21, i64 0), align 4
  %760 = fcmp oge float %758, %759
  %761 = fcmp ueq float %758, 0.000000e+00
  %762 = or i1 %760, %761
  %763 = select i1 %762, float %758, float %759
  %764 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 22, i64 0), align 8
  %765 = fcmp oge float %763, %764
  %766 = fcmp ueq float %763, 0.000000e+00
  %767 = or i1 %765, %766
  %768 = select i1 %767, float %763, float %764
  %769 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 23, i64 0), align 4
  %770 = fcmp oge float %768, %769
  %771 = fcmp ueq float %768, 0.000000e+00
  %772 = or i1 %770, %771
  %773 = select i1 %772, float %768, float %769
  store volatile float %773, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 1, i64 7, i64 0), align 4
  %774 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 24, i64 0), align 8
  %775 = fcmp ole float %774, 0xFFF0000000000000
  %776 = select i1 %775, float 0xFFF0000000000000, float %774
  %777 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 25, i64 0), align 4
  %778 = fcmp oge float %776, %777
  %779 = fcmp ueq float %776, 0.000000e+00
  %780 = or i1 %778, %779
  %781 = select i1 %780, float %776, float %777
  %782 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 26, i64 0), align 8
  %783 = fcmp oge float %781, %782
  %784 = fcmp ueq float %781, 0.000000e+00
  %785 = or i1 %783, %784
  %786 = select i1 %785, float %781, float %782
  %787 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 24, i64 0), align 8
  %788 = fcmp oge float %786, %787
  %789 = fcmp ueq float %786, 0.000000e+00
  %790 = or i1 %788, %789
  %791 = select i1 %790, float %786, float %787
  %792 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 25, i64 0), align 4
  %793 = fcmp oge float %791, %792
  %794 = fcmp ueq float %791, 0.000000e+00
  %795 = or i1 %793, %794
  %796 = select i1 %795, float %791, float %792
  %797 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 26, i64 0), align 8
  %798 = fcmp oge float %796, %797
  %799 = fcmp ueq float %796, 0.000000e+00
  %800 = or i1 %798, %799
  %801 = select i1 %800, float %796, float %797
  %802 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 24, i64 0), align 8
  %803 = fcmp oge float %801, %802
  %804 = fcmp ueq float %801, 0.000000e+00
  %805 = or i1 %803, %804
  %806 = select i1 %805, float %801, float %802
  %807 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 25, i64 0), align 4
  %808 = fcmp oge float %806, %807
  %809 = fcmp ueq float %806, 0.000000e+00
  %810 = or i1 %808, %809
  %811 = select i1 %810, float %806, float %807
  %812 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 26, i64 0), align 8
  %813 = fcmp oge float %811, %812
  %814 = fcmp ueq float %811, 0.000000e+00
  %815 = or i1 %813, %814
  %816 = select i1 %815, float %811, float %812
  store volatile float %816, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 1, i64 8, i64 0), align 8
  %817 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 27, i64 0), align 4
  %818 = fcmp ole float %817, 0xFFF0000000000000
  %819 = select i1 %818, float 0xFFF0000000000000, float %817
  %820 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 28, i64 0), align 8
  %821 = fcmp oge float %819, %820
  %822 = fcmp ueq float %819, 0.000000e+00
  %823 = or i1 %821, %822
  %824 = select i1 %823, float %819, float %820
  %825 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 3, i64 29, i64 0), align 4
  %826 = fcmp oge float %824, %825
  %827 = fcmp ueq float %824, 0.000000e+00
  %828 = or i1 %826, %827
  %829 = select i1 %828, float %824, float %825
  %830 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 27, i64 0), align 4
  %831 = fcmp oge float %829, %830
  %832 = fcmp ueq float %829, 0.000000e+00
  %833 = or i1 %831, %832
  %834 = select i1 %833, float %829, float %830
  %835 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 28, i64 0), align 8
  %836 = fcmp oge float %834, %835
  %837 = fcmp ueq float %834, 0.000000e+00
  %838 = or i1 %836, %837
  %839 = select i1 %838, float %834, float %835
  %840 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 4, i64 29, i64 0), align 4
  %841 = fcmp oge float %839, %840
  %842 = fcmp ueq float %839, 0.000000e+00
  %843 = or i1 %841, %842
  %844 = select i1 %843, float %839, float %840
  %845 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 27, i64 0), align 4
  %846 = fcmp oge float %844, %845
  %847 = fcmp ueq float %844, 0.000000e+00
  %848 = or i1 %846, %847
  %849 = select i1 %848, float %844, float %845
  %850 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 28, i64 0), align 8
  %851 = fcmp oge float %849, %850
  %852 = fcmp ueq float %849, 0.000000e+00
  %853 = or i1 %851, %852
  %854 = select i1 %853, float %849, float %850
  %855 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 5, i64 29, i64 0), align 4
  %856 = fcmp oge float %854, %855
  %857 = fcmp ueq float %854, 0.000000e+00
  %858 = or i1 %856, %857
  %859 = select i1 %858, float %854, float %855
  store volatile float %859, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 1, i64 9, i64 0), align 4
  %860 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 0, i64 0), align 8
  %861 = fcmp ole float %860, 0xFFF0000000000000
  %862 = select i1 %861, float 0xFFF0000000000000, float %860
  %863 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 1, i64 0), align 4
  %864 = fcmp oge float %862, %863
  %865 = fcmp ueq float %862, 0.000000e+00
  %866 = or i1 %864, %865
  %867 = select i1 %866, float %862, float %863
  %868 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 2, i64 0), align 8
  %869 = fcmp oge float %867, %868
  %870 = fcmp ueq float %867, 0.000000e+00
  %871 = or i1 %869, %870
  %872 = select i1 %871, float %867, float %868
  %873 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 0, i64 0), align 8
  %874 = fcmp oge float %872, %873
  %875 = fcmp ueq float %872, 0.000000e+00
  %876 = or i1 %874, %875
  %877 = select i1 %876, float %872, float %873
  %878 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 1, i64 0), align 4
  %879 = fcmp oge float %877, %878
  %880 = fcmp ueq float %877, 0.000000e+00
  %881 = or i1 %879, %880
  %882 = select i1 %881, float %877, float %878
  %883 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 2, i64 0), align 8
  %884 = fcmp oge float %882, %883
  %885 = fcmp ueq float %882, 0.000000e+00
  %886 = or i1 %884, %885
  %887 = select i1 %886, float %882, float %883
  %888 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 0, i64 0), align 8
  %889 = fcmp oge float %887, %888
  %890 = fcmp ueq float %887, 0.000000e+00
  %891 = or i1 %889, %890
  %892 = select i1 %891, float %887, float %888
  %893 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 1, i64 0), align 4
  %894 = fcmp oge float %892, %893
  %895 = fcmp ueq float %892, 0.000000e+00
  %896 = or i1 %894, %895
  %897 = select i1 %896, float %892, float %893
  %898 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 2, i64 0), align 8
  %899 = fcmp oge float %897, %898
  %900 = fcmp ueq float %897, 0.000000e+00
  %901 = or i1 %899, %900
  %902 = select i1 %901, float %897, float %898
  store volatile float %902, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 2, i64 0, i64 0), align 8
  %903 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 3, i64 0), align 4
  %904 = fcmp ole float %903, 0xFFF0000000000000
  %905 = select i1 %904, float 0xFFF0000000000000, float %903
  %906 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 4, i64 0), align 8
  %907 = fcmp oge float %905, %906
  %908 = fcmp ueq float %905, 0.000000e+00
  %909 = or i1 %907, %908
  %910 = select i1 %909, float %905, float %906
  %911 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 5, i64 0), align 4
  %912 = fcmp oge float %910, %911
  %913 = fcmp ueq float %910, 0.000000e+00
  %914 = or i1 %912, %913
  %915 = select i1 %914, float %910, float %911
  %916 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 3, i64 0), align 4
  %917 = fcmp oge float %915, %916
  %918 = fcmp ueq float %915, 0.000000e+00
  %919 = or i1 %917, %918
  %920 = select i1 %919, float %915, float %916
  %921 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 4, i64 0), align 8
  %922 = fcmp oge float %920, %921
  %923 = fcmp ueq float %920, 0.000000e+00
  %924 = or i1 %922, %923
  %925 = select i1 %924, float %920, float %921
  %926 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 5, i64 0), align 4
  %927 = fcmp oge float %925, %926
  %928 = fcmp ueq float %925, 0.000000e+00
  %929 = or i1 %927, %928
  %930 = select i1 %929, float %925, float %926
  %931 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 3, i64 0), align 4
  %932 = fcmp oge float %930, %931
  %933 = fcmp ueq float %930, 0.000000e+00
  %934 = or i1 %932, %933
  %935 = select i1 %934, float %930, float %931
  %936 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 4, i64 0), align 8
  %937 = fcmp oge float %935, %936
  %938 = fcmp ueq float %935, 0.000000e+00
  %939 = or i1 %937, %938
  %940 = select i1 %939, float %935, float %936
  %941 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 5, i64 0), align 4
  %942 = fcmp oge float %940, %941
  %943 = fcmp ueq float %940, 0.000000e+00
  %944 = or i1 %942, %943
  %945 = select i1 %944, float %940, float %941
  store volatile float %945, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 2, i64 1, i64 0), align 4
  %946 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 6, i64 0), align 8
  %947 = fcmp ole float %946, 0xFFF0000000000000
  %948 = select i1 %947, float 0xFFF0000000000000, float %946
  %949 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 7, i64 0), align 4
  %950 = fcmp oge float %948, %949
  %951 = fcmp ueq float %948, 0.000000e+00
  %952 = or i1 %950, %951
  %953 = select i1 %952, float %948, float %949
  %954 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 8, i64 0), align 8
  %955 = fcmp oge float %953, %954
  %956 = fcmp ueq float %953, 0.000000e+00
  %957 = or i1 %955, %956
  %958 = select i1 %957, float %953, float %954
  %959 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 6, i64 0), align 8
  %960 = fcmp oge float %958, %959
  %961 = fcmp ueq float %958, 0.000000e+00
  %962 = or i1 %960, %961
  %963 = select i1 %962, float %958, float %959
  %964 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 7, i64 0), align 4
  %965 = fcmp oge float %963, %964
  %966 = fcmp ueq float %963, 0.000000e+00
  %967 = or i1 %965, %966
  %968 = select i1 %967, float %963, float %964
  %969 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 8, i64 0), align 8
  %970 = fcmp oge float %968, %969
  %971 = fcmp ueq float %968, 0.000000e+00
  %972 = or i1 %970, %971
  %973 = select i1 %972, float %968, float %969
  %974 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 6, i64 0), align 8
  %975 = fcmp oge float %973, %974
  %976 = fcmp ueq float %973, 0.000000e+00
  %977 = or i1 %975, %976
  %978 = select i1 %977, float %973, float %974
  %979 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 7, i64 0), align 4
  %980 = fcmp oge float %978, %979
  %981 = fcmp ueq float %978, 0.000000e+00
  %982 = or i1 %980, %981
  %983 = select i1 %982, float %978, float %979
  %984 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 8, i64 0), align 8
  %985 = fcmp oge float %983, %984
  %986 = fcmp ueq float %983, 0.000000e+00
  %987 = or i1 %985, %986
  %988 = select i1 %987, float %983, float %984
  store volatile float %988, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 2, i64 2, i64 0), align 8
  %989 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 9, i64 0), align 4
  %990 = fcmp ole float %989, 0xFFF0000000000000
  %991 = select i1 %990, float 0xFFF0000000000000, float %989
  %992 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 10, i64 0), align 8
  %993 = fcmp oge float %991, %992
  %994 = fcmp ueq float %991, 0.000000e+00
  %995 = or i1 %993, %994
  %996 = select i1 %995, float %991, float %992
  %997 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 11, i64 0), align 4
  %998 = fcmp oge float %996, %997
  %999 = fcmp ueq float %996, 0.000000e+00
  %1000 = or i1 %998, %999
  %1001 = select i1 %1000, float %996, float %997
  %1002 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 9, i64 0), align 4
  %1003 = fcmp oge float %1001, %1002
  %1004 = fcmp ueq float %1001, 0.000000e+00
  %1005 = or i1 %1003, %1004
  %1006 = select i1 %1005, float %1001, float %1002
  %1007 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 10, i64 0), align 8
  %1008 = fcmp oge float %1006, %1007
  %1009 = fcmp ueq float %1006, 0.000000e+00
  %1010 = or i1 %1008, %1009
  %1011 = select i1 %1010, float %1006, float %1007
  %1012 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 11, i64 0), align 4
  %1013 = fcmp oge float %1011, %1012
  %1014 = fcmp ueq float %1011, 0.000000e+00
  %1015 = or i1 %1013, %1014
  %1016 = select i1 %1015, float %1011, float %1012
  %1017 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 9, i64 0), align 4
  %1018 = fcmp oge float %1016, %1017
  %1019 = fcmp ueq float %1016, 0.000000e+00
  %1020 = or i1 %1018, %1019
  %1021 = select i1 %1020, float %1016, float %1017
  %1022 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 10, i64 0), align 8
  %1023 = fcmp oge float %1021, %1022
  %1024 = fcmp ueq float %1021, 0.000000e+00
  %1025 = or i1 %1023, %1024
  %1026 = select i1 %1025, float %1021, float %1022
  %1027 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 11, i64 0), align 4
  %1028 = fcmp oge float %1026, %1027
  %1029 = fcmp ueq float %1026, 0.000000e+00
  %1030 = or i1 %1028, %1029
  %1031 = select i1 %1030, float %1026, float %1027
  store volatile float %1031, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 2, i64 3, i64 0), align 4
  %1032 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 12, i64 0), align 8
  %1033 = fcmp ole float %1032, 0xFFF0000000000000
  %1034 = select i1 %1033, float 0xFFF0000000000000, float %1032
  %1035 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 13, i64 0), align 4
  %1036 = fcmp oge float %1034, %1035
  %1037 = fcmp ueq float %1034, 0.000000e+00
  %1038 = or i1 %1036, %1037
  %1039 = select i1 %1038, float %1034, float %1035
  %1040 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 14, i64 0), align 8
  %1041 = fcmp oge float %1039, %1040
  %1042 = fcmp ueq float %1039, 0.000000e+00
  %1043 = or i1 %1041, %1042
  %1044 = select i1 %1043, float %1039, float %1040
  %1045 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 12, i64 0), align 8
  %1046 = fcmp oge float %1044, %1045
  %1047 = fcmp ueq float %1044, 0.000000e+00
  %1048 = or i1 %1046, %1047
  %1049 = select i1 %1048, float %1044, float %1045
  %1050 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 13, i64 0), align 4
  %1051 = fcmp oge float %1049, %1050
  %1052 = fcmp ueq float %1049, 0.000000e+00
  %1053 = or i1 %1051, %1052
  %1054 = select i1 %1053, float %1049, float %1050
  %1055 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 14, i64 0), align 8
  %1056 = fcmp oge float %1054, %1055
  %1057 = fcmp ueq float %1054, 0.000000e+00
  %1058 = or i1 %1056, %1057
  %1059 = select i1 %1058, float %1054, float %1055
  %1060 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 12, i64 0), align 8
  %1061 = fcmp oge float %1059, %1060
  %1062 = fcmp ueq float %1059, 0.000000e+00
  %1063 = or i1 %1061, %1062
  %1064 = select i1 %1063, float %1059, float %1060
  %1065 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 13, i64 0), align 4
  %1066 = fcmp oge float %1064, %1065
  %1067 = fcmp ueq float %1064, 0.000000e+00
  %1068 = or i1 %1066, %1067
  %1069 = select i1 %1068, float %1064, float %1065
  %1070 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 14, i64 0), align 8
  %1071 = fcmp oge float %1069, %1070
  %1072 = fcmp ueq float %1069, 0.000000e+00
  %1073 = or i1 %1071, %1072
  %1074 = select i1 %1073, float %1069, float %1070
  store volatile float %1074, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 2, i64 4, i64 0), align 8
  %1075 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 15, i64 0), align 4
  %1076 = fcmp ole float %1075, 0xFFF0000000000000
  %1077 = select i1 %1076, float 0xFFF0000000000000, float %1075
  %1078 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 16, i64 0), align 8
  %1079 = fcmp oge float %1077, %1078
  %1080 = fcmp ueq float %1077, 0.000000e+00
  %1081 = or i1 %1079, %1080
  %1082 = select i1 %1081, float %1077, float %1078
  %1083 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 17, i64 0), align 4
  %1084 = fcmp oge float %1082, %1083
  %1085 = fcmp ueq float %1082, 0.000000e+00
  %1086 = or i1 %1084, %1085
  %1087 = select i1 %1086, float %1082, float %1083
  %1088 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 15, i64 0), align 4
  %1089 = fcmp oge float %1087, %1088
  %1090 = fcmp ueq float %1087, 0.000000e+00
  %1091 = or i1 %1089, %1090
  %1092 = select i1 %1091, float %1087, float %1088
  %1093 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 16, i64 0), align 8
  %1094 = fcmp oge float %1092, %1093
  %1095 = fcmp ueq float %1092, 0.000000e+00
  %1096 = or i1 %1094, %1095
  %1097 = select i1 %1096, float %1092, float %1093
  %1098 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 17, i64 0), align 4
  %1099 = fcmp oge float %1097, %1098
  %1100 = fcmp ueq float %1097, 0.000000e+00
  %1101 = or i1 %1099, %1100
  %1102 = select i1 %1101, float %1097, float %1098
  %1103 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 15, i64 0), align 4
  %1104 = fcmp oge float %1102, %1103
  %1105 = fcmp ueq float %1102, 0.000000e+00
  %1106 = or i1 %1104, %1105
  %1107 = select i1 %1106, float %1102, float %1103
  %1108 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 16, i64 0), align 8
  %1109 = fcmp oge float %1107, %1108
  %1110 = fcmp ueq float %1107, 0.000000e+00
  %1111 = or i1 %1109, %1110
  %1112 = select i1 %1111, float %1107, float %1108
  %1113 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 17, i64 0), align 4
  %1114 = fcmp oge float %1112, %1113
  %1115 = fcmp ueq float %1112, 0.000000e+00
  %1116 = or i1 %1114, %1115
  %1117 = select i1 %1116, float %1112, float %1113
  store volatile float %1117, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 2, i64 5, i64 0), align 4
  %1118 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 18, i64 0), align 8
  %1119 = fcmp ole float %1118, 0xFFF0000000000000
  %1120 = select i1 %1119, float 0xFFF0000000000000, float %1118
  %1121 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 19, i64 0), align 4
  %1122 = fcmp oge float %1120, %1121
  %1123 = fcmp ueq float %1120, 0.000000e+00
  %1124 = or i1 %1122, %1123
  %1125 = select i1 %1124, float %1120, float %1121
  %1126 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 20, i64 0), align 8
  %1127 = fcmp oge float %1125, %1126
  %1128 = fcmp ueq float %1125, 0.000000e+00
  %1129 = or i1 %1127, %1128
  %1130 = select i1 %1129, float %1125, float %1126
  %1131 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 18, i64 0), align 8
  %1132 = fcmp oge float %1130, %1131
  %1133 = fcmp ueq float %1130, 0.000000e+00
  %1134 = or i1 %1132, %1133
  %1135 = select i1 %1134, float %1130, float %1131
  %1136 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 19, i64 0), align 4
  %1137 = fcmp oge float %1135, %1136
  %1138 = fcmp ueq float %1135, 0.000000e+00
  %1139 = or i1 %1137, %1138
  %1140 = select i1 %1139, float %1135, float %1136
  %1141 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 20, i64 0), align 8
  %1142 = fcmp oge float %1140, %1141
  %1143 = fcmp ueq float %1140, 0.000000e+00
  %1144 = or i1 %1142, %1143
  %1145 = select i1 %1144, float %1140, float %1141
  %1146 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 18, i64 0), align 8
  %1147 = fcmp oge float %1145, %1146
  %1148 = fcmp ueq float %1145, 0.000000e+00
  %1149 = or i1 %1147, %1148
  %1150 = select i1 %1149, float %1145, float %1146
  %1151 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 19, i64 0), align 4
  %1152 = fcmp oge float %1150, %1151
  %1153 = fcmp ueq float %1150, 0.000000e+00
  %1154 = or i1 %1152, %1153
  %1155 = select i1 %1154, float %1150, float %1151
  %1156 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 20, i64 0), align 8
  %1157 = fcmp oge float %1155, %1156
  %1158 = fcmp ueq float %1155, 0.000000e+00
  %1159 = or i1 %1157, %1158
  %1160 = select i1 %1159, float %1155, float %1156
  store volatile float %1160, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 2, i64 6, i64 0), align 8
  %1161 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 21, i64 0), align 4
  %1162 = fcmp ole float %1161, 0xFFF0000000000000
  %1163 = select i1 %1162, float 0xFFF0000000000000, float %1161
  %1164 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 22, i64 0), align 8
  %1165 = fcmp oge float %1163, %1164
  %1166 = fcmp ueq float %1163, 0.000000e+00
  %1167 = or i1 %1165, %1166
  %1168 = select i1 %1167, float %1163, float %1164
  %1169 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 23, i64 0), align 4
  %1170 = fcmp oge float %1168, %1169
  %1171 = fcmp ueq float %1168, 0.000000e+00
  %1172 = or i1 %1170, %1171
  %1173 = select i1 %1172, float %1168, float %1169
  %1174 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 21, i64 0), align 4
  %1175 = fcmp oge float %1173, %1174
  %1176 = fcmp ueq float %1173, 0.000000e+00
  %1177 = or i1 %1175, %1176
  %1178 = select i1 %1177, float %1173, float %1174
  %1179 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 22, i64 0), align 8
  %1180 = fcmp oge float %1178, %1179
  %1181 = fcmp ueq float %1178, 0.000000e+00
  %1182 = or i1 %1180, %1181
  %1183 = select i1 %1182, float %1178, float %1179
  %1184 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 23, i64 0), align 4
  %1185 = fcmp oge float %1183, %1184
  %1186 = fcmp ueq float %1183, 0.000000e+00
  %1187 = or i1 %1185, %1186
  %1188 = select i1 %1187, float %1183, float %1184
  %1189 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 21, i64 0), align 4
  %1190 = fcmp oge float %1188, %1189
  %1191 = fcmp ueq float %1188, 0.000000e+00
  %1192 = or i1 %1190, %1191
  %1193 = select i1 %1192, float %1188, float %1189
  %1194 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 22, i64 0), align 8
  %1195 = fcmp oge float %1193, %1194
  %1196 = fcmp ueq float %1193, 0.000000e+00
  %1197 = or i1 %1195, %1196
  %1198 = select i1 %1197, float %1193, float %1194
  %1199 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 23, i64 0), align 4
  %1200 = fcmp oge float %1198, %1199
  %1201 = fcmp ueq float %1198, 0.000000e+00
  %1202 = or i1 %1200, %1201
  %1203 = select i1 %1202, float %1198, float %1199
  store volatile float %1203, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 2, i64 7, i64 0), align 4
  %1204 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 24, i64 0), align 8
  %1205 = fcmp ole float %1204, 0xFFF0000000000000
  %1206 = select i1 %1205, float 0xFFF0000000000000, float %1204
  %1207 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 25, i64 0), align 4
  %1208 = fcmp oge float %1206, %1207
  %1209 = fcmp ueq float %1206, 0.000000e+00
  %1210 = or i1 %1208, %1209
  %1211 = select i1 %1210, float %1206, float %1207
  %1212 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 26, i64 0), align 8
  %1213 = fcmp oge float %1211, %1212
  %1214 = fcmp ueq float %1211, 0.000000e+00
  %1215 = or i1 %1213, %1214
  %1216 = select i1 %1215, float %1211, float %1212
  %1217 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 24, i64 0), align 8
  %1218 = fcmp oge float %1216, %1217
  %1219 = fcmp ueq float %1216, 0.000000e+00
  %1220 = or i1 %1218, %1219
  %1221 = select i1 %1220, float %1216, float %1217
  %1222 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 25, i64 0), align 4
  %1223 = fcmp oge float %1221, %1222
  %1224 = fcmp ueq float %1221, 0.000000e+00
  %1225 = or i1 %1223, %1224
  %1226 = select i1 %1225, float %1221, float %1222
  %1227 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 26, i64 0), align 8
  %1228 = fcmp oge float %1226, %1227
  %1229 = fcmp ueq float %1226, 0.000000e+00
  %1230 = or i1 %1228, %1229
  %1231 = select i1 %1230, float %1226, float %1227
  %1232 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 24, i64 0), align 8
  %1233 = fcmp oge float %1231, %1232
  %1234 = fcmp ueq float %1231, 0.000000e+00
  %1235 = or i1 %1233, %1234
  %1236 = select i1 %1235, float %1231, float %1232
  %1237 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 25, i64 0), align 4
  %1238 = fcmp oge float %1236, %1237
  %1239 = fcmp ueq float %1236, 0.000000e+00
  %1240 = or i1 %1238, %1239
  %1241 = select i1 %1240, float %1236, float %1237
  %1242 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 26, i64 0), align 8
  %1243 = fcmp oge float %1241, %1242
  %1244 = fcmp ueq float %1241, 0.000000e+00
  %1245 = or i1 %1243, %1244
  %1246 = select i1 %1245, float %1241, float %1242
  store volatile float %1246, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 2, i64 8, i64 0), align 8
  %1247 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 27, i64 0), align 4
  %1248 = fcmp ole float %1247, 0xFFF0000000000000
  %1249 = select i1 %1248, float 0xFFF0000000000000, float %1247
  %1250 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 28, i64 0), align 8
  %1251 = fcmp oge float %1249, %1250
  %1252 = fcmp ueq float %1249, 0.000000e+00
  %1253 = or i1 %1251, %1252
  %1254 = select i1 %1253, float %1249, float %1250
  %1255 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 6, i64 29, i64 0), align 4
  %1256 = fcmp oge float %1254, %1255
  %1257 = fcmp ueq float %1254, 0.000000e+00
  %1258 = or i1 %1256, %1257
  %1259 = select i1 %1258, float %1254, float %1255
  %1260 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 27, i64 0), align 4
  %1261 = fcmp oge float %1259, %1260
  %1262 = fcmp ueq float %1259, 0.000000e+00
  %1263 = or i1 %1261, %1262
  %1264 = select i1 %1263, float %1259, float %1260
  %1265 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 28, i64 0), align 8
  %1266 = fcmp oge float %1264, %1265
  %1267 = fcmp ueq float %1264, 0.000000e+00
  %1268 = or i1 %1266, %1267
  %1269 = select i1 %1268, float %1264, float %1265
  %1270 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 7, i64 29, i64 0), align 4
  %1271 = fcmp oge float %1269, %1270
  %1272 = fcmp ueq float %1269, 0.000000e+00
  %1273 = or i1 %1271, %1272
  %1274 = select i1 %1273, float %1269, float %1270
  %1275 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 27, i64 0), align 4
  %1276 = fcmp oge float %1274, %1275
  %1277 = fcmp ueq float %1274, 0.000000e+00
  %1278 = or i1 %1276, %1277
  %1279 = select i1 %1278, float %1274, float %1275
  %1280 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 28, i64 0), align 8
  %1281 = fcmp oge float %1279, %1280
  %1282 = fcmp ueq float %1279, 0.000000e+00
  %1283 = or i1 %1281, %1282
  %1284 = select i1 %1283, float %1279, float %1280
  %1285 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 8, i64 29, i64 0), align 4
  %1286 = fcmp oge float %1284, %1285
  %1287 = fcmp ueq float %1284, 0.000000e+00
  %1288 = or i1 %1286, %1287
  %1289 = select i1 %1288, float %1284, float %1285
  store volatile float %1289, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 2, i64 9, i64 0), align 4
  %1290 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 0, i64 0), align 8
  %1291 = fcmp ole float %1290, 0xFFF0000000000000
  %1292 = select i1 %1291, float 0xFFF0000000000000, float %1290
  %1293 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 1, i64 0), align 4
  %1294 = fcmp oge float %1292, %1293
  %1295 = fcmp ueq float %1292, 0.000000e+00
  %1296 = or i1 %1294, %1295
  %1297 = select i1 %1296, float %1292, float %1293
  %1298 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 2, i64 0), align 8
  %1299 = fcmp oge float %1297, %1298
  %1300 = fcmp ueq float %1297, 0.000000e+00
  %1301 = or i1 %1299, %1300
  %1302 = select i1 %1301, float %1297, float %1298
  %1303 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 0, i64 0), align 8
  %1304 = fcmp oge float %1302, %1303
  %1305 = fcmp ueq float %1302, 0.000000e+00
  %1306 = or i1 %1304, %1305
  %1307 = select i1 %1306, float %1302, float %1303
  %1308 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 1, i64 0), align 4
  %1309 = fcmp oge float %1307, %1308
  %1310 = fcmp ueq float %1307, 0.000000e+00
  %1311 = or i1 %1309, %1310
  %1312 = select i1 %1311, float %1307, float %1308
  %1313 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 2, i64 0), align 8
  %1314 = fcmp oge float %1312, %1313
  %1315 = fcmp ueq float %1312, 0.000000e+00
  %1316 = or i1 %1314, %1315
  %1317 = select i1 %1316, float %1312, float %1313
  %1318 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 0, i64 0), align 8
  %1319 = fcmp oge float %1317, %1318
  %1320 = fcmp ueq float %1317, 0.000000e+00
  %1321 = or i1 %1319, %1320
  %1322 = select i1 %1321, float %1317, float %1318
  %1323 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 1, i64 0), align 4
  %1324 = fcmp oge float %1322, %1323
  %1325 = fcmp ueq float %1322, 0.000000e+00
  %1326 = or i1 %1324, %1325
  %1327 = select i1 %1326, float %1322, float %1323
  %1328 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 2, i64 0), align 8
  %1329 = fcmp oge float %1327, %1328
  %1330 = fcmp ueq float %1327, 0.000000e+00
  %1331 = or i1 %1329, %1330
  %1332 = select i1 %1331, float %1327, float %1328
  store volatile float %1332, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 3, i64 0, i64 0), align 8
  %1333 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 3, i64 0), align 4
  %1334 = fcmp ole float %1333, 0xFFF0000000000000
  %1335 = select i1 %1334, float 0xFFF0000000000000, float %1333
  %1336 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 4, i64 0), align 8
  %1337 = fcmp oge float %1335, %1336
  %1338 = fcmp ueq float %1335, 0.000000e+00
  %1339 = or i1 %1337, %1338
  %1340 = select i1 %1339, float %1335, float %1336
  %1341 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 5, i64 0), align 4
  %1342 = fcmp oge float %1340, %1341
  %1343 = fcmp ueq float %1340, 0.000000e+00
  %1344 = or i1 %1342, %1343
  %1345 = select i1 %1344, float %1340, float %1341
  %1346 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 3, i64 0), align 4
  %1347 = fcmp oge float %1345, %1346
  %1348 = fcmp ueq float %1345, 0.000000e+00
  %1349 = or i1 %1347, %1348
  %1350 = select i1 %1349, float %1345, float %1346
  %1351 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 4, i64 0), align 8
  %1352 = fcmp oge float %1350, %1351
  %1353 = fcmp ueq float %1350, 0.000000e+00
  %1354 = or i1 %1352, %1353
  %1355 = select i1 %1354, float %1350, float %1351
  %1356 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 5, i64 0), align 4
  %1357 = fcmp oge float %1355, %1356
  %1358 = fcmp ueq float %1355, 0.000000e+00
  %1359 = or i1 %1357, %1358
  %1360 = select i1 %1359, float %1355, float %1356
  %1361 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 3, i64 0), align 4
  %1362 = fcmp oge float %1360, %1361
  %1363 = fcmp ueq float %1360, 0.000000e+00
  %1364 = or i1 %1362, %1363
  %1365 = select i1 %1364, float %1360, float %1361
  %1366 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 4, i64 0), align 8
  %1367 = fcmp oge float %1365, %1366
  %1368 = fcmp ueq float %1365, 0.000000e+00
  %1369 = or i1 %1367, %1368
  %1370 = select i1 %1369, float %1365, float %1366
  %1371 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 5, i64 0), align 4
  %1372 = fcmp oge float %1370, %1371
  %1373 = fcmp ueq float %1370, 0.000000e+00
  %1374 = or i1 %1372, %1373
  %1375 = select i1 %1374, float %1370, float %1371
  store volatile float %1375, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 3, i64 1, i64 0), align 4
  %1376 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 6, i64 0), align 8
  %1377 = fcmp ole float %1376, 0xFFF0000000000000
  %1378 = select i1 %1377, float 0xFFF0000000000000, float %1376
  %1379 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 7, i64 0), align 4
  %1380 = fcmp oge float %1378, %1379
  %1381 = fcmp ueq float %1378, 0.000000e+00
  %1382 = or i1 %1380, %1381
  %1383 = select i1 %1382, float %1378, float %1379
  %1384 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 8, i64 0), align 8
  %1385 = fcmp oge float %1383, %1384
  %1386 = fcmp ueq float %1383, 0.000000e+00
  %1387 = or i1 %1385, %1386
  %1388 = select i1 %1387, float %1383, float %1384
  %1389 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 6, i64 0), align 8
  %1390 = fcmp oge float %1388, %1389
  %1391 = fcmp ueq float %1388, 0.000000e+00
  %1392 = or i1 %1390, %1391
  %1393 = select i1 %1392, float %1388, float %1389
  %1394 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 7, i64 0), align 4
  %1395 = fcmp oge float %1393, %1394
  %1396 = fcmp ueq float %1393, 0.000000e+00
  %1397 = or i1 %1395, %1396
  %1398 = select i1 %1397, float %1393, float %1394
  %1399 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 8, i64 0), align 8
  %1400 = fcmp oge float %1398, %1399
  %1401 = fcmp ueq float %1398, 0.000000e+00
  %1402 = or i1 %1400, %1401
  %1403 = select i1 %1402, float %1398, float %1399
  %1404 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 6, i64 0), align 8
  %1405 = fcmp oge float %1403, %1404
  %1406 = fcmp ueq float %1403, 0.000000e+00
  %1407 = or i1 %1405, %1406
  %1408 = select i1 %1407, float %1403, float %1404
  %1409 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 7, i64 0), align 4
  %1410 = fcmp oge float %1408, %1409
  %1411 = fcmp ueq float %1408, 0.000000e+00
  %1412 = or i1 %1410, %1411
  %1413 = select i1 %1412, float %1408, float %1409
  %1414 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 8, i64 0), align 8
  %1415 = fcmp oge float %1413, %1414
  %1416 = fcmp ueq float %1413, 0.000000e+00
  %1417 = or i1 %1415, %1416
  %1418 = select i1 %1417, float %1413, float %1414
  store volatile float %1418, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 3, i64 2, i64 0), align 8
  %1419 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 9, i64 0), align 4
  %1420 = fcmp ole float %1419, 0xFFF0000000000000
  %1421 = select i1 %1420, float 0xFFF0000000000000, float %1419
  %1422 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 10, i64 0), align 8
  %1423 = fcmp oge float %1421, %1422
  %1424 = fcmp ueq float %1421, 0.000000e+00
  %1425 = or i1 %1423, %1424
  %1426 = select i1 %1425, float %1421, float %1422
  %1427 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 11, i64 0), align 4
  %1428 = fcmp oge float %1426, %1427
  %1429 = fcmp ueq float %1426, 0.000000e+00
  %1430 = or i1 %1428, %1429
  %1431 = select i1 %1430, float %1426, float %1427
  %1432 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 9, i64 0), align 4
  %1433 = fcmp oge float %1431, %1432
  %1434 = fcmp ueq float %1431, 0.000000e+00
  %1435 = or i1 %1433, %1434
  %1436 = select i1 %1435, float %1431, float %1432
  %1437 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 10, i64 0), align 8
  %1438 = fcmp oge float %1436, %1437
  %1439 = fcmp ueq float %1436, 0.000000e+00
  %1440 = or i1 %1438, %1439
  %1441 = select i1 %1440, float %1436, float %1437
  %1442 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 11, i64 0), align 4
  %1443 = fcmp oge float %1441, %1442
  %1444 = fcmp ueq float %1441, 0.000000e+00
  %1445 = or i1 %1443, %1444
  %1446 = select i1 %1445, float %1441, float %1442
  %1447 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 9, i64 0), align 4
  %1448 = fcmp oge float %1446, %1447
  %1449 = fcmp ueq float %1446, 0.000000e+00
  %1450 = or i1 %1448, %1449
  %1451 = select i1 %1450, float %1446, float %1447
  %1452 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 10, i64 0), align 8
  %1453 = fcmp oge float %1451, %1452
  %1454 = fcmp ueq float %1451, 0.000000e+00
  %1455 = or i1 %1453, %1454
  %1456 = select i1 %1455, float %1451, float %1452
  %1457 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 11, i64 0), align 4
  %1458 = fcmp oge float %1456, %1457
  %1459 = fcmp ueq float %1456, 0.000000e+00
  %1460 = or i1 %1458, %1459
  %1461 = select i1 %1460, float %1456, float %1457
  store volatile float %1461, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 3, i64 3, i64 0), align 4
  %1462 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 12, i64 0), align 8
  %1463 = fcmp ole float %1462, 0xFFF0000000000000
  %1464 = select i1 %1463, float 0xFFF0000000000000, float %1462
  %1465 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 13, i64 0), align 4
  %1466 = fcmp oge float %1464, %1465
  %1467 = fcmp ueq float %1464, 0.000000e+00
  %1468 = or i1 %1466, %1467
  %1469 = select i1 %1468, float %1464, float %1465
  %1470 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 14, i64 0), align 8
  %1471 = fcmp oge float %1469, %1470
  %1472 = fcmp ueq float %1469, 0.000000e+00
  %1473 = or i1 %1471, %1472
  %1474 = select i1 %1473, float %1469, float %1470
  %1475 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 12, i64 0), align 8
  %1476 = fcmp oge float %1474, %1475
  %1477 = fcmp ueq float %1474, 0.000000e+00
  %1478 = or i1 %1476, %1477
  %1479 = select i1 %1478, float %1474, float %1475
  %1480 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 13, i64 0), align 4
  %1481 = fcmp oge float %1479, %1480
  %1482 = fcmp ueq float %1479, 0.000000e+00
  %1483 = or i1 %1481, %1482
  %1484 = select i1 %1483, float %1479, float %1480
  %1485 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 14, i64 0), align 8
  %1486 = fcmp oge float %1484, %1485
  %1487 = fcmp ueq float %1484, 0.000000e+00
  %1488 = or i1 %1486, %1487
  %1489 = select i1 %1488, float %1484, float %1485
  %1490 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 12, i64 0), align 8
  %1491 = fcmp oge float %1489, %1490
  %1492 = fcmp ueq float %1489, 0.000000e+00
  %1493 = or i1 %1491, %1492
  %1494 = select i1 %1493, float %1489, float %1490
  %1495 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 13, i64 0), align 4
  %1496 = fcmp oge float %1494, %1495
  %1497 = fcmp ueq float %1494, 0.000000e+00
  %1498 = or i1 %1496, %1497
  %1499 = select i1 %1498, float %1494, float %1495
  %1500 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 14, i64 0), align 8
  %1501 = fcmp oge float %1499, %1500
  %1502 = fcmp ueq float %1499, 0.000000e+00
  %1503 = or i1 %1501, %1502
  %1504 = select i1 %1503, float %1499, float %1500
  store volatile float %1504, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 3, i64 4, i64 0), align 8
  %1505 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 15, i64 0), align 4
  %1506 = fcmp ole float %1505, 0xFFF0000000000000
  %1507 = select i1 %1506, float 0xFFF0000000000000, float %1505
  %1508 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 16, i64 0), align 8
  %1509 = fcmp oge float %1507, %1508
  %1510 = fcmp ueq float %1507, 0.000000e+00
  %1511 = or i1 %1509, %1510
  %1512 = select i1 %1511, float %1507, float %1508
  %1513 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 17, i64 0), align 4
  %1514 = fcmp oge float %1512, %1513
  %1515 = fcmp ueq float %1512, 0.000000e+00
  %1516 = or i1 %1514, %1515
  %1517 = select i1 %1516, float %1512, float %1513
  %1518 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 15, i64 0), align 4
  %1519 = fcmp oge float %1517, %1518
  %1520 = fcmp ueq float %1517, 0.000000e+00
  %1521 = or i1 %1519, %1520
  %1522 = select i1 %1521, float %1517, float %1518
  %1523 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 16, i64 0), align 8
  %1524 = fcmp oge float %1522, %1523
  %1525 = fcmp ueq float %1522, 0.000000e+00
  %1526 = or i1 %1524, %1525
  %1527 = select i1 %1526, float %1522, float %1523
  %1528 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 17, i64 0), align 4
  %1529 = fcmp oge float %1527, %1528
  %1530 = fcmp ueq float %1527, 0.000000e+00
  %1531 = or i1 %1529, %1530
  %1532 = select i1 %1531, float %1527, float %1528
  %1533 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 15, i64 0), align 4
  %1534 = fcmp oge float %1532, %1533
  %1535 = fcmp ueq float %1532, 0.000000e+00
  %1536 = or i1 %1534, %1535
  %1537 = select i1 %1536, float %1532, float %1533
  %1538 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 16, i64 0), align 8
  %1539 = fcmp oge float %1537, %1538
  %1540 = fcmp ueq float %1537, 0.000000e+00
  %1541 = or i1 %1539, %1540
  %1542 = select i1 %1541, float %1537, float %1538
  %1543 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 17, i64 0), align 4
  %1544 = fcmp oge float %1542, %1543
  %1545 = fcmp ueq float %1542, 0.000000e+00
  %1546 = or i1 %1544, %1545
  %1547 = select i1 %1546, float %1542, float %1543
  store volatile float %1547, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 3, i64 5, i64 0), align 4
  %1548 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 18, i64 0), align 8
  %1549 = fcmp ole float %1548, 0xFFF0000000000000
  %1550 = select i1 %1549, float 0xFFF0000000000000, float %1548
  %1551 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 19, i64 0), align 4
  %1552 = fcmp oge float %1550, %1551
  %1553 = fcmp ueq float %1550, 0.000000e+00
  %1554 = or i1 %1552, %1553
  %1555 = select i1 %1554, float %1550, float %1551
  %1556 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 20, i64 0), align 8
  %1557 = fcmp oge float %1555, %1556
  %1558 = fcmp ueq float %1555, 0.000000e+00
  %1559 = or i1 %1557, %1558
  %1560 = select i1 %1559, float %1555, float %1556
  %1561 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 18, i64 0), align 8
  %1562 = fcmp oge float %1560, %1561
  %1563 = fcmp ueq float %1560, 0.000000e+00
  %1564 = or i1 %1562, %1563
  %1565 = select i1 %1564, float %1560, float %1561
  %1566 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 19, i64 0), align 4
  %1567 = fcmp oge float %1565, %1566
  %1568 = fcmp ueq float %1565, 0.000000e+00
  %1569 = or i1 %1567, %1568
  %1570 = select i1 %1569, float %1565, float %1566
  %1571 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 20, i64 0), align 8
  %1572 = fcmp oge float %1570, %1571
  %1573 = fcmp ueq float %1570, 0.000000e+00
  %1574 = or i1 %1572, %1573
  %1575 = select i1 %1574, float %1570, float %1571
  %1576 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 18, i64 0), align 8
  %1577 = fcmp oge float %1575, %1576
  %1578 = fcmp ueq float %1575, 0.000000e+00
  %1579 = or i1 %1577, %1578
  %1580 = select i1 %1579, float %1575, float %1576
  %1581 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 19, i64 0), align 4
  %1582 = fcmp oge float %1580, %1581
  %1583 = fcmp ueq float %1580, 0.000000e+00
  %1584 = or i1 %1582, %1583
  %1585 = select i1 %1584, float %1580, float %1581
  %1586 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 20, i64 0), align 8
  %1587 = fcmp oge float %1585, %1586
  %1588 = fcmp ueq float %1585, 0.000000e+00
  %1589 = or i1 %1587, %1588
  %1590 = select i1 %1589, float %1585, float %1586
  store volatile float %1590, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 3, i64 6, i64 0), align 8
  %1591 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 21, i64 0), align 4
  %1592 = fcmp ole float %1591, 0xFFF0000000000000
  %1593 = select i1 %1592, float 0xFFF0000000000000, float %1591
  %1594 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 22, i64 0), align 8
  %1595 = fcmp oge float %1593, %1594
  %1596 = fcmp ueq float %1593, 0.000000e+00
  %1597 = or i1 %1595, %1596
  %1598 = select i1 %1597, float %1593, float %1594
  %1599 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 23, i64 0), align 4
  %1600 = fcmp oge float %1598, %1599
  %1601 = fcmp ueq float %1598, 0.000000e+00
  %1602 = or i1 %1600, %1601
  %1603 = select i1 %1602, float %1598, float %1599
  %1604 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 21, i64 0), align 4
  %1605 = fcmp oge float %1603, %1604
  %1606 = fcmp ueq float %1603, 0.000000e+00
  %1607 = or i1 %1605, %1606
  %1608 = select i1 %1607, float %1603, float %1604
  %1609 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 22, i64 0), align 8
  %1610 = fcmp oge float %1608, %1609
  %1611 = fcmp ueq float %1608, 0.000000e+00
  %1612 = or i1 %1610, %1611
  %1613 = select i1 %1612, float %1608, float %1609
  %1614 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 23, i64 0), align 4
  %1615 = fcmp oge float %1613, %1614
  %1616 = fcmp ueq float %1613, 0.000000e+00
  %1617 = or i1 %1615, %1616
  %1618 = select i1 %1617, float %1613, float %1614
  %1619 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 21, i64 0), align 4
  %1620 = fcmp oge float %1618, %1619
  %1621 = fcmp ueq float %1618, 0.000000e+00
  %1622 = or i1 %1620, %1621
  %1623 = select i1 %1622, float %1618, float %1619
  %1624 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 22, i64 0), align 8
  %1625 = fcmp oge float %1623, %1624
  %1626 = fcmp ueq float %1623, 0.000000e+00
  %1627 = or i1 %1625, %1626
  %1628 = select i1 %1627, float %1623, float %1624
  %1629 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 23, i64 0), align 4
  %1630 = fcmp oge float %1628, %1629
  %1631 = fcmp ueq float %1628, 0.000000e+00
  %1632 = or i1 %1630, %1631
  %1633 = select i1 %1632, float %1628, float %1629
  store volatile float %1633, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 3, i64 7, i64 0), align 4
  %1634 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 24, i64 0), align 8
  %1635 = fcmp ole float %1634, 0xFFF0000000000000
  %1636 = select i1 %1635, float 0xFFF0000000000000, float %1634
  %1637 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 25, i64 0), align 4
  %1638 = fcmp oge float %1636, %1637
  %1639 = fcmp ueq float %1636, 0.000000e+00
  %1640 = or i1 %1638, %1639
  %1641 = select i1 %1640, float %1636, float %1637
  %1642 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 26, i64 0), align 8
  %1643 = fcmp oge float %1641, %1642
  %1644 = fcmp ueq float %1641, 0.000000e+00
  %1645 = or i1 %1643, %1644
  %1646 = select i1 %1645, float %1641, float %1642
  %1647 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 24, i64 0), align 8
  %1648 = fcmp oge float %1646, %1647
  %1649 = fcmp ueq float %1646, 0.000000e+00
  %1650 = or i1 %1648, %1649
  %1651 = select i1 %1650, float %1646, float %1647
  %1652 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 25, i64 0), align 4
  %1653 = fcmp oge float %1651, %1652
  %1654 = fcmp ueq float %1651, 0.000000e+00
  %1655 = or i1 %1653, %1654
  %1656 = select i1 %1655, float %1651, float %1652
  %1657 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 26, i64 0), align 8
  %1658 = fcmp oge float %1656, %1657
  %1659 = fcmp ueq float %1656, 0.000000e+00
  %1660 = or i1 %1658, %1659
  %1661 = select i1 %1660, float %1656, float %1657
  %1662 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 24, i64 0), align 8
  %1663 = fcmp oge float %1661, %1662
  %1664 = fcmp ueq float %1661, 0.000000e+00
  %1665 = or i1 %1663, %1664
  %1666 = select i1 %1665, float %1661, float %1662
  %1667 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 25, i64 0), align 4
  %1668 = fcmp oge float %1666, %1667
  %1669 = fcmp ueq float %1666, 0.000000e+00
  %1670 = or i1 %1668, %1669
  %1671 = select i1 %1670, float %1666, float %1667
  %1672 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 26, i64 0), align 8
  %1673 = fcmp oge float %1671, %1672
  %1674 = fcmp ueq float %1671, 0.000000e+00
  %1675 = or i1 %1673, %1674
  %1676 = select i1 %1675, float %1671, float %1672
  store volatile float %1676, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 3, i64 8, i64 0), align 8
  %1677 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 27, i64 0), align 4
  %1678 = fcmp ole float %1677, 0xFFF0000000000000
  %1679 = select i1 %1678, float 0xFFF0000000000000, float %1677
  %1680 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 28, i64 0), align 8
  %1681 = fcmp oge float %1679, %1680
  %1682 = fcmp ueq float %1679, 0.000000e+00
  %1683 = or i1 %1681, %1682
  %1684 = select i1 %1683, float %1679, float %1680
  %1685 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 9, i64 29, i64 0), align 4
  %1686 = fcmp oge float %1684, %1685
  %1687 = fcmp ueq float %1684, 0.000000e+00
  %1688 = or i1 %1686, %1687
  %1689 = select i1 %1688, float %1684, float %1685
  %1690 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 27, i64 0), align 4
  %1691 = fcmp oge float %1689, %1690
  %1692 = fcmp ueq float %1689, 0.000000e+00
  %1693 = or i1 %1691, %1692
  %1694 = select i1 %1693, float %1689, float %1690
  %1695 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 28, i64 0), align 8
  %1696 = fcmp oge float %1694, %1695
  %1697 = fcmp ueq float %1694, 0.000000e+00
  %1698 = or i1 %1696, %1697
  %1699 = select i1 %1698, float %1694, float %1695
  %1700 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 10, i64 29, i64 0), align 4
  %1701 = fcmp oge float %1699, %1700
  %1702 = fcmp ueq float %1699, 0.000000e+00
  %1703 = or i1 %1701, %1702
  %1704 = select i1 %1703, float %1699, float %1700
  %1705 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 27, i64 0), align 4
  %1706 = fcmp oge float %1704, %1705
  %1707 = fcmp ueq float %1704, 0.000000e+00
  %1708 = or i1 %1706, %1707
  %1709 = select i1 %1708, float %1704, float %1705
  %1710 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 28, i64 0), align 8
  %1711 = fcmp oge float %1709, %1710
  %1712 = fcmp ueq float %1709, 0.000000e+00
  %1713 = or i1 %1711, %1712
  %1714 = select i1 %1713, float %1709, float %1710
  %1715 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 11, i64 29, i64 0), align 4
  %1716 = fcmp oge float %1714, %1715
  %1717 = fcmp ueq float %1714, 0.000000e+00
  %1718 = or i1 %1716, %1717
  %1719 = select i1 %1718, float %1714, float %1715
  store volatile float %1719, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 3, i64 9, i64 0), align 4
  %1720 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 0, i64 0), align 8
  %1721 = fcmp ole float %1720, 0xFFF0000000000000
  %1722 = select i1 %1721, float 0xFFF0000000000000, float %1720
  %1723 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 1, i64 0), align 4
  %1724 = fcmp oge float %1722, %1723
  %1725 = fcmp ueq float %1722, 0.000000e+00
  %1726 = or i1 %1724, %1725
  %1727 = select i1 %1726, float %1722, float %1723
  %1728 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 2, i64 0), align 8
  %1729 = fcmp oge float %1727, %1728
  %1730 = fcmp ueq float %1727, 0.000000e+00
  %1731 = or i1 %1729, %1730
  %1732 = select i1 %1731, float %1727, float %1728
  %1733 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 0, i64 0), align 8
  %1734 = fcmp oge float %1732, %1733
  %1735 = fcmp ueq float %1732, 0.000000e+00
  %1736 = or i1 %1734, %1735
  %1737 = select i1 %1736, float %1732, float %1733
  %1738 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 1, i64 0), align 4
  %1739 = fcmp oge float %1737, %1738
  %1740 = fcmp ueq float %1737, 0.000000e+00
  %1741 = or i1 %1739, %1740
  %1742 = select i1 %1741, float %1737, float %1738
  %1743 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 2, i64 0), align 8
  %1744 = fcmp oge float %1742, %1743
  %1745 = fcmp ueq float %1742, 0.000000e+00
  %1746 = or i1 %1744, %1745
  %1747 = select i1 %1746, float %1742, float %1743
  %1748 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 0, i64 0), align 8
  %1749 = fcmp oge float %1747, %1748
  %1750 = fcmp ueq float %1747, 0.000000e+00
  %1751 = or i1 %1749, %1750
  %1752 = select i1 %1751, float %1747, float %1748
  %1753 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 1, i64 0), align 4
  %1754 = fcmp oge float %1752, %1753
  %1755 = fcmp ueq float %1752, 0.000000e+00
  %1756 = or i1 %1754, %1755
  %1757 = select i1 %1756, float %1752, float %1753
  %1758 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 2, i64 0), align 8
  %1759 = fcmp oge float %1757, %1758
  %1760 = fcmp ueq float %1757, 0.000000e+00
  %1761 = or i1 %1759, %1760
  %1762 = select i1 %1761, float %1757, float %1758
  store volatile float %1762, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 4, i64 0, i64 0), align 8
  %1763 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 3, i64 0), align 4
  %1764 = fcmp ole float %1763, 0xFFF0000000000000
  %1765 = select i1 %1764, float 0xFFF0000000000000, float %1763
  %1766 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 4, i64 0), align 8
  %1767 = fcmp oge float %1765, %1766
  %1768 = fcmp ueq float %1765, 0.000000e+00
  %1769 = or i1 %1767, %1768
  %1770 = select i1 %1769, float %1765, float %1766
  %1771 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 5, i64 0), align 4
  %1772 = fcmp oge float %1770, %1771
  %1773 = fcmp ueq float %1770, 0.000000e+00
  %1774 = or i1 %1772, %1773
  %1775 = select i1 %1774, float %1770, float %1771
  %1776 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 3, i64 0), align 4
  %1777 = fcmp oge float %1775, %1776
  %1778 = fcmp ueq float %1775, 0.000000e+00
  %1779 = or i1 %1777, %1778
  %1780 = select i1 %1779, float %1775, float %1776
  %1781 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 4, i64 0), align 8
  %1782 = fcmp oge float %1780, %1781
  %1783 = fcmp ueq float %1780, 0.000000e+00
  %1784 = or i1 %1782, %1783
  %1785 = select i1 %1784, float %1780, float %1781
  %1786 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 5, i64 0), align 4
  %1787 = fcmp oge float %1785, %1786
  %1788 = fcmp ueq float %1785, 0.000000e+00
  %1789 = or i1 %1787, %1788
  %1790 = select i1 %1789, float %1785, float %1786
  %1791 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 3, i64 0), align 4
  %1792 = fcmp oge float %1790, %1791
  %1793 = fcmp ueq float %1790, 0.000000e+00
  %1794 = or i1 %1792, %1793
  %1795 = select i1 %1794, float %1790, float %1791
  %1796 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 4, i64 0), align 8
  %1797 = fcmp oge float %1795, %1796
  %1798 = fcmp ueq float %1795, 0.000000e+00
  %1799 = or i1 %1797, %1798
  %1800 = select i1 %1799, float %1795, float %1796
  %1801 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 5, i64 0), align 4
  %1802 = fcmp oge float %1800, %1801
  %1803 = fcmp ueq float %1800, 0.000000e+00
  %1804 = or i1 %1802, %1803
  %1805 = select i1 %1804, float %1800, float %1801
  store volatile float %1805, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 4, i64 1, i64 0), align 4
  %1806 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 6, i64 0), align 8
  %1807 = fcmp ole float %1806, 0xFFF0000000000000
  %1808 = select i1 %1807, float 0xFFF0000000000000, float %1806
  %1809 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 7, i64 0), align 4
  %1810 = fcmp oge float %1808, %1809
  %1811 = fcmp ueq float %1808, 0.000000e+00
  %1812 = or i1 %1810, %1811
  %1813 = select i1 %1812, float %1808, float %1809
  %1814 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 8, i64 0), align 8
  %1815 = fcmp oge float %1813, %1814
  %1816 = fcmp ueq float %1813, 0.000000e+00
  %1817 = or i1 %1815, %1816
  %1818 = select i1 %1817, float %1813, float %1814
  %1819 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 6, i64 0), align 8
  %1820 = fcmp oge float %1818, %1819
  %1821 = fcmp ueq float %1818, 0.000000e+00
  %1822 = or i1 %1820, %1821
  %1823 = select i1 %1822, float %1818, float %1819
  %1824 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 7, i64 0), align 4
  %1825 = fcmp oge float %1823, %1824
  %1826 = fcmp ueq float %1823, 0.000000e+00
  %1827 = or i1 %1825, %1826
  %1828 = select i1 %1827, float %1823, float %1824
  %1829 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 8, i64 0), align 8
  %1830 = fcmp oge float %1828, %1829
  %1831 = fcmp ueq float %1828, 0.000000e+00
  %1832 = or i1 %1830, %1831
  %1833 = select i1 %1832, float %1828, float %1829
  %1834 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 6, i64 0), align 8
  %1835 = fcmp oge float %1833, %1834
  %1836 = fcmp ueq float %1833, 0.000000e+00
  %1837 = or i1 %1835, %1836
  %1838 = select i1 %1837, float %1833, float %1834
  %1839 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 7, i64 0), align 4
  %1840 = fcmp oge float %1838, %1839
  %1841 = fcmp ueq float %1838, 0.000000e+00
  %1842 = or i1 %1840, %1841
  %1843 = select i1 %1842, float %1838, float %1839
  %1844 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 8, i64 0), align 8
  %1845 = fcmp oge float %1843, %1844
  %1846 = fcmp ueq float %1843, 0.000000e+00
  %1847 = or i1 %1845, %1846
  %1848 = select i1 %1847, float %1843, float %1844
  store volatile float %1848, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 4, i64 2, i64 0), align 8
  %1849 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 9, i64 0), align 4
  %1850 = fcmp ole float %1849, 0xFFF0000000000000
  %1851 = select i1 %1850, float 0xFFF0000000000000, float %1849
  %1852 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 10, i64 0), align 8
  %1853 = fcmp oge float %1851, %1852
  %1854 = fcmp ueq float %1851, 0.000000e+00
  %1855 = or i1 %1853, %1854
  %1856 = select i1 %1855, float %1851, float %1852
  %1857 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 11, i64 0), align 4
  %1858 = fcmp oge float %1856, %1857
  %1859 = fcmp ueq float %1856, 0.000000e+00
  %1860 = or i1 %1858, %1859
  %1861 = select i1 %1860, float %1856, float %1857
  %1862 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 9, i64 0), align 4
  %1863 = fcmp oge float %1861, %1862
  %1864 = fcmp ueq float %1861, 0.000000e+00
  %1865 = or i1 %1863, %1864
  %1866 = select i1 %1865, float %1861, float %1862
  %1867 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 10, i64 0), align 8
  %1868 = fcmp oge float %1866, %1867
  %1869 = fcmp ueq float %1866, 0.000000e+00
  %1870 = or i1 %1868, %1869
  %1871 = select i1 %1870, float %1866, float %1867
  %1872 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 11, i64 0), align 4
  %1873 = fcmp oge float %1871, %1872
  %1874 = fcmp ueq float %1871, 0.000000e+00
  %1875 = or i1 %1873, %1874
  %1876 = select i1 %1875, float %1871, float %1872
  %1877 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 9, i64 0), align 4
  %1878 = fcmp oge float %1876, %1877
  %1879 = fcmp ueq float %1876, 0.000000e+00
  %1880 = or i1 %1878, %1879
  %1881 = select i1 %1880, float %1876, float %1877
  %1882 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 10, i64 0), align 8
  %1883 = fcmp oge float %1881, %1882
  %1884 = fcmp ueq float %1881, 0.000000e+00
  %1885 = or i1 %1883, %1884
  %1886 = select i1 %1885, float %1881, float %1882
  %1887 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 11, i64 0), align 4
  %1888 = fcmp oge float %1886, %1887
  %1889 = fcmp ueq float %1886, 0.000000e+00
  %1890 = or i1 %1888, %1889
  %1891 = select i1 %1890, float %1886, float %1887
  store volatile float %1891, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 4, i64 3, i64 0), align 4
  %1892 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 12, i64 0), align 8
  %1893 = fcmp ole float %1892, 0xFFF0000000000000
  %1894 = select i1 %1893, float 0xFFF0000000000000, float %1892
  %1895 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 13, i64 0), align 4
  %1896 = fcmp oge float %1894, %1895
  %1897 = fcmp ueq float %1894, 0.000000e+00
  %1898 = or i1 %1896, %1897
  %1899 = select i1 %1898, float %1894, float %1895
  %1900 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 14, i64 0), align 8
  %1901 = fcmp oge float %1899, %1900
  %1902 = fcmp ueq float %1899, 0.000000e+00
  %1903 = or i1 %1901, %1902
  %1904 = select i1 %1903, float %1899, float %1900
  %1905 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 12, i64 0), align 8
  %1906 = fcmp oge float %1904, %1905
  %1907 = fcmp ueq float %1904, 0.000000e+00
  %1908 = or i1 %1906, %1907
  %1909 = select i1 %1908, float %1904, float %1905
  %1910 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 13, i64 0), align 4
  %1911 = fcmp oge float %1909, %1910
  %1912 = fcmp ueq float %1909, 0.000000e+00
  %1913 = or i1 %1911, %1912
  %1914 = select i1 %1913, float %1909, float %1910
  %1915 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 14, i64 0), align 8
  %1916 = fcmp oge float %1914, %1915
  %1917 = fcmp ueq float %1914, 0.000000e+00
  %1918 = or i1 %1916, %1917
  %1919 = select i1 %1918, float %1914, float %1915
  %1920 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 12, i64 0), align 8
  %1921 = fcmp oge float %1919, %1920
  %1922 = fcmp ueq float %1919, 0.000000e+00
  %1923 = or i1 %1921, %1922
  %1924 = select i1 %1923, float %1919, float %1920
  %1925 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 13, i64 0), align 4
  %1926 = fcmp oge float %1924, %1925
  %1927 = fcmp ueq float %1924, 0.000000e+00
  %1928 = or i1 %1926, %1927
  %1929 = select i1 %1928, float %1924, float %1925
  %1930 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 14, i64 0), align 8
  %1931 = fcmp oge float %1929, %1930
  %1932 = fcmp ueq float %1929, 0.000000e+00
  %1933 = or i1 %1931, %1932
  %1934 = select i1 %1933, float %1929, float %1930
  store volatile float %1934, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 4, i64 4, i64 0), align 8
  %1935 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 15, i64 0), align 4
  %1936 = fcmp ole float %1935, 0xFFF0000000000000
  %1937 = select i1 %1936, float 0xFFF0000000000000, float %1935
  %1938 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 16, i64 0), align 8
  %1939 = fcmp oge float %1937, %1938
  %1940 = fcmp ueq float %1937, 0.000000e+00
  %1941 = or i1 %1939, %1940
  %1942 = select i1 %1941, float %1937, float %1938
  %1943 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 17, i64 0), align 4
  %1944 = fcmp oge float %1942, %1943
  %1945 = fcmp ueq float %1942, 0.000000e+00
  %1946 = or i1 %1944, %1945
  %1947 = select i1 %1946, float %1942, float %1943
  %1948 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 15, i64 0), align 4
  %1949 = fcmp oge float %1947, %1948
  %1950 = fcmp ueq float %1947, 0.000000e+00
  %1951 = or i1 %1949, %1950
  %1952 = select i1 %1951, float %1947, float %1948
  %1953 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 16, i64 0), align 8
  %1954 = fcmp oge float %1952, %1953
  %1955 = fcmp ueq float %1952, 0.000000e+00
  %1956 = or i1 %1954, %1955
  %1957 = select i1 %1956, float %1952, float %1953
  %1958 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 17, i64 0), align 4
  %1959 = fcmp oge float %1957, %1958
  %1960 = fcmp ueq float %1957, 0.000000e+00
  %1961 = or i1 %1959, %1960
  %1962 = select i1 %1961, float %1957, float %1958
  %1963 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 15, i64 0), align 4
  %1964 = fcmp oge float %1962, %1963
  %1965 = fcmp ueq float %1962, 0.000000e+00
  %1966 = or i1 %1964, %1965
  %1967 = select i1 %1966, float %1962, float %1963
  %1968 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 16, i64 0), align 8
  %1969 = fcmp oge float %1967, %1968
  %1970 = fcmp ueq float %1967, 0.000000e+00
  %1971 = or i1 %1969, %1970
  %1972 = select i1 %1971, float %1967, float %1968
  %1973 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 17, i64 0), align 4
  %1974 = fcmp oge float %1972, %1973
  %1975 = fcmp ueq float %1972, 0.000000e+00
  %1976 = or i1 %1974, %1975
  %1977 = select i1 %1976, float %1972, float %1973
  store volatile float %1977, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 4, i64 5, i64 0), align 4
  %1978 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 18, i64 0), align 8
  %1979 = fcmp ole float %1978, 0xFFF0000000000000
  %1980 = select i1 %1979, float 0xFFF0000000000000, float %1978
  %1981 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 19, i64 0), align 4
  %1982 = fcmp oge float %1980, %1981
  %1983 = fcmp ueq float %1980, 0.000000e+00
  %1984 = or i1 %1982, %1983
  %1985 = select i1 %1984, float %1980, float %1981
  %1986 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 20, i64 0), align 8
  %1987 = fcmp oge float %1985, %1986
  %1988 = fcmp ueq float %1985, 0.000000e+00
  %1989 = or i1 %1987, %1988
  %1990 = select i1 %1989, float %1985, float %1986
  %1991 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 18, i64 0), align 8
  %1992 = fcmp oge float %1990, %1991
  %1993 = fcmp ueq float %1990, 0.000000e+00
  %1994 = or i1 %1992, %1993
  %1995 = select i1 %1994, float %1990, float %1991
  %1996 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 19, i64 0), align 4
  %1997 = fcmp oge float %1995, %1996
  %1998 = fcmp ueq float %1995, 0.000000e+00
  %1999 = or i1 %1997, %1998
  %2000 = select i1 %1999, float %1995, float %1996
  %2001 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 20, i64 0), align 8
  %2002 = fcmp oge float %2000, %2001
  %2003 = fcmp ueq float %2000, 0.000000e+00
  %2004 = or i1 %2002, %2003
  %2005 = select i1 %2004, float %2000, float %2001
  %2006 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 18, i64 0), align 8
  %2007 = fcmp oge float %2005, %2006
  %2008 = fcmp ueq float %2005, 0.000000e+00
  %2009 = or i1 %2007, %2008
  %2010 = select i1 %2009, float %2005, float %2006
  %2011 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 19, i64 0), align 4
  %2012 = fcmp oge float %2010, %2011
  %2013 = fcmp ueq float %2010, 0.000000e+00
  %2014 = or i1 %2012, %2013
  %2015 = select i1 %2014, float %2010, float %2011
  %2016 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 20, i64 0), align 8
  %2017 = fcmp oge float %2015, %2016
  %2018 = fcmp ueq float %2015, 0.000000e+00
  %2019 = or i1 %2017, %2018
  %2020 = select i1 %2019, float %2015, float %2016
  store volatile float %2020, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 4, i64 6, i64 0), align 8
  %2021 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 21, i64 0), align 4
  %2022 = fcmp ole float %2021, 0xFFF0000000000000
  %2023 = select i1 %2022, float 0xFFF0000000000000, float %2021
  %2024 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 22, i64 0), align 8
  %2025 = fcmp oge float %2023, %2024
  %2026 = fcmp ueq float %2023, 0.000000e+00
  %2027 = or i1 %2025, %2026
  %2028 = select i1 %2027, float %2023, float %2024
  %2029 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 23, i64 0), align 4
  %2030 = fcmp oge float %2028, %2029
  %2031 = fcmp ueq float %2028, 0.000000e+00
  %2032 = or i1 %2030, %2031
  %2033 = select i1 %2032, float %2028, float %2029
  %2034 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 21, i64 0), align 4
  %2035 = fcmp oge float %2033, %2034
  %2036 = fcmp ueq float %2033, 0.000000e+00
  %2037 = or i1 %2035, %2036
  %2038 = select i1 %2037, float %2033, float %2034
  %2039 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 22, i64 0), align 8
  %2040 = fcmp oge float %2038, %2039
  %2041 = fcmp ueq float %2038, 0.000000e+00
  %2042 = or i1 %2040, %2041
  %2043 = select i1 %2042, float %2038, float %2039
  %2044 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 23, i64 0), align 4
  %2045 = fcmp oge float %2043, %2044
  %2046 = fcmp ueq float %2043, 0.000000e+00
  %2047 = or i1 %2045, %2046
  %2048 = select i1 %2047, float %2043, float %2044
  %2049 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 21, i64 0), align 4
  %2050 = fcmp oge float %2048, %2049
  %2051 = fcmp ueq float %2048, 0.000000e+00
  %2052 = or i1 %2050, %2051
  %2053 = select i1 %2052, float %2048, float %2049
  %2054 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 22, i64 0), align 8
  %2055 = fcmp oge float %2053, %2054
  %2056 = fcmp ueq float %2053, 0.000000e+00
  %2057 = or i1 %2055, %2056
  %2058 = select i1 %2057, float %2053, float %2054
  %2059 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 23, i64 0), align 4
  %2060 = fcmp oge float %2058, %2059
  %2061 = fcmp ueq float %2058, 0.000000e+00
  %2062 = or i1 %2060, %2061
  %2063 = select i1 %2062, float %2058, float %2059
  store volatile float %2063, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 4, i64 7, i64 0), align 4
  %2064 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 24, i64 0), align 8
  %2065 = fcmp ole float %2064, 0xFFF0000000000000
  %2066 = select i1 %2065, float 0xFFF0000000000000, float %2064
  %2067 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 25, i64 0), align 4
  %2068 = fcmp oge float %2066, %2067
  %2069 = fcmp ueq float %2066, 0.000000e+00
  %2070 = or i1 %2068, %2069
  %2071 = select i1 %2070, float %2066, float %2067
  %2072 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 26, i64 0), align 8
  %2073 = fcmp oge float %2071, %2072
  %2074 = fcmp ueq float %2071, 0.000000e+00
  %2075 = or i1 %2073, %2074
  %2076 = select i1 %2075, float %2071, float %2072
  %2077 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 24, i64 0), align 8
  %2078 = fcmp oge float %2076, %2077
  %2079 = fcmp ueq float %2076, 0.000000e+00
  %2080 = or i1 %2078, %2079
  %2081 = select i1 %2080, float %2076, float %2077
  %2082 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 25, i64 0), align 4
  %2083 = fcmp oge float %2081, %2082
  %2084 = fcmp ueq float %2081, 0.000000e+00
  %2085 = or i1 %2083, %2084
  %2086 = select i1 %2085, float %2081, float %2082
  %2087 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 26, i64 0), align 8
  %2088 = fcmp oge float %2086, %2087
  %2089 = fcmp ueq float %2086, 0.000000e+00
  %2090 = or i1 %2088, %2089
  %2091 = select i1 %2090, float %2086, float %2087
  %2092 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 24, i64 0), align 8
  %2093 = fcmp oge float %2091, %2092
  %2094 = fcmp ueq float %2091, 0.000000e+00
  %2095 = or i1 %2093, %2094
  %2096 = select i1 %2095, float %2091, float %2092
  %2097 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 25, i64 0), align 4
  %2098 = fcmp oge float %2096, %2097
  %2099 = fcmp ueq float %2096, 0.000000e+00
  %2100 = or i1 %2098, %2099
  %2101 = select i1 %2100, float %2096, float %2097
  %2102 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 26, i64 0), align 8
  %2103 = fcmp oge float %2101, %2102
  %2104 = fcmp ueq float %2101, 0.000000e+00
  %2105 = or i1 %2103, %2104
  %2106 = select i1 %2105, float %2101, float %2102
  store volatile float %2106, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 4, i64 8, i64 0), align 8
  %2107 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 27, i64 0), align 4
  %2108 = fcmp ole float %2107, 0xFFF0000000000000
  %2109 = select i1 %2108, float 0xFFF0000000000000, float %2107
  %2110 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 28, i64 0), align 8
  %2111 = fcmp oge float %2109, %2110
  %2112 = fcmp ueq float %2109, 0.000000e+00
  %2113 = or i1 %2111, %2112
  %2114 = select i1 %2113, float %2109, float %2110
  %2115 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 12, i64 29, i64 0), align 4
  %2116 = fcmp oge float %2114, %2115
  %2117 = fcmp ueq float %2114, 0.000000e+00
  %2118 = or i1 %2116, %2117
  %2119 = select i1 %2118, float %2114, float %2115
  %2120 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 27, i64 0), align 4
  %2121 = fcmp oge float %2119, %2120
  %2122 = fcmp ueq float %2119, 0.000000e+00
  %2123 = or i1 %2121, %2122
  %2124 = select i1 %2123, float %2119, float %2120
  %2125 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 28, i64 0), align 8
  %2126 = fcmp oge float %2124, %2125
  %2127 = fcmp ueq float %2124, 0.000000e+00
  %2128 = or i1 %2126, %2127
  %2129 = select i1 %2128, float %2124, float %2125
  %2130 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 13, i64 29, i64 0), align 4
  %2131 = fcmp oge float %2129, %2130
  %2132 = fcmp ueq float %2129, 0.000000e+00
  %2133 = or i1 %2131, %2132
  %2134 = select i1 %2133, float %2129, float %2130
  %2135 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 27, i64 0), align 4
  %2136 = fcmp oge float %2134, %2135
  %2137 = fcmp ueq float %2134, 0.000000e+00
  %2138 = or i1 %2136, %2137
  %2139 = select i1 %2138, float %2134, float %2135
  %2140 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 28, i64 0), align 8
  %2141 = fcmp oge float %2139, %2140
  %2142 = fcmp ueq float %2139, 0.000000e+00
  %2143 = or i1 %2141, %2142
  %2144 = select i1 %2143, float %2139, float %2140
  %2145 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 14, i64 29, i64 0), align 4
  %2146 = fcmp oge float %2144, %2145
  %2147 = fcmp ueq float %2144, 0.000000e+00
  %2148 = or i1 %2146, %2147
  %2149 = select i1 %2148, float %2144, float %2145
  store volatile float %2149, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 4, i64 9, i64 0), align 4
  %2150 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 0, i64 0), align 8
  %2151 = fcmp ole float %2150, 0xFFF0000000000000
  %2152 = select i1 %2151, float 0xFFF0000000000000, float %2150
  %2153 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 1, i64 0), align 4
  %2154 = fcmp oge float %2152, %2153
  %2155 = fcmp ueq float %2152, 0.000000e+00
  %2156 = or i1 %2154, %2155
  %2157 = select i1 %2156, float %2152, float %2153
  %2158 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 2, i64 0), align 8
  %2159 = fcmp oge float %2157, %2158
  %2160 = fcmp ueq float %2157, 0.000000e+00
  %2161 = or i1 %2159, %2160
  %2162 = select i1 %2161, float %2157, float %2158
  %2163 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 0, i64 0), align 8
  %2164 = fcmp oge float %2162, %2163
  %2165 = fcmp ueq float %2162, 0.000000e+00
  %2166 = or i1 %2164, %2165
  %2167 = select i1 %2166, float %2162, float %2163
  %2168 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 1, i64 0), align 4
  %2169 = fcmp oge float %2167, %2168
  %2170 = fcmp ueq float %2167, 0.000000e+00
  %2171 = or i1 %2169, %2170
  %2172 = select i1 %2171, float %2167, float %2168
  %2173 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 2, i64 0), align 8
  %2174 = fcmp oge float %2172, %2173
  %2175 = fcmp ueq float %2172, 0.000000e+00
  %2176 = or i1 %2174, %2175
  %2177 = select i1 %2176, float %2172, float %2173
  %2178 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 0, i64 0), align 8
  %2179 = fcmp oge float %2177, %2178
  %2180 = fcmp ueq float %2177, 0.000000e+00
  %2181 = or i1 %2179, %2180
  %2182 = select i1 %2181, float %2177, float %2178
  %2183 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 1, i64 0), align 4
  %2184 = fcmp oge float %2182, %2183
  %2185 = fcmp ueq float %2182, 0.000000e+00
  %2186 = or i1 %2184, %2185
  %2187 = select i1 %2186, float %2182, float %2183
  %2188 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 2, i64 0), align 8
  %2189 = fcmp oge float %2187, %2188
  %2190 = fcmp ueq float %2187, 0.000000e+00
  %2191 = or i1 %2189, %2190
  %2192 = select i1 %2191, float %2187, float %2188
  store volatile float %2192, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 5, i64 0, i64 0), align 8
  %2193 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 3, i64 0), align 4
  %2194 = fcmp ole float %2193, 0xFFF0000000000000
  %2195 = select i1 %2194, float 0xFFF0000000000000, float %2193
  %2196 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 4, i64 0), align 8
  %2197 = fcmp oge float %2195, %2196
  %2198 = fcmp ueq float %2195, 0.000000e+00
  %2199 = or i1 %2197, %2198
  %2200 = select i1 %2199, float %2195, float %2196
  %2201 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 5, i64 0), align 4
  %2202 = fcmp oge float %2200, %2201
  %2203 = fcmp ueq float %2200, 0.000000e+00
  %2204 = or i1 %2202, %2203
  %2205 = select i1 %2204, float %2200, float %2201
  %2206 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 3, i64 0), align 4
  %2207 = fcmp oge float %2205, %2206
  %2208 = fcmp ueq float %2205, 0.000000e+00
  %2209 = or i1 %2207, %2208
  %2210 = select i1 %2209, float %2205, float %2206
  %2211 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 4, i64 0), align 8
  %2212 = fcmp oge float %2210, %2211
  %2213 = fcmp ueq float %2210, 0.000000e+00
  %2214 = or i1 %2212, %2213
  %2215 = select i1 %2214, float %2210, float %2211
  %2216 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 5, i64 0), align 4
  %2217 = fcmp oge float %2215, %2216
  %2218 = fcmp ueq float %2215, 0.000000e+00
  %2219 = or i1 %2217, %2218
  %2220 = select i1 %2219, float %2215, float %2216
  %2221 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 3, i64 0), align 4
  %2222 = fcmp oge float %2220, %2221
  %2223 = fcmp ueq float %2220, 0.000000e+00
  %2224 = or i1 %2222, %2223
  %2225 = select i1 %2224, float %2220, float %2221
  %2226 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 4, i64 0), align 8
  %2227 = fcmp oge float %2225, %2226
  %2228 = fcmp ueq float %2225, 0.000000e+00
  %2229 = or i1 %2227, %2228
  %2230 = select i1 %2229, float %2225, float %2226
  %2231 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 5, i64 0), align 4
  %2232 = fcmp oge float %2230, %2231
  %2233 = fcmp ueq float %2230, 0.000000e+00
  %2234 = or i1 %2232, %2233
  %2235 = select i1 %2234, float %2230, float %2231
  store volatile float %2235, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 5, i64 1, i64 0), align 4
  %2236 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 6, i64 0), align 8
  %2237 = fcmp ole float %2236, 0xFFF0000000000000
  %2238 = select i1 %2237, float 0xFFF0000000000000, float %2236
  %2239 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 7, i64 0), align 4
  %2240 = fcmp oge float %2238, %2239
  %2241 = fcmp ueq float %2238, 0.000000e+00
  %2242 = or i1 %2240, %2241
  %2243 = select i1 %2242, float %2238, float %2239
  %2244 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 8, i64 0), align 8
  %2245 = fcmp oge float %2243, %2244
  %2246 = fcmp ueq float %2243, 0.000000e+00
  %2247 = or i1 %2245, %2246
  %2248 = select i1 %2247, float %2243, float %2244
  %2249 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 6, i64 0), align 8
  %2250 = fcmp oge float %2248, %2249
  %2251 = fcmp ueq float %2248, 0.000000e+00
  %2252 = or i1 %2250, %2251
  %2253 = select i1 %2252, float %2248, float %2249
  %2254 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 7, i64 0), align 4
  %2255 = fcmp oge float %2253, %2254
  %2256 = fcmp ueq float %2253, 0.000000e+00
  %2257 = or i1 %2255, %2256
  %2258 = select i1 %2257, float %2253, float %2254
  %2259 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 8, i64 0), align 8
  %2260 = fcmp oge float %2258, %2259
  %2261 = fcmp ueq float %2258, 0.000000e+00
  %2262 = or i1 %2260, %2261
  %2263 = select i1 %2262, float %2258, float %2259
  %2264 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 6, i64 0), align 8
  %2265 = fcmp oge float %2263, %2264
  %2266 = fcmp ueq float %2263, 0.000000e+00
  %2267 = or i1 %2265, %2266
  %2268 = select i1 %2267, float %2263, float %2264
  %2269 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 7, i64 0), align 4
  %2270 = fcmp oge float %2268, %2269
  %2271 = fcmp ueq float %2268, 0.000000e+00
  %2272 = or i1 %2270, %2271
  %2273 = select i1 %2272, float %2268, float %2269
  %2274 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 8, i64 0), align 8
  %2275 = fcmp oge float %2273, %2274
  %2276 = fcmp ueq float %2273, 0.000000e+00
  %2277 = or i1 %2275, %2276
  %2278 = select i1 %2277, float %2273, float %2274
  store volatile float %2278, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 5, i64 2, i64 0), align 8
  %2279 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 9, i64 0), align 4
  %2280 = fcmp ole float %2279, 0xFFF0000000000000
  %2281 = select i1 %2280, float 0xFFF0000000000000, float %2279
  %2282 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 10, i64 0), align 8
  %2283 = fcmp oge float %2281, %2282
  %2284 = fcmp ueq float %2281, 0.000000e+00
  %2285 = or i1 %2283, %2284
  %2286 = select i1 %2285, float %2281, float %2282
  %2287 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 11, i64 0), align 4
  %2288 = fcmp oge float %2286, %2287
  %2289 = fcmp ueq float %2286, 0.000000e+00
  %2290 = or i1 %2288, %2289
  %2291 = select i1 %2290, float %2286, float %2287
  %2292 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 9, i64 0), align 4
  %2293 = fcmp oge float %2291, %2292
  %2294 = fcmp ueq float %2291, 0.000000e+00
  %2295 = or i1 %2293, %2294
  %2296 = select i1 %2295, float %2291, float %2292
  %2297 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 10, i64 0), align 8
  %2298 = fcmp oge float %2296, %2297
  %2299 = fcmp ueq float %2296, 0.000000e+00
  %2300 = or i1 %2298, %2299
  %2301 = select i1 %2300, float %2296, float %2297
  %2302 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 11, i64 0), align 4
  %2303 = fcmp oge float %2301, %2302
  %2304 = fcmp ueq float %2301, 0.000000e+00
  %2305 = or i1 %2303, %2304
  %2306 = select i1 %2305, float %2301, float %2302
  %2307 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 9, i64 0), align 4
  %2308 = fcmp oge float %2306, %2307
  %2309 = fcmp ueq float %2306, 0.000000e+00
  %2310 = or i1 %2308, %2309
  %2311 = select i1 %2310, float %2306, float %2307
  %2312 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 10, i64 0), align 8
  %2313 = fcmp oge float %2311, %2312
  %2314 = fcmp ueq float %2311, 0.000000e+00
  %2315 = or i1 %2313, %2314
  %2316 = select i1 %2315, float %2311, float %2312
  %2317 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 11, i64 0), align 4
  %2318 = fcmp oge float %2316, %2317
  %2319 = fcmp ueq float %2316, 0.000000e+00
  %2320 = or i1 %2318, %2319
  %2321 = select i1 %2320, float %2316, float %2317
  store volatile float %2321, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 5, i64 3, i64 0), align 4
  %2322 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 12, i64 0), align 8
  %2323 = fcmp ole float %2322, 0xFFF0000000000000
  %2324 = select i1 %2323, float 0xFFF0000000000000, float %2322
  %2325 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 13, i64 0), align 4
  %2326 = fcmp oge float %2324, %2325
  %2327 = fcmp ueq float %2324, 0.000000e+00
  %2328 = or i1 %2326, %2327
  %2329 = select i1 %2328, float %2324, float %2325
  %2330 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 14, i64 0), align 8
  %2331 = fcmp oge float %2329, %2330
  %2332 = fcmp ueq float %2329, 0.000000e+00
  %2333 = or i1 %2331, %2332
  %2334 = select i1 %2333, float %2329, float %2330
  %2335 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 12, i64 0), align 8
  %2336 = fcmp oge float %2334, %2335
  %2337 = fcmp ueq float %2334, 0.000000e+00
  %2338 = or i1 %2336, %2337
  %2339 = select i1 %2338, float %2334, float %2335
  %2340 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 13, i64 0), align 4
  %2341 = fcmp oge float %2339, %2340
  %2342 = fcmp ueq float %2339, 0.000000e+00
  %2343 = or i1 %2341, %2342
  %2344 = select i1 %2343, float %2339, float %2340
  %2345 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 14, i64 0), align 8
  %2346 = fcmp oge float %2344, %2345
  %2347 = fcmp ueq float %2344, 0.000000e+00
  %2348 = or i1 %2346, %2347
  %2349 = select i1 %2348, float %2344, float %2345
  %2350 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 12, i64 0), align 8
  %2351 = fcmp oge float %2349, %2350
  %2352 = fcmp ueq float %2349, 0.000000e+00
  %2353 = or i1 %2351, %2352
  %2354 = select i1 %2353, float %2349, float %2350
  %2355 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 13, i64 0), align 4
  %2356 = fcmp oge float %2354, %2355
  %2357 = fcmp ueq float %2354, 0.000000e+00
  %2358 = or i1 %2356, %2357
  %2359 = select i1 %2358, float %2354, float %2355
  %2360 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 14, i64 0), align 8
  %2361 = fcmp oge float %2359, %2360
  %2362 = fcmp ueq float %2359, 0.000000e+00
  %2363 = or i1 %2361, %2362
  %2364 = select i1 %2363, float %2359, float %2360
  store volatile float %2364, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 5, i64 4, i64 0), align 8
  %2365 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 15, i64 0), align 4
  %2366 = fcmp ole float %2365, 0xFFF0000000000000
  %2367 = select i1 %2366, float 0xFFF0000000000000, float %2365
  %2368 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 16, i64 0), align 8
  %2369 = fcmp oge float %2367, %2368
  %2370 = fcmp ueq float %2367, 0.000000e+00
  %2371 = or i1 %2369, %2370
  %2372 = select i1 %2371, float %2367, float %2368
  %2373 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 17, i64 0), align 4
  %2374 = fcmp oge float %2372, %2373
  %2375 = fcmp ueq float %2372, 0.000000e+00
  %2376 = or i1 %2374, %2375
  %2377 = select i1 %2376, float %2372, float %2373
  %2378 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 15, i64 0), align 4
  %2379 = fcmp oge float %2377, %2378
  %2380 = fcmp ueq float %2377, 0.000000e+00
  %2381 = or i1 %2379, %2380
  %2382 = select i1 %2381, float %2377, float %2378
  %2383 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 16, i64 0), align 8
  %2384 = fcmp oge float %2382, %2383
  %2385 = fcmp ueq float %2382, 0.000000e+00
  %2386 = or i1 %2384, %2385
  %2387 = select i1 %2386, float %2382, float %2383
  %2388 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 17, i64 0), align 4
  %2389 = fcmp oge float %2387, %2388
  %2390 = fcmp ueq float %2387, 0.000000e+00
  %2391 = or i1 %2389, %2390
  %2392 = select i1 %2391, float %2387, float %2388
  %2393 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 15, i64 0), align 4
  %2394 = fcmp oge float %2392, %2393
  %2395 = fcmp ueq float %2392, 0.000000e+00
  %2396 = or i1 %2394, %2395
  %2397 = select i1 %2396, float %2392, float %2393
  %2398 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 16, i64 0), align 8
  %2399 = fcmp oge float %2397, %2398
  %2400 = fcmp ueq float %2397, 0.000000e+00
  %2401 = or i1 %2399, %2400
  %2402 = select i1 %2401, float %2397, float %2398
  %2403 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 17, i64 0), align 4
  %2404 = fcmp oge float %2402, %2403
  %2405 = fcmp ueq float %2402, 0.000000e+00
  %2406 = or i1 %2404, %2405
  %2407 = select i1 %2406, float %2402, float %2403
  store volatile float %2407, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 5, i64 5, i64 0), align 4
  %2408 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 18, i64 0), align 8
  %2409 = fcmp ole float %2408, 0xFFF0000000000000
  %2410 = select i1 %2409, float 0xFFF0000000000000, float %2408
  %2411 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 19, i64 0), align 4
  %2412 = fcmp oge float %2410, %2411
  %2413 = fcmp ueq float %2410, 0.000000e+00
  %2414 = or i1 %2412, %2413
  %2415 = select i1 %2414, float %2410, float %2411
  %2416 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 20, i64 0), align 8
  %2417 = fcmp oge float %2415, %2416
  %2418 = fcmp ueq float %2415, 0.000000e+00
  %2419 = or i1 %2417, %2418
  %2420 = select i1 %2419, float %2415, float %2416
  %2421 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 18, i64 0), align 8
  %2422 = fcmp oge float %2420, %2421
  %2423 = fcmp ueq float %2420, 0.000000e+00
  %2424 = or i1 %2422, %2423
  %2425 = select i1 %2424, float %2420, float %2421
  %2426 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 19, i64 0), align 4
  %2427 = fcmp oge float %2425, %2426
  %2428 = fcmp ueq float %2425, 0.000000e+00
  %2429 = or i1 %2427, %2428
  %2430 = select i1 %2429, float %2425, float %2426
  %2431 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 20, i64 0), align 8
  %2432 = fcmp oge float %2430, %2431
  %2433 = fcmp ueq float %2430, 0.000000e+00
  %2434 = or i1 %2432, %2433
  %2435 = select i1 %2434, float %2430, float %2431
  %2436 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 18, i64 0), align 8
  %2437 = fcmp oge float %2435, %2436
  %2438 = fcmp ueq float %2435, 0.000000e+00
  %2439 = or i1 %2437, %2438
  %2440 = select i1 %2439, float %2435, float %2436
  %2441 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 19, i64 0), align 4
  %2442 = fcmp oge float %2440, %2441
  %2443 = fcmp ueq float %2440, 0.000000e+00
  %2444 = or i1 %2442, %2443
  %2445 = select i1 %2444, float %2440, float %2441
  %2446 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 20, i64 0), align 8
  %2447 = fcmp oge float %2445, %2446
  %2448 = fcmp ueq float %2445, 0.000000e+00
  %2449 = or i1 %2447, %2448
  %2450 = select i1 %2449, float %2445, float %2446
  store volatile float %2450, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 5, i64 6, i64 0), align 8
  %2451 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 21, i64 0), align 4
  %2452 = fcmp ole float %2451, 0xFFF0000000000000
  %2453 = select i1 %2452, float 0xFFF0000000000000, float %2451
  %2454 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 22, i64 0), align 8
  %2455 = fcmp oge float %2453, %2454
  %2456 = fcmp ueq float %2453, 0.000000e+00
  %2457 = or i1 %2455, %2456
  %2458 = select i1 %2457, float %2453, float %2454
  %2459 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 23, i64 0), align 4
  %2460 = fcmp oge float %2458, %2459
  %2461 = fcmp ueq float %2458, 0.000000e+00
  %2462 = or i1 %2460, %2461
  %2463 = select i1 %2462, float %2458, float %2459
  %2464 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 21, i64 0), align 4
  %2465 = fcmp oge float %2463, %2464
  %2466 = fcmp ueq float %2463, 0.000000e+00
  %2467 = or i1 %2465, %2466
  %2468 = select i1 %2467, float %2463, float %2464
  %2469 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 22, i64 0), align 8
  %2470 = fcmp oge float %2468, %2469
  %2471 = fcmp ueq float %2468, 0.000000e+00
  %2472 = or i1 %2470, %2471
  %2473 = select i1 %2472, float %2468, float %2469
  %2474 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 23, i64 0), align 4
  %2475 = fcmp oge float %2473, %2474
  %2476 = fcmp ueq float %2473, 0.000000e+00
  %2477 = or i1 %2475, %2476
  %2478 = select i1 %2477, float %2473, float %2474
  %2479 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 21, i64 0), align 4
  %2480 = fcmp oge float %2478, %2479
  %2481 = fcmp ueq float %2478, 0.000000e+00
  %2482 = or i1 %2480, %2481
  %2483 = select i1 %2482, float %2478, float %2479
  %2484 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 22, i64 0), align 8
  %2485 = fcmp oge float %2483, %2484
  %2486 = fcmp ueq float %2483, 0.000000e+00
  %2487 = or i1 %2485, %2486
  %2488 = select i1 %2487, float %2483, float %2484
  %2489 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 23, i64 0), align 4
  %2490 = fcmp oge float %2488, %2489
  %2491 = fcmp ueq float %2488, 0.000000e+00
  %2492 = or i1 %2490, %2491
  %2493 = select i1 %2492, float %2488, float %2489
  store volatile float %2493, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 5, i64 7, i64 0), align 4
  %2494 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 24, i64 0), align 8
  %2495 = fcmp ole float %2494, 0xFFF0000000000000
  %2496 = select i1 %2495, float 0xFFF0000000000000, float %2494
  %2497 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 25, i64 0), align 4
  %2498 = fcmp oge float %2496, %2497
  %2499 = fcmp ueq float %2496, 0.000000e+00
  %2500 = or i1 %2498, %2499
  %2501 = select i1 %2500, float %2496, float %2497
  %2502 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 26, i64 0), align 8
  %2503 = fcmp oge float %2501, %2502
  %2504 = fcmp ueq float %2501, 0.000000e+00
  %2505 = or i1 %2503, %2504
  %2506 = select i1 %2505, float %2501, float %2502
  %2507 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 24, i64 0), align 8
  %2508 = fcmp oge float %2506, %2507
  %2509 = fcmp ueq float %2506, 0.000000e+00
  %2510 = or i1 %2508, %2509
  %2511 = select i1 %2510, float %2506, float %2507
  %2512 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 25, i64 0), align 4
  %2513 = fcmp oge float %2511, %2512
  %2514 = fcmp ueq float %2511, 0.000000e+00
  %2515 = or i1 %2513, %2514
  %2516 = select i1 %2515, float %2511, float %2512
  %2517 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 26, i64 0), align 8
  %2518 = fcmp oge float %2516, %2517
  %2519 = fcmp ueq float %2516, 0.000000e+00
  %2520 = or i1 %2518, %2519
  %2521 = select i1 %2520, float %2516, float %2517
  %2522 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 24, i64 0), align 8
  %2523 = fcmp oge float %2521, %2522
  %2524 = fcmp ueq float %2521, 0.000000e+00
  %2525 = or i1 %2523, %2524
  %2526 = select i1 %2525, float %2521, float %2522
  %2527 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 25, i64 0), align 4
  %2528 = fcmp oge float %2526, %2527
  %2529 = fcmp ueq float %2526, 0.000000e+00
  %2530 = or i1 %2528, %2529
  %2531 = select i1 %2530, float %2526, float %2527
  %2532 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 26, i64 0), align 8
  %2533 = fcmp oge float %2531, %2532
  %2534 = fcmp ueq float %2531, 0.000000e+00
  %2535 = or i1 %2533, %2534
  %2536 = select i1 %2535, float %2531, float %2532
  store volatile float %2536, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 5, i64 8, i64 0), align 8
  %2537 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 27, i64 0), align 4
  %2538 = fcmp ole float %2537, 0xFFF0000000000000
  %2539 = select i1 %2538, float 0xFFF0000000000000, float %2537
  %2540 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 28, i64 0), align 8
  %2541 = fcmp oge float %2539, %2540
  %2542 = fcmp ueq float %2539, 0.000000e+00
  %2543 = or i1 %2541, %2542
  %2544 = select i1 %2543, float %2539, float %2540
  %2545 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 15, i64 29, i64 0), align 4
  %2546 = fcmp oge float %2544, %2545
  %2547 = fcmp ueq float %2544, 0.000000e+00
  %2548 = or i1 %2546, %2547
  %2549 = select i1 %2548, float %2544, float %2545
  %2550 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 27, i64 0), align 4
  %2551 = fcmp oge float %2549, %2550
  %2552 = fcmp ueq float %2549, 0.000000e+00
  %2553 = or i1 %2551, %2552
  %2554 = select i1 %2553, float %2549, float %2550
  %2555 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 28, i64 0), align 8
  %2556 = fcmp oge float %2554, %2555
  %2557 = fcmp ueq float %2554, 0.000000e+00
  %2558 = or i1 %2556, %2557
  %2559 = select i1 %2558, float %2554, float %2555
  %2560 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 16, i64 29, i64 0), align 4
  %2561 = fcmp oge float %2559, %2560
  %2562 = fcmp ueq float %2559, 0.000000e+00
  %2563 = or i1 %2561, %2562
  %2564 = select i1 %2563, float %2559, float %2560
  %2565 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 27, i64 0), align 4
  %2566 = fcmp oge float %2564, %2565
  %2567 = fcmp ueq float %2564, 0.000000e+00
  %2568 = or i1 %2566, %2567
  %2569 = select i1 %2568, float %2564, float %2565
  %2570 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 28, i64 0), align 8
  %2571 = fcmp oge float %2569, %2570
  %2572 = fcmp ueq float %2569, 0.000000e+00
  %2573 = or i1 %2571, %2572
  %2574 = select i1 %2573, float %2569, float %2570
  %2575 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 17, i64 29, i64 0), align 4
  %2576 = fcmp oge float %2574, %2575
  %2577 = fcmp ueq float %2574, 0.000000e+00
  %2578 = or i1 %2576, %2577
  %2579 = select i1 %2578, float %2574, float %2575
  store volatile float %2579, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 5, i64 9, i64 0), align 4
  %2580 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 0, i64 0), align 8
  %2581 = fcmp ole float %2580, 0xFFF0000000000000
  %2582 = select i1 %2581, float 0xFFF0000000000000, float %2580
  %2583 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 1, i64 0), align 4
  %2584 = fcmp oge float %2582, %2583
  %2585 = fcmp ueq float %2582, 0.000000e+00
  %2586 = or i1 %2584, %2585
  %2587 = select i1 %2586, float %2582, float %2583
  %2588 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 2, i64 0), align 8
  %2589 = fcmp oge float %2587, %2588
  %2590 = fcmp ueq float %2587, 0.000000e+00
  %2591 = or i1 %2589, %2590
  %2592 = select i1 %2591, float %2587, float %2588
  %2593 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 0, i64 0), align 8
  %2594 = fcmp oge float %2592, %2593
  %2595 = fcmp ueq float %2592, 0.000000e+00
  %2596 = or i1 %2594, %2595
  %2597 = select i1 %2596, float %2592, float %2593
  %2598 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 1, i64 0), align 4
  %2599 = fcmp oge float %2597, %2598
  %2600 = fcmp ueq float %2597, 0.000000e+00
  %2601 = or i1 %2599, %2600
  %2602 = select i1 %2601, float %2597, float %2598
  %2603 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 2, i64 0), align 8
  %2604 = fcmp oge float %2602, %2603
  %2605 = fcmp ueq float %2602, 0.000000e+00
  %2606 = or i1 %2604, %2605
  %2607 = select i1 %2606, float %2602, float %2603
  %2608 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 0, i64 0), align 8
  %2609 = fcmp oge float %2607, %2608
  %2610 = fcmp ueq float %2607, 0.000000e+00
  %2611 = or i1 %2609, %2610
  %2612 = select i1 %2611, float %2607, float %2608
  %2613 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 1, i64 0), align 4
  %2614 = fcmp oge float %2612, %2613
  %2615 = fcmp ueq float %2612, 0.000000e+00
  %2616 = or i1 %2614, %2615
  %2617 = select i1 %2616, float %2612, float %2613
  %2618 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 2, i64 0), align 8
  %2619 = fcmp oge float %2617, %2618
  %2620 = fcmp ueq float %2617, 0.000000e+00
  %2621 = or i1 %2619, %2620
  %2622 = select i1 %2621, float %2617, float %2618
  store volatile float %2622, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 6, i64 0, i64 0), align 8
  %2623 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 3, i64 0), align 4
  %2624 = fcmp ole float %2623, 0xFFF0000000000000
  %2625 = select i1 %2624, float 0xFFF0000000000000, float %2623
  %2626 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 4, i64 0), align 8
  %2627 = fcmp oge float %2625, %2626
  %2628 = fcmp ueq float %2625, 0.000000e+00
  %2629 = or i1 %2627, %2628
  %2630 = select i1 %2629, float %2625, float %2626
  %2631 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 5, i64 0), align 4
  %2632 = fcmp oge float %2630, %2631
  %2633 = fcmp ueq float %2630, 0.000000e+00
  %2634 = or i1 %2632, %2633
  %2635 = select i1 %2634, float %2630, float %2631
  %2636 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 3, i64 0), align 4
  %2637 = fcmp oge float %2635, %2636
  %2638 = fcmp ueq float %2635, 0.000000e+00
  %2639 = or i1 %2637, %2638
  %2640 = select i1 %2639, float %2635, float %2636
  %2641 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 4, i64 0), align 8
  %2642 = fcmp oge float %2640, %2641
  %2643 = fcmp ueq float %2640, 0.000000e+00
  %2644 = or i1 %2642, %2643
  %2645 = select i1 %2644, float %2640, float %2641
  %2646 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 5, i64 0), align 4
  %2647 = fcmp oge float %2645, %2646
  %2648 = fcmp ueq float %2645, 0.000000e+00
  %2649 = or i1 %2647, %2648
  %2650 = select i1 %2649, float %2645, float %2646
  %2651 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 3, i64 0), align 4
  %2652 = fcmp oge float %2650, %2651
  %2653 = fcmp ueq float %2650, 0.000000e+00
  %2654 = or i1 %2652, %2653
  %2655 = select i1 %2654, float %2650, float %2651
  %2656 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 4, i64 0), align 8
  %2657 = fcmp oge float %2655, %2656
  %2658 = fcmp ueq float %2655, 0.000000e+00
  %2659 = or i1 %2657, %2658
  %2660 = select i1 %2659, float %2655, float %2656
  %2661 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 5, i64 0), align 4
  %2662 = fcmp oge float %2660, %2661
  %2663 = fcmp ueq float %2660, 0.000000e+00
  %2664 = or i1 %2662, %2663
  %2665 = select i1 %2664, float %2660, float %2661
  store volatile float %2665, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 6, i64 1, i64 0), align 4
  %2666 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 6, i64 0), align 8
  %2667 = fcmp ole float %2666, 0xFFF0000000000000
  %2668 = select i1 %2667, float 0xFFF0000000000000, float %2666
  %2669 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 7, i64 0), align 4
  %2670 = fcmp oge float %2668, %2669
  %2671 = fcmp ueq float %2668, 0.000000e+00
  %2672 = or i1 %2670, %2671
  %2673 = select i1 %2672, float %2668, float %2669
  %2674 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 8, i64 0), align 8
  %2675 = fcmp oge float %2673, %2674
  %2676 = fcmp ueq float %2673, 0.000000e+00
  %2677 = or i1 %2675, %2676
  %2678 = select i1 %2677, float %2673, float %2674
  %2679 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 6, i64 0), align 8
  %2680 = fcmp oge float %2678, %2679
  %2681 = fcmp ueq float %2678, 0.000000e+00
  %2682 = or i1 %2680, %2681
  %2683 = select i1 %2682, float %2678, float %2679
  %2684 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 7, i64 0), align 4
  %2685 = fcmp oge float %2683, %2684
  %2686 = fcmp ueq float %2683, 0.000000e+00
  %2687 = or i1 %2685, %2686
  %2688 = select i1 %2687, float %2683, float %2684
  %2689 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 8, i64 0), align 8
  %2690 = fcmp oge float %2688, %2689
  %2691 = fcmp ueq float %2688, 0.000000e+00
  %2692 = or i1 %2690, %2691
  %2693 = select i1 %2692, float %2688, float %2689
  %2694 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 6, i64 0), align 8
  %2695 = fcmp oge float %2693, %2694
  %2696 = fcmp ueq float %2693, 0.000000e+00
  %2697 = or i1 %2695, %2696
  %2698 = select i1 %2697, float %2693, float %2694
  %2699 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 7, i64 0), align 4
  %2700 = fcmp oge float %2698, %2699
  %2701 = fcmp ueq float %2698, 0.000000e+00
  %2702 = or i1 %2700, %2701
  %2703 = select i1 %2702, float %2698, float %2699
  %2704 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 8, i64 0), align 8
  %2705 = fcmp oge float %2703, %2704
  %2706 = fcmp ueq float %2703, 0.000000e+00
  %2707 = or i1 %2705, %2706
  %2708 = select i1 %2707, float %2703, float %2704
  store volatile float %2708, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 6, i64 2, i64 0), align 8
  %2709 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 9, i64 0), align 4
  %2710 = fcmp ole float %2709, 0xFFF0000000000000
  %2711 = select i1 %2710, float 0xFFF0000000000000, float %2709
  %2712 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 10, i64 0), align 8
  %2713 = fcmp oge float %2711, %2712
  %2714 = fcmp ueq float %2711, 0.000000e+00
  %2715 = or i1 %2713, %2714
  %2716 = select i1 %2715, float %2711, float %2712
  %2717 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 11, i64 0), align 4
  %2718 = fcmp oge float %2716, %2717
  %2719 = fcmp ueq float %2716, 0.000000e+00
  %2720 = or i1 %2718, %2719
  %2721 = select i1 %2720, float %2716, float %2717
  %2722 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 9, i64 0), align 4
  %2723 = fcmp oge float %2721, %2722
  %2724 = fcmp ueq float %2721, 0.000000e+00
  %2725 = or i1 %2723, %2724
  %2726 = select i1 %2725, float %2721, float %2722
  %2727 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 10, i64 0), align 8
  %2728 = fcmp oge float %2726, %2727
  %2729 = fcmp ueq float %2726, 0.000000e+00
  %2730 = or i1 %2728, %2729
  %2731 = select i1 %2730, float %2726, float %2727
  %2732 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 11, i64 0), align 4
  %2733 = fcmp oge float %2731, %2732
  %2734 = fcmp ueq float %2731, 0.000000e+00
  %2735 = or i1 %2733, %2734
  %2736 = select i1 %2735, float %2731, float %2732
  %2737 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 9, i64 0), align 4
  %2738 = fcmp oge float %2736, %2737
  %2739 = fcmp ueq float %2736, 0.000000e+00
  %2740 = or i1 %2738, %2739
  %2741 = select i1 %2740, float %2736, float %2737
  %2742 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 10, i64 0), align 8
  %2743 = fcmp oge float %2741, %2742
  %2744 = fcmp ueq float %2741, 0.000000e+00
  %2745 = or i1 %2743, %2744
  %2746 = select i1 %2745, float %2741, float %2742
  %2747 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 11, i64 0), align 4
  %2748 = fcmp oge float %2746, %2747
  %2749 = fcmp ueq float %2746, 0.000000e+00
  %2750 = or i1 %2748, %2749
  %2751 = select i1 %2750, float %2746, float %2747
  store volatile float %2751, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 6, i64 3, i64 0), align 4
  %2752 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 12, i64 0), align 8
  %2753 = fcmp ole float %2752, 0xFFF0000000000000
  %2754 = select i1 %2753, float 0xFFF0000000000000, float %2752
  %2755 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 13, i64 0), align 4
  %2756 = fcmp oge float %2754, %2755
  %2757 = fcmp ueq float %2754, 0.000000e+00
  %2758 = or i1 %2756, %2757
  %2759 = select i1 %2758, float %2754, float %2755
  %2760 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 14, i64 0), align 8
  %2761 = fcmp oge float %2759, %2760
  %2762 = fcmp ueq float %2759, 0.000000e+00
  %2763 = or i1 %2761, %2762
  %2764 = select i1 %2763, float %2759, float %2760
  %2765 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 12, i64 0), align 8
  %2766 = fcmp oge float %2764, %2765
  %2767 = fcmp ueq float %2764, 0.000000e+00
  %2768 = or i1 %2766, %2767
  %2769 = select i1 %2768, float %2764, float %2765
  %2770 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 13, i64 0), align 4
  %2771 = fcmp oge float %2769, %2770
  %2772 = fcmp ueq float %2769, 0.000000e+00
  %2773 = or i1 %2771, %2772
  %2774 = select i1 %2773, float %2769, float %2770
  %2775 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 14, i64 0), align 8
  %2776 = fcmp oge float %2774, %2775
  %2777 = fcmp ueq float %2774, 0.000000e+00
  %2778 = or i1 %2776, %2777
  %2779 = select i1 %2778, float %2774, float %2775
  %2780 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 12, i64 0), align 8
  %2781 = fcmp oge float %2779, %2780
  %2782 = fcmp ueq float %2779, 0.000000e+00
  %2783 = or i1 %2781, %2782
  %2784 = select i1 %2783, float %2779, float %2780
  %2785 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 13, i64 0), align 4
  %2786 = fcmp oge float %2784, %2785
  %2787 = fcmp ueq float %2784, 0.000000e+00
  %2788 = or i1 %2786, %2787
  %2789 = select i1 %2788, float %2784, float %2785
  %2790 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 14, i64 0), align 8
  %2791 = fcmp oge float %2789, %2790
  %2792 = fcmp ueq float %2789, 0.000000e+00
  %2793 = or i1 %2791, %2792
  %2794 = select i1 %2793, float %2789, float %2790
  store volatile float %2794, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 6, i64 4, i64 0), align 8
  %2795 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 15, i64 0), align 4
  %2796 = fcmp ole float %2795, 0xFFF0000000000000
  %2797 = select i1 %2796, float 0xFFF0000000000000, float %2795
  %2798 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 16, i64 0), align 8
  %2799 = fcmp oge float %2797, %2798
  %2800 = fcmp ueq float %2797, 0.000000e+00
  %2801 = or i1 %2799, %2800
  %2802 = select i1 %2801, float %2797, float %2798
  %2803 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 17, i64 0), align 4
  %2804 = fcmp oge float %2802, %2803
  %2805 = fcmp ueq float %2802, 0.000000e+00
  %2806 = or i1 %2804, %2805
  %2807 = select i1 %2806, float %2802, float %2803
  %2808 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 15, i64 0), align 4
  %2809 = fcmp oge float %2807, %2808
  %2810 = fcmp ueq float %2807, 0.000000e+00
  %2811 = or i1 %2809, %2810
  %2812 = select i1 %2811, float %2807, float %2808
  %2813 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 16, i64 0), align 8
  %2814 = fcmp oge float %2812, %2813
  %2815 = fcmp ueq float %2812, 0.000000e+00
  %2816 = or i1 %2814, %2815
  %2817 = select i1 %2816, float %2812, float %2813
  %2818 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 17, i64 0), align 4
  %2819 = fcmp oge float %2817, %2818
  %2820 = fcmp ueq float %2817, 0.000000e+00
  %2821 = or i1 %2819, %2820
  %2822 = select i1 %2821, float %2817, float %2818
  %2823 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 15, i64 0), align 4
  %2824 = fcmp oge float %2822, %2823
  %2825 = fcmp ueq float %2822, 0.000000e+00
  %2826 = or i1 %2824, %2825
  %2827 = select i1 %2826, float %2822, float %2823
  %2828 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 16, i64 0), align 8
  %2829 = fcmp oge float %2827, %2828
  %2830 = fcmp ueq float %2827, 0.000000e+00
  %2831 = or i1 %2829, %2830
  %2832 = select i1 %2831, float %2827, float %2828
  %2833 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 17, i64 0), align 4
  %2834 = fcmp oge float %2832, %2833
  %2835 = fcmp ueq float %2832, 0.000000e+00
  %2836 = or i1 %2834, %2835
  %2837 = select i1 %2836, float %2832, float %2833
  store volatile float %2837, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 6, i64 5, i64 0), align 4
  %2838 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 18, i64 0), align 8
  %2839 = fcmp ole float %2838, 0xFFF0000000000000
  %2840 = select i1 %2839, float 0xFFF0000000000000, float %2838
  %2841 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 19, i64 0), align 4
  %2842 = fcmp oge float %2840, %2841
  %2843 = fcmp ueq float %2840, 0.000000e+00
  %2844 = or i1 %2842, %2843
  %2845 = select i1 %2844, float %2840, float %2841
  %2846 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 20, i64 0), align 8
  %2847 = fcmp oge float %2845, %2846
  %2848 = fcmp ueq float %2845, 0.000000e+00
  %2849 = or i1 %2847, %2848
  %2850 = select i1 %2849, float %2845, float %2846
  %2851 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 18, i64 0), align 8
  %2852 = fcmp oge float %2850, %2851
  %2853 = fcmp ueq float %2850, 0.000000e+00
  %2854 = or i1 %2852, %2853
  %2855 = select i1 %2854, float %2850, float %2851
  %2856 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 19, i64 0), align 4
  %2857 = fcmp oge float %2855, %2856
  %2858 = fcmp ueq float %2855, 0.000000e+00
  %2859 = or i1 %2857, %2858
  %2860 = select i1 %2859, float %2855, float %2856
  %2861 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 20, i64 0), align 8
  %2862 = fcmp oge float %2860, %2861
  %2863 = fcmp ueq float %2860, 0.000000e+00
  %2864 = or i1 %2862, %2863
  %2865 = select i1 %2864, float %2860, float %2861
  %2866 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 18, i64 0), align 8
  %2867 = fcmp oge float %2865, %2866
  %2868 = fcmp ueq float %2865, 0.000000e+00
  %2869 = or i1 %2867, %2868
  %2870 = select i1 %2869, float %2865, float %2866
  %2871 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 19, i64 0), align 4
  %2872 = fcmp oge float %2870, %2871
  %2873 = fcmp ueq float %2870, 0.000000e+00
  %2874 = or i1 %2872, %2873
  %2875 = select i1 %2874, float %2870, float %2871
  %2876 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 20, i64 0), align 8
  %2877 = fcmp oge float %2875, %2876
  %2878 = fcmp ueq float %2875, 0.000000e+00
  %2879 = or i1 %2877, %2878
  %2880 = select i1 %2879, float %2875, float %2876
  store volatile float %2880, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 6, i64 6, i64 0), align 8
  %2881 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 21, i64 0), align 4
  %2882 = fcmp ole float %2881, 0xFFF0000000000000
  %2883 = select i1 %2882, float 0xFFF0000000000000, float %2881
  %2884 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 22, i64 0), align 8
  %2885 = fcmp oge float %2883, %2884
  %2886 = fcmp ueq float %2883, 0.000000e+00
  %2887 = or i1 %2885, %2886
  %2888 = select i1 %2887, float %2883, float %2884
  %2889 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 23, i64 0), align 4
  %2890 = fcmp oge float %2888, %2889
  %2891 = fcmp ueq float %2888, 0.000000e+00
  %2892 = or i1 %2890, %2891
  %2893 = select i1 %2892, float %2888, float %2889
  %2894 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 21, i64 0), align 4
  %2895 = fcmp oge float %2893, %2894
  %2896 = fcmp ueq float %2893, 0.000000e+00
  %2897 = or i1 %2895, %2896
  %2898 = select i1 %2897, float %2893, float %2894
  %2899 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 22, i64 0), align 8
  %2900 = fcmp oge float %2898, %2899
  %2901 = fcmp ueq float %2898, 0.000000e+00
  %2902 = or i1 %2900, %2901
  %2903 = select i1 %2902, float %2898, float %2899
  %2904 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 23, i64 0), align 4
  %2905 = fcmp oge float %2903, %2904
  %2906 = fcmp ueq float %2903, 0.000000e+00
  %2907 = or i1 %2905, %2906
  %2908 = select i1 %2907, float %2903, float %2904
  %2909 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 21, i64 0), align 4
  %2910 = fcmp oge float %2908, %2909
  %2911 = fcmp ueq float %2908, 0.000000e+00
  %2912 = or i1 %2910, %2911
  %2913 = select i1 %2912, float %2908, float %2909
  %2914 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 22, i64 0), align 8
  %2915 = fcmp oge float %2913, %2914
  %2916 = fcmp ueq float %2913, 0.000000e+00
  %2917 = or i1 %2915, %2916
  %2918 = select i1 %2917, float %2913, float %2914
  %2919 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 23, i64 0), align 4
  %2920 = fcmp oge float %2918, %2919
  %2921 = fcmp ueq float %2918, 0.000000e+00
  %2922 = or i1 %2920, %2921
  %2923 = select i1 %2922, float %2918, float %2919
  store volatile float %2923, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 6, i64 7, i64 0), align 4
  %2924 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 24, i64 0), align 8
  %2925 = fcmp ole float %2924, 0xFFF0000000000000
  %2926 = select i1 %2925, float 0xFFF0000000000000, float %2924
  %2927 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 25, i64 0), align 4
  %2928 = fcmp oge float %2926, %2927
  %2929 = fcmp ueq float %2926, 0.000000e+00
  %2930 = or i1 %2928, %2929
  %2931 = select i1 %2930, float %2926, float %2927
  %2932 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 26, i64 0), align 8
  %2933 = fcmp oge float %2931, %2932
  %2934 = fcmp ueq float %2931, 0.000000e+00
  %2935 = or i1 %2933, %2934
  %2936 = select i1 %2935, float %2931, float %2932
  %2937 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 24, i64 0), align 8
  %2938 = fcmp oge float %2936, %2937
  %2939 = fcmp ueq float %2936, 0.000000e+00
  %2940 = or i1 %2938, %2939
  %2941 = select i1 %2940, float %2936, float %2937
  %2942 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 25, i64 0), align 4
  %2943 = fcmp oge float %2941, %2942
  %2944 = fcmp ueq float %2941, 0.000000e+00
  %2945 = or i1 %2943, %2944
  %2946 = select i1 %2945, float %2941, float %2942
  %2947 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 26, i64 0), align 8
  %2948 = fcmp oge float %2946, %2947
  %2949 = fcmp ueq float %2946, 0.000000e+00
  %2950 = or i1 %2948, %2949
  %2951 = select i1 %2950, float %2946, float %2947
  %2952 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 24, i64 0), align 8
  %2953 = fcmp oge float %2951, %2952
  %2954 = fcmp ueq float %2951, 0.000000e+00
  %2955 = or i1 %2953, %2954
  %2956 = select i1 %2955, float %2951, float %2952
  %2957 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 25, i64 0), align 4
  %2958 = fcmp oge float %2956, %2957
  %2959 = fcmp ueq float %2956, 0.000000e+00
  %2960 = or i1 %2958, %2959
  %2961 = select i1 %2960, float %2956, float %2957
  %2962 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 26, i64 0), align 8
  %2963 = fcmp oge float %2961, %2962
  %2964 = fcmp ueq float %2961, 0.000000e+00
  %2965 = or i1 %2963, %2964
  %2966 = select i1 %2965, float %2961, float %2962
  store volatile float %2966, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 6, i64 8, i64 0), align 8
  %2967 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 27, i64 0), align 4
  %2968 = fcmp ole float %2967, 0xFFF0000000000000
  %2969 = select i1 %2968, float 0xFFF0000000000000, float %2967
  %2970 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 28, i64 0), align 8
  %2971 = fcmp oge float %2969, %2970
  %2972 = fcmp ueq float %2969, 0.000000e+00
  %2973 = or i1 %2971, %2972
  %2974 = select i1 %2973, float %2969, float %2970
  %2975 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 18, i64 29, i64 0), align 4
  %2976 = fcmp oge float %2974, %2975
  %2977 = fcmp ueq float %2974, 0.000000e+00
  %2978 = or i1 %2976, %2977
  %2979 = select i1 %2978, float %2974, float %2975
  %2980 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 27, i64 0), align 4
  %2981 = fcmp oge float %2979, %2980
  %2982 = fcmp ueq float %2979, 0.000000e+00
  %2983 = or i1 %2981, %2982
  %2984 = select i1 %2983, float %2979, float %2980
  %2985 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 28, i64 0), align 8
  %2986 = fcmp oge float %2984, %2985
  %2987 = fcmp ueq float %2984, 0.000000e+00
  %2988 = or i1 %2986, %2987
  %2989 = select i1 %2988, float %2984, float %2985
  %2990 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 19, i64 29, i64 0), align 4
  %2991 = fcmp oge float %2989, %2990
  %2992 = fcmp ueq float %2989, 0.000000e+00
  %2993 = or i1 %2991, %2992
  %2994 = select i1 %2993, float %2989, float %2990
  %2995 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 27, i64 0), align 4
  %2996 = fcmp oge float %2994, %2995
  %2997 = fcmp ueq float %2994, 0.000000e+00
  %2998 = or i1 %2996, %2997
  %2999 = select i1 %2998, float %2994, float %2995
  %3000 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 28, i64 0), align 8
  %3001 = fcmp oge float %2999, %3000
  %3002 = fcmp ueq float %2999, 0.000000e+00
  %3003 = or i1 %3001, %3002
  %3004 = select i1 %3003, float %2999, float %3000
  %3005 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 20, i64 29, i64 0), align 4
  %3006 = fcmp oge float %3004, %3005
  %3007 = fcmp ueq float %3004, 0.000000e+00
  %3008 = or i1 %3006, %3007
  %3009 = select i1 %3008, float %3004, float %3005
  store volatile float %3009, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 6, i64 9, i64 0), align 4
  %3010 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 0, i64 0), align 8
  %3011 = fcmp ole float %3010, 0xFFF0000000000000
  %3012 = select i1 %3011, float 0xFFF0000000000000, float %3010
  %3013 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 1, i64 0), align 4
  %3014 = fcmp oge float %3012, %3013
  %3015 = fcmp ueq float %3012, 0.000000e+00
  %3016 = or i1 %3014, %3015
  %3017 = select i1 %3016, float %3012, float %3013
  %3018 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 2, i64 0), align 8
  %3019 = fcmp oge float %3017, %3018
  %3020 = fcmp ueq float %3017, 0.000000e+00
  %3021 = or i1 %3019, %3020
  %3022 = select i1 %3021, float %3017, float %3018
  %3023 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 0, i64 0), align 8
  %3024 = fcmp oge float %3022, %3023
  %3025 = fcmp ueq float %3022, 0.000000e+00
  %3026 = or i1 %3024, %3025
  %3027 = select i1 %3026, float %3022, float %3023
  %3028 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 1, i64 0), align 4
  %3029 = fcmp oge float %3027, %3028
  %3030 = fcmp ueq float %3027, 0.000000e+00
  %3031 = or i1 %3029, %3030
  %3032 = select i1 %3031, float %3027, float %3028
  %3033 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 2, i64 0), align 8
  %3034 = fcmp oge float %3032, %3033
  %3035 = fcmp ueq float %3032, 0.000000e+00
  %3036 = or i1 %3034, %3035
  %3037 = select i1 %3036, float %3032, float %3033
  %3038 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 0, i64 0), align 8
  %3039 = fcmp oge float %3037, %3038
  %3040 = fcmp ueq float %3037, 0.000000e+00
  %3041 = or i1 %3039, %3040
  %3042 = select i1 %3041, float %3037, float %3038
  %3043 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 1, i64 0), align 4
  %3044 = fcmp oge float %3042, %3043
  %3045 = fcmp ueq float %3042, 0.000000e+00
  %3046 = or i1 %3044, %3045
  %3047 = select i1 %3046, float %3042, float %3043
  %3048 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 2, i64 0), align 8
  %3049 = fcmp oge float %3047, %3048
  %3050 = fcmp ueq float %3047, 0.000000e+00
  %3051 = or i1 %3049, %3050
  %3052 = select i1 %3051, float %3047, float %3048
  store volatile float %3052, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 7, i64 0, i64 0), align 8
  %3053 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 3, i64 0), align 4
  %3054 = fcmp ole float %3053, 0xFFF0000000000000
  %3055 = select i1 %3054, float 0xFFF0000000000000, float %3053
  %3056 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 4, i64 0), align 8
  %3057 = fcmp oge float %3055, %3056
  %3058 = fcmp ueq float %3055, 0.000000e+00
  %3059 = or i1 %3057, %3058
  %3060 = select i1 %3059, float %3055, float %3056
  %3061 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 5, i64 0), align 4
  %3062 = fcmp oge float %3060, %3061
  %3063 = fcmp ueq float %3060, 0.000000e+00
  %3064 = or i1 %3062, %3063
  %3065 = select i1 %3064, float %3060, float %3061
  %3066 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 3, i64 0), align 4
  %3067 = fcmp oge float %3065, %3066
  %3068 = fcmp ueq float %3065, 0.000000e+00
  %3069 = or i1 %3067, %3068
  %3070 = select i1 %3069, float %3065, float %3066
  %3071 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 4, i64 0), align 8
  %3072 = fcmp oge float %3070, %3071
  %3073 = fcmp ueq float %3070, 0.000000e+00
  %3074 = or i1 %3072, %3073
  %3075 = select i1 %3074, float %3070, float %3071
  %3076 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 5, i64 0), align 4
  %3077 = fcmp oge float %3075, %3076
  %3078 = fcmp ueq float %3075, 0.000000e+00
  %3079 = or i1 %3077, %3078
  %3080 = select i1 %3079, float %3075, float %3076
  %3081 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 3, i64 0), align 4
  %3082 = fcmp oge float %3080, %3081
  %3083 = fcmp ueq float %3080, 0.000000e+00
  %3084 = or i1 %3082, %3083
  %3085 = select i1 %3084, float %3080, float %3081
  %3086 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 4, i64 0), align 8
  %3087 = fcmp oge float %3085, %3086
  %3088 = fcmp ueq float %3085, 0.000000e+00
  %3089 = or i1 %3087, %3088
  %3090 = select i1 %3089, float %3085, float %3086
  %3091 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 5, i64 0), align 4
  %3092 = fcmp oge float %3090, %3091
  %3093 = fcmp ueq float %3090, 0.000000e+00
  %3094 = or i1 %3092, %3093
  %3095 = select i1 %3094, float %3090, float %3091
  store volatile float %3095, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 7, i64 1, i64 0), align 4
  %3096 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 6, i64 0), align 8
  %3097 = fcmp ole float %3096, 0xFFF0000000000000
  %3098 = select i1 %3097, float 0xFFF0000000000000, float %3096
  %3099 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 7, i64 0), align 4
  %3100 = fcmp oge float %3098, %3099
  %3101 = fcmp ueq float %3098, 0.000000e+00
  %3102 = or i1 %3100, %3101
  %3103 = select i1 %3102, float %3098, float %3099
  %3104 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 8, i64 0), align 8
  %3105 = fcmp oge float %3103, %3104
  %3106 = fcmp ueq float %3103, 0.000000e+00
  %3107 = or i1 %3105, %3106
  %3108 = select i1 %3107, float %3103, float %3104
  %3109 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 6, i64 0), align 8
  %3110 = fcmp oge float %3108, %3109
  %3111 = fcmp ueq float %3108, 0.000000e+00
  %3112 = or i1 %3110, %3111
  %3113 = select i1 %3112, float %3108, float %3109
  %3114 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 7, i64 0), align 4
  %3115 = fcmp oge float %3113, %3114
  %3116 = fcmp ueq float %3113, 0.000000e+00
  %3117 = or i1 %3115, %3116
  %3118 = select i1 %3117, float %3113, float %3114
  %3119 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 8, i64 0), align 8
  %3120 = fcmp oge float %3118, %3119
  %3121 = fcmp ueq float %3118, 0.000000e+00
  %3122 = or i1 %3120, %3121
  %3123 = select i1 %3122, float %3118, float %3119
  %3124 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 6, i64 0), align 8
  %3125 = fcmp oge float %3123, %3124
  %3126 = fcmp ueq float %3123, 0.000000e+00
  %3127 = or i1 %3125, %3126
  %3128 = select i1 %3127, float %3123, float %3124
  %3129 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 7, i64 0), align 4
  %3130 = fcmp oge float %3128, %3129
  %3131 = fcmp ueq float %3128, 0.000000e+00
  %3132 = or i1 %3130, %3131
  %3133 = select i1 %3132, float %3128, float %3129
  %3134 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 8, i64 0), align 8
  %3135 = fcmp oge float %3133, %3134
  %3136 = fcmp ueq float %3133, 0.000000e+00
  %3137 = or i1 %3135, %3136
  %3138 = select i1 %3137, float %3133, float %3134
  store volatile float %3138, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 7, i64 2, i64 0), align 8
  %3139 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 9, i64 0), align 4
  %3140 = fcmp ole float %3139, 0xFFF0000000000000
  %3141 = select i1 %3140, float 0xFFF0000000000000, float %3139
  %3142 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 10, i64 0), align 8
  %3143 = fcmp oge float %3141, %3142
  %3144 = fcmp ueq float %3141, 0.000000e+00
  %3145 = or i1 %3143, %3144
  %3146 = select i1 %3145, float %3141, float %3142
  %3147 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 11, i64 0), align 4
  %3148 = fcmp oge float %3146, %3147
  %3149 = fcmp ueq float %3146, 0.000000e+00
  %3150 = or i1 %3148, %3149
  %3151 = select i1 %3150, float %3146, float %3147
  %3152 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 9, i64 0), align 4
  %3153 = fcmp oge float %3151, %3152
  %3154 = fcmp ueq float %3151, 0.000000e+00
  %3155 = or i1 %3153, %3154
  %3156 = select i1 %3155, float %3151, float %3152
  %3157 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 10, i64 0), align 8
  %3158 = fcmp oge float %3156, %3157
  %3159 = fcmp ueq float %3156, 0.000000e+00
  %3160 = or i1 %3158, %3159
  %3161 = select i1 %3160, float %3156, float %3157
  %3162 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 11, i64 0), align 4
  %3163 = fcmp oge float %3161, %3162
  %3164 = fcmp ueq float %3161, 0.000000e+00
  %3165 = or i1 %3163, %3164
  %3166 = select i1 %3165, float %3161, float %3162
  %3167 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 9, i64 0), align 4
  %3168 = fcmp oge float %3166, %3167
  %3169 = fcmp ueq float %3166, 0.000000e+00
  %3170 = or i1 %3168, %3169
  %3171 = select i1 %3170, float %3166, float %3167
  %3172 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 10, i64 0), align 8
  %3173 = fcmp oge float %3171, %3172
  %3174 = fcmp ueq float %3171, 0.000000e+00
  %3175 = or i1 %3173, %3174
  %3176 = select i1 %3175, float %3171, float %3172
  %3177 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 11, i64 0), align 4
  %3178 = fcmp oge float %3176, %3177
  %3179 = fcmp ueq float %3176, 0.000000e+00
  %3180 = or i1 %3178, %3179
  %3181 = select i1 %3180, float %3176, float %3177
  store volatile float %3181, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 7, i64 3, i64 0), align 4
  %3182 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 12, i64 0), align 8
  %3183 = fcmp ole float %3182, 0xFFF0000000000000
  %3184 = select i1 %3183, float 0xFFF0000000000000, float %3182
  %3185 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 13, i64 0), align 4
  %3186 = fcmp oge float %3184, %3185
  %3187 = fcmp ueq float %3184, 0.000000e+00
  %3188 = or i1 %3186, %3187
  %3189 = select i1 %3188, float %3184, float %3185
  %3190 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 14, i64 0), align 8
  %3191 = fcmp oge float %3189, %3190
  %3192 = fcmp ueq float %3189, 0.000000e+00
  %3193 = or i1 %3191, %3192
  %3194 = select i1 %3193, float %3189, float %3190
  %3195 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 12, i64 0), align 8
  %3196 = fcmp oge float %3194, %3195
  %3197 = fcmp ueq float %3194, 0.000000e+00
  %3198 = or i1 %3196, %3197
  %3199 = select i1 %3198, float %3194, float %3195
  %3200 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 13, i64 0), align 4
  %3201 = fcmp oge float %3199, %3200
  %3202 = fcmp ueq float %3199, 0.000000e+00
  %3203 = or i1 %3201, %3202
  %3204 = select i1 %3203, float %3199, float %3200
  %3205 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 14, i64 0), align 8
  %3206 = fcmp oge float %3204, %3205
  %3207 = fcmp ueq float %3204, 0.000000e+00
  %3208 = or i1 %3206, %3207
  %3209 = select i1 %3208, float %3204, float %3205
  %3210 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 12, i64 0), align 8
  %3211 = fcmp oge float %3209, %3210
  %3212 = fcmp ueq float %3209, 0.000000e+00
  %3213 = or i1 %3211, %3212
  %3214 = select i1 %3213, float %3209, float %3210
  %3215 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 13, i64 0), align 4
  %3216 = fcmp oge float %3214, %3215
  %3217 = fcmp ueq float %3214, 0.000000e+00
  %3218 = or i1 %3216, %3217
  %3219 = select i1 %3218, float %3214, float %3215
  %3220 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 14, i64 0), align 8
  %3221 = fcmp oge float %3219, %3220
  %3222 = fcmp ueq float %3219, 0.000000e+00
  %3223 = or i1 %3221, %3222
  %3224 = select i1 %3223, float %3219, float %3220
  store volatile float %3224, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 7, i64 4, i64 0), align 8
  %3225 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 15, i64 0), align 4
  %3226 = fcmp ole float %3225, 0xFFF0000000000000
  %3227 = select i1 %3226, float 0xFFF0000000000000, float %3225
  %3228 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 16, i64 0), align 8
  %3229 = fcmp oge float %3227, %3228
  %3230 = fcmp ueq float %3227, 0.000000e+00
  %3231 = or i1 %3229, %3230
  %3232 = select i1 %3231, float %3227, float %3228
  %3233 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 17, i64 0), align 4
  %3234 = fcmp oge float %3232, %3233
  %3235 = fcmp ueq float %3232, 0.000000e+00
  %3236 = or i1 %3234, %3235
  %3237 = select i1 %3236, float %3232, float %3233
  %3238 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 15, i64 0), align 4
  %3239 = fcmp oge float %3237, %3238
  %3240 = fcmp ueq float %3237, 0.000000e+00
  %3241 = or i1 %3239, %3240
  %3242 = select i1 %3241, float %3237, float %3238
  %3243 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 16, i64 0), align 8
  %3244 = fcmp oge float %3242, %3243
  %3245 = fcmp ueq float %3242, 0.000000e+00
  %3246 = or i1 %3244, %3245
  %3247 = select i1 %3246, float %3242, float %3243
  %3248 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 17, i64 0), align 4
  %3249 = fcmp oge float %3247, %3248
  %3250 = fcmp ueq float %3247, 0.000000e+00
  %3251 = or i1 %3249, %3250
  %3252 = select i1 %3251, float %3247, float %3248
  %3253 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 15, i64 0), align 4
  %3254 = fcmp oge float %3252, %3253
  %3255 = fcmp ueq float %3252, 0.000000e+00
  %3256 = or i1 %3254, %3255
  %3257 = select i1 %3256, float %3252, float %3253
  %3258 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 16, i64 0), align 8
  %3259 = fcmp oge float %3257, %3258
  %3260 = fcmp ueq float %3257, 0.000000e+00
  %3261 = or i1 %3259, %3260
  %3262 = select i1 %3261, float %3257, float %3258
  %3263 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 17, i64 0), align 4
  %3264 = fcmp oge float %3262, %3263
  %3265 = fcmp ueq float %3262, 0.000000e+00
  %3266 = or i1 %3264, %3265
  %3267 = select i1 %3266, float %3262, float %3263
  store volatile float %3267, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 7, i64 5, i64 0), align 4
  %3268 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 18, i64 0), align 8
  %3269 = fcmp ole float %3268, 0xFFF0000000000000
  %3270 = select i1 %3269, float 0xFFF0000000000000, float %3268
  %3271 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 19, i64 0), align 4
  %3272 = fcmp oge float %3270, %3271
  %3273 = fcmp ueq float %3270, 0.000000e+00
  %3274 = or i1 %3272, %3273
  %3275 = select i1 %3274, float %3270, float %3271
  %3276 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 20, i64 0), align 8
  %3277 = fcmp oge float %3275, %3276
  %3278 = fcmp ueq float %3275, 0.000000e+00
  %3279 = or i1 %3277, %3278
  %3280 = select i1 %3279, float %3275, float %3276
  %3281 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 18, i64 0), align 8
  %3282 = fcmp oge float %3280, %3281
  %3283 = fcmp ueq float %3280, 0.000000e+00
  %3284 = or i1 %3282, %3283
  %3285 = select i1 %3284, float %3280, float %3281
  %3286 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 19, i64 0), align 4
  %3287 = fcmp oge float %3285, %3286
  %3288 = fcmp ueq float %3285, 0.000000e+00
  %3289 = or i1 %3287, %3288
  %3290 = select i1 %3289, float %3285, float %3286
  %3291 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 20, i64 0), align 8
  %3292 = fcmp oge float %3290, %3291
  %3293 = fcmp ueq float %3290, 0.000000e+00
  %3294 = or i1 %3292, %3293
  %3295 = select i1 %3294, float %3290, float %3291
  %3296 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 18, i64 0), align 8
  %3297 = fcmp oge float %3295, %3296
  %3298 = fcmp ueq float %3295, 0.000000e+00
  %3299 = or i1 %3297, %3298
  %3300 = select i1 %3299, float %3295, float %3296
  %3301 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 19, i64 0), align 4
  %3302 = fcmp oge float %3300, %3301
  %3303 = fcmp ueq float %3300, 0.000000e+00
  %3304 = or i1 %3302, %3303
  %3305 = select i1 %3304, float %3300, float %3301
  %3306 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 20, i64 0), align 8
  %3307 = fcmp oge float %3305, %3306
  %3308 = fcmp ueq float %3305, 0.000000e+00
  %3309 = or i1 %3307, %3308
  %3310 = select i1 %3309, float %3305, float %3306
  store volatile float %3310, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 7, i64 6, i64 0), align 8
  %3311 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 21, i64 0), align 4
  %3312 = fcmp ole float %3311, 0xFFF0000000000000
  %3313 = select i1 %3312, float 0xFFF0000000000000, float %3311
  %3314 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 22, i64 0), align 8
  %3315 = fcmp oge float %3313, %3314
  %3316 = fcmp ueq float %3313, 0.000000e+00
  %3317 = or i1 %3315, %3316
  %3318 = select i1 %3317, float %3313, float %3314
  %3319 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 23, i64 0), align 4
  %3320 = fcmp oge float %3318, %3319
  %3321 = fcmp ueq float %3318, 0.000000e+00
  %3322 = or i1 %3320, %3321
  %3323 = select i1 %3322, float %3318, float %3319
  %3324 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 21, i64 0), align 4
  %3325 = fcmp oge float %3323, %3324
  %3326 = fcmp ueq float %3323, 0.000000e+00
  %3327 = or i1 %3325, %3326
  %3328 = select i1 %3327, float %3323, float %3324
  %3329 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 22, i64 0), align 8
  %3330 = fcmp oge float %3328, %3329
  %3331 = fcmp ueq float %3328, 0.000000e+00
  %3332 = or i1 %3330, %3331
  %3333 = select i1 %3332, float %3328, float %3329
  %3334 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 23, i64 0), align 4
  %3335 = fcmp oge float %3333, %3334
  %3336 = fcmp ueq float %3333, 0.000000e+00
  %3337 = or i1 %3335, %3336
  %3338 = select i1 %3337, float %3333, float %3334
  %3339 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 21, i64 0), align 4
  %3340 = fcmp oge float %3338, %3339
  %3341 = fcmp ueq float %3338, 0.000000e+00
  %3342 = or i1 %3340, %3341
  %3343 = select i1 %3342, float %3338, float %3339
  %3344 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 22, i64 0), align 8
  %3345 = fcmp oge float %3343, %3344
  %3346 = fcmp ueq float %3343, 0.000000e+00
  %3347 = or i1 %3345, %3346
  %3348 = select i1 %3347, float %3343, float %3344
  %3349 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 23, i64 0), align 4
  %3350 = fcmp oge float %3348, %3349
  %3351 = fcmp ueq float %3348, 0.000000e+00
  %3352 = or i1 %3350, %3351
  %3353 = select i1 %3352, float %3348, float %3349
  store volatile float %3353, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 7, i64 7, i64 0), align 4
  %3354 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 24, i64 0), align 8
  %3355 = fcmp ole float %3354, 0xFFF0000000000000
  %3356 = select i1 %3355, float 0xFFF0000000000000, float %3354
  %3357 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 25, i64 0), align 4
  %3358 = fcmp oge float %3356, %3357
  %3359 = fcmp ueq float %3356, 0.000000e+00
  %3360 = or i1 %3358, %3359
  %3361 = select i1 %3360, float %3356, float %3357
  %3362 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 26, i64 0), align 8
  %3363 = fcmp oge float %3361, %3362
  %3364 = fcmp ueq float %3361, 0.000000e+00
  %3365 = or i1 %3363, %3364
  %3366 = select i1 %3365, float %3361, float %3362
  %3367 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 24, i64 0), align 8
  %3368 = fcmp oge float %3366, %3367
  %3369 = fcmp ueq float %3366, 0.000000e+00
  %3370 = or i1 %3368, %3369
  %3371 = select i1 %3370, float %3366, float %3367
  %3372 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 25, i64 0), align 4
  %3373 = fcmp oge float %3371, %3372
  %3374 = fcmp ueq float %3371, 0.000000e+00
  %3375 = or i1 %3373, %3374
  %3376 = select i1 %3375, float %3371, float %3372
  %3377 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 26, i64 0), align 8
  %3378 = fcmp oge float %3376, %3377
  %3379 = fcmp ueq float %3376, 0.000000e+00
  %3380 = or i1 %3378, %3379
  %3381 = select i1 %3380, float %3376, float %3377
  %3382 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 24, i64 0), align 8
  %3383 = fcmp oge float %3381, %3382
  %3384 = fcmp ueq float %3381, 0.000000e+00
  %3385 = or i1 %3383, %3384
  %3386 = select i1 %3385, float %3381, float %3382
  %3387 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 25, i64 0), align 4
  %3388 = fcmp oge float %3386, %3387
  %3389 = fcmp ueq float %3386, 0.000000e+00
  %3390 = or i1 %3388, %3389
  %3391 = select i1 %3390, float %3386, float %3387
  %3392 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 26, i64 0), align 8
  %3393 = fcmp oge float %3391, %3392
  %3394 = fcmp ueq float %3391, 0.000000e+00
  %3395 = or i1 %3393, %3394
  %3396 = select i1 %3395, float %3391, float %3392
  store volatile float %3396, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 7, i64 8, i64 0), align 8
  %3397 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 27, i64 0), align 4
  %3398 = fcmp ole float %3397, 0xFFF0000000000000
  %3399 = select i1 %3398, float 0xFFF0000000000000, float %3397
  %3400 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 28, i64 0), align 8
  %3401 = fcmp oge float %3399, %3400
  %3402 = fcmp ueq float %3399, 0.000000e+00
  %3403 = or i1 %3401, %3402
  %3404 = select i1 %3403, float %3399, float %3400
  %3405 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 21, i64 29, i64 0), align 4
  %3406 = fcmp oge float %3404, %3405
  %3407 = fcmp ueq float %3404, 0.000000e+00
  %3408 = or i1 %3406, %3407
  %3409 = select i1 %3408, float %3404, float %3405
  %3410 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 27, i64 0), align 4
  %3411 = fcmp oge float %3409, %3410
  %3412 = fcmp ueq float %3409, 0.000000e+00
  %3413 = or i1 %3411, %3412
  %3414 = select i1 %3413, float %3409, float %3410
  %3415 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 28, i64 0), align 8
  %3416 = fcmp oge float %3414, %3415
  %3417 = fcmp ueq float %3414, 0.000000e+00
  %3418 = or i1 %3416, %3417
  %3419 = select i1 %3418, float %3414, float %3415
  %3420 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 22, i64 29, i64 0), align 4
  %3421 = fcmp oge float %3419, %3420
  %3422 = fcmp ueq float %3419, 0.000000e+00
  %3423 = or i1 %3421, %3422
  %3424 = select i1 %3423, float %3419, float %3420
  %3425 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 27, i64 0), align 4
  %3426 = fcmp oge float %3424, %3425
  %3427 = fcmp ueq float %3424, 0.000000e+00
  %3428 = or i1 %3426, %3427
  %3429 = select i1 %3428, float %3424, float %3425
  %3430 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 28, i64 0), align 8
  %3431 = fcmp oge float %3429, %3430
  %3432 = fcmp ueq float %3429, 0.000000e+00
  %3433 = or i1 %3431, %3432
  %3434 = select i1 %3433, float %3429, float %3430
  %3435 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 23, i64 29, i64 0), align 4
  %3436 = fcmp oge float %3434, %3435
  %3437 = fcmp ueq float %3434, 0.000000e+00
  %3438 = or i1 %3436, %3437
  %3439 = select i1 %3438, float %3434, float %3435
  store volatile float %3439, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 7, i64 9, i64 0), align 4
  %3440 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 0, i64 0), align 8
  %3441 = fcmp ole float %3440, 0xFFF0000000000000
  %3442 = select i1 %3441, float 0xFFF0000000000000, float %3440
  %3443 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 1, i64 0), align 4
  %3444 = fcmp oge float %3442, %3443
  %3445 = fcmp ueq float %3442, 0.000000e+00
  %3446 = or i1 %3444, %3445
  %3447 = select i1 %3446, float %3442, float %3443
  %3448 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 2, i64 0), align 8
  %3449 = fcmp oge float %3447, %3448
  %3450 = fcmp ueq float %3447, 0.000000e+00
  %3451 = or i1 %3449, %3450
  %3452 = select i1 %3451, float %3447, float %3448
  %3453 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 0, i64 0), align 8
  %3454 = fcmp oge float %3452, %3453
  %3455 = fcmp ueq float %3452, 0.000000e+00
  %3456 = or i1 %3454, %3455
  %3457 = select i1 %3456, float %3452, float %3453
  %3458 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 1, i64 0), align 4
  %3459 = fcmp oge float %3457, %3458
  %3460 = fcmp ueq float %3457, 0.000000e+00
  %3461 = or i1 %3459, %3460
  %3462 = select i1 %3461, float %3457, float %3458
  %3463 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 2, i64 0), align 8
  %3464 = fcmp oge float %3462, %3463
  %3465 = fcmp ueq float %3462, 0.000000e+00
  %3466 = or i1 %3464, %3465
  %3467 = select i1 %3466, float %3462, float %3463
  %3468 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 0, i64 0), align 8
  %3469 = fcmp oge float %3467, %3468
  %3470 = fcmp ueq float %3467, 0.000000e+00
  %3471 = or i1 %3469, %3470
  %3472 = select i1 %3471, float %3467, float %3468
  %3473 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 1, i64 0), align 4
  %3474 = fcmp oge float %3472, %3473
  %3475 = fcmp ueq float %3472, 0.000000e+00
  %3476 = or i1 %3474, %3475
  %3477 = select i1 %3476, float %3472, float %3473
  %3478 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 2, i64 0), align 8
  %3479 = fcmp oge float %3477, %3478
  %3480 = fcmp ueq float %3477, 0.000000e+00
  %3481 = or i1 %3479, %3480
  %3482 = select i1 %3481, float %3477, float %3478
  store volatile float %3482, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 8, i64 0, i64 0), align 8
  %3483 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 3, i64 0), align 4
  %3484 = fcmp ole float %3483, 0xFFF0000000000000
  %3485 = select i1 %3484, float 0xFFF0000000000000, float %3483
  %3486 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 4, i64 0), align 8
  %3487 = fcmp oge float %3485, %3486
  %3488 = fcmp ueq float %3485, 0.000000e+00
  %3489 = or i1 %3487, %3488
  %3490 = select i1 %3489, float %3485, float %3486
  %3491 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 5, i64 0), align 4
  %3492 = fcmp oge float %3490, %3491
  %3493 = fcmp ueq float %3490, 0.000000e+00
  %3494 = or i1 %3492, %3493
  %3495 = select i1 %3494, float %3490, float %3491
  %3496 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 3, i64 0), align 4
  %3497 = fcmp oge float %3495, %3496
  %3498 = fcmp ueq float %3495, 0.000000e+00
  %3499 = or i1 %3497, %3498
  %3500 = select i1 %3499, float %3495, float %3496
  %3501 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 4, i64 0), align 8
  %3502 = fcmp oge float %3500, %3501
  %3503 = fcmp ueq float %3500, 0.000000e+00
  %3504 = or i1 %3502, %3503
  %3505 = select i1 %3504, float %3500, float %3501
  %3506 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 5, i64 0), align 4
  %3507 = fcmp oge float %3505, %3506
  %3508 = fcmp ueq float %3505, 0.000000e+00
  %3509 = or i1 %3507, %3508
  %3510 = select i1 %3509, float %3505, float %3506
  %3511 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 3, i64 0), align 4
  %3512 = fcmp oge float %3510, %3511
  %3513 = fcmp ueq float %3510, 0.000000e+00
  %3514 = or i1 %3512, %3513
  %3515 = select i1 %3514, float %3510, float %3511
  %3516 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 4, i64 0), align 8
  %3517 = fcmp oge float %3515, %3516
  %3518 = fcmp ueq float %3515, 0.000000e+00
  %3519 = or i1 %3517, %3518
  %3520 = select i1 %3519, float %3515, float %3516
  %3521 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 5, i64 0), align 4
  %3522 = fcmp oge float %3520, %3521
  %3523 = fcmp ueq float %3520, 0.000000e+00
  %3524 = or i1 %3522, %3523
  %3525 = select i1 %3524, float %3520, float %3521
  store volatile float %3525, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 8, i64 1, i64 0), align 4
  %3526 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 6, i64 0), align 8
  %3527 = fcmp ole float %3526, 0xFFF0000000000000
  %3528 = select i1 %3527, float 0xFFF0000000000000, float %3526
  %3529 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 7, i64 0), align 4
  %3530 = fcmp oge float %3528, %3529
  %3531 = fcmp ueq float %3528, 0.000000e+00
  %3532 = or i1 %3530, %3531
  %3533 = select i1 %3532, float %3528, float %3529
  %3534 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 8, i64 0), align 8
  %3535 = fcmp oge float %3533, %3534
  %3536 = fcmp ueq float %3533, 0.000000e+00
  %3537 = or i1 %3535, %3536
  %3538 = select i1 %3537, float %3533, float %3534
  %3539 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 6, i64 0), align 8
  %3540 = fcmp oge float %3538, %3539
  %3541 = fcmp ueq float %3538, 0.000000e+00
  %3542 = or i1 %3540, %3541
  %3543 = select i1 %3542, float %3538, float %3539
  %3544 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 7, i64 0), align 4
  %3545 = fcmp oge float %3543, %3544
  %3546 = fcmp ueq float %3543, 0.000000e+00
  %3547 = or i1 %3545, %3546
  %3548 = select i1 %3547, float %3543, float %3544
  %3549 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 8, i64 0), align 8
  %3550 = fcmp oge float %3548, %3549
  %3551 = fcmp ueq float %3548, 0.000000e+00
  %3552 = or i1 %3550, %3551
  %3553 = select i1 %3552, float %3548, float %3549
  %3554 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 6, i64 0), align 8
  %3555 = fcmp oge float %3553, %3554
  %3556 = fcmp ueq float %3553, 0.000000e+00
  %3557 = or i1 %3555, %3556
  %3558 = select i1 %3557, float %3553, float %3554
  %3559 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 7, i64 0), align 4
  %3560 = fcmp oge float %3558, %3559
  %3561 = fcmp ueq float %3558, 0.000000e+00
  %3562 = or i1 %3560, %3561
  %3563 = select i1 %3562, float %3558, float %3559
  %3564 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 8, i64 0), align 8
  %3565 = fcmp oge float %3563, %3564
  %3566 = fcmp ueq float %3563, 0.000000e+00
  %3567 = or i1 %3565, %3566
  %3568 = select i1 %3567, float %3563, float %3564
  store volatile float %3568, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 8, i64 2, i64 0), align 8
  %3569 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 9, i64 0), align 4
  %3570 = fcmp ole float %3569, 0xFFF0000000000000
  %3571 = select i1 %3570, float 0xFFF0000000000000, float %3569
  %3572 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 10, i64 0), align 8
  %3573 = fcmp oge float %3571, %3572
  %3574 = fcmp ueq float %3571, 0.000000e+00
  %3575 = or i1 %3573, %3574
  %3576 = select i1 %3575, float %3571, float %3572
  %3577 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 11, i64 0), align 4
  %3578 = fcmp oge float %3576, %3577
  %3579 = fcmp ueq float %3576, 0.000000e+00
  %3580 = or i1 %3578, %3579
  %3581 = select i1 %3580, float %3576, float %3577
  %3582 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 9, i64 0), align 4
  %3583 = fcmp oge float %3581, %3582
  %3584 = fcmp ueq float %3581, 0.000000e+00
  %3585 = or i1 %3583, %3584
  %3586 = select i1 %3585, float %3581, float %3582
  %3587 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 10, i64 0), align 8
  %3588 = fcmp oge float %3586, %3587
  %3589 = fcmp ueq float %3586, 0.000000e+00
  %3590 = or i1 %3588, %3589
  %3591 = select i1 %3590, float %3586, float %3587
  %3592 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 11, i64 0), align 4
  %3593 = fcmp oge float %3591, %3592
  %3594 = fcmp ueq float %3591, 0.000000e+00
  %3595 = or i1 %3593, %3594
  %3596 = select i1 %3595, float %3591, float %3592
  %3597 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 9, i64 0), align 4
  %3598 = fcmp oge float %3596, %3597
  %3599 = fcmp ueq float %3596, 0.000000e+00
  %3600 = or i1 %3598, %3599
  %3601 = select i1 %3600, float %3596, float %3597
  %3602 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 10, i64 0), align 8
  %3603 = fcmp oge float %3601, %3602
  %3604 = fcmp ueq float %3601, 0.000000e+00
  %3605 = or i1 %3603, %3604
  %3606 = select i1 %3605, float %3601, float %3602
  %3607 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 11, i64 0), align 4
  %3608 = fcmp oge float %3606, %3607
  %3609 = fcmp ueq float %3606, 0.000000e+00
  %3610 = or i1 %3608, %3609
  %3611 = select i1 %3610, float %3606, float %3607
  store volatile float %3611, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 8, i64 3, i64 0), align 4
  %3612 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 12, i64 0), align 8
  %3613 = fcmp ole float %3612, 0xFFF0000000000000
  %3614 = select i1 %3613, float 0xFFF0000000000000, float %3612
  %3615 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 13, i64 0), align 4
  %3616 = fcmp oge float %3614, %3615
  %3617 = fcmp ueq float %3614, 0.000000e+00
  %3618 = or i1 %3616, %3617
  %3619 = select i1 %3618, float %3614, float %3615
  %3620 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 14, i64 0), align 8
  %3621 = fcmp oge float %3619, %3620
  %3622 = fcmp ueq float %3619, 0.000000e+00
  %3623 = or i1 %3621, %3622
  %3624 = select i1 %3623, float %3619, float %3620
  %3625 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 12, i64 0), align 8
  %3626 = fcmp oge float %3624, %3625
  %3627 = fcmp ueq float %3624, 0.000000e+00
  %3628 = or i1 %3626, %3627
  %3629 = select i1 %3628, float %3624, float %3625
  %3630 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 13, i64 0), align 4
  %3631 = fcmp oge float %3629, %3630
  %3632 = fcmp ueq float %3629, 0.000000e+00
  %3633 = or i1 %3631, %3632
  %3634 = select i1 %3633, float %3629, float %3630
  %3635 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 14, i64 0), align 8
  %3636 = fcmp oge float %3634, %3635
  %3637 = fcmp ueq float %3634, 0.000000e+00
  %3638 = or i1 %3636, %3637
  %3639 = select i1 %3638, float %3634, float %3635
  %3640 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 12, i64 0), align 8
  %3641 = fcmp oge float %3639, %3640
  %3642 = fcmp ueq float %3639, 0.000000e+00
  %3643 = or i1 %3641, %3642
  %3644 = select i1 %3643, float %3639, float %3640
  %3645 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 13, i64 0), align 4
  %3646 = fcmp oge float %3644, %3645
  %3647 = fcmp ueq float %3644, 0.000000e+00
  %3648 = or i1 %3646, %3647
  %3649 = select i1 %3648, float %3644, float %3645
  %3650 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 14, i64 0), align 8
  %3651 = fcmp oge float %3649, %3650
  %3652 = fcmp ueq float %3649, 0.000000e+00
  %3653 = or i1 %3651, %3652
  %3654 = select i1 %3653, float %3649, float %3650
  store volatile float %3654, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 8, i64 4, i64 0), align 8
  %3655 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 15, i64 0), align 4
  %3656 = fcmp ole float %3655, 0xFFF0000000000000
  %3657 = select i1 %3656, float 0xFFF0000000000000, float %3655
  %3658 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 16, i64 0), align 8
  %3659 = fcmp oge float %3657, %3658
  %3660 = fcmp ueq float %3657, 0.000000e+00
  %3661 = or i1 %3659, %3660
  %3662 = select i1 %3661, float %3657, float %3658
  %3663 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 17, i64 0), align 4
  %3664 = fcmp oge float %3662, %3663
  %3665 = fcmp ueq float %3662, 0.000000e+00
  %3666 = or i1 %3664, %3665
  %3667 = select i1 %3666, float %3662, float %3663
  %3668 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 15, i64 0), align 4
  %3669 = fcmp oge float %3667, %3668
  %3670 = fcmp ueq float %3667, 0.000000e+00
  %3671 = or i1 %3669, %3670
  %3672 = select i1 %3671, float %3667, float %3668
  %3673 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 16, i64 0), align 8
  %3674 = fcmp oge float %3672, %3673
  %3675 = fcmp ueq float %3672, 0.000000e+00
  %3676 = or i1 %3674, %3675
  %3677 = select i1 %3676, float %3672, float %3673
  %3678 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 17, i64 0), align 4
  %3679 = fcmp oge float %3677, %3678
  %3680 = fcmp ueq float %3677, 0.000000e+00
  %3681 = or i1 %3679, %3680
  %3682 = select i1 %3681, float %3677, float %3678
  %3683 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 15, i64 0), align 4
  %3684 = fcmp oge float %3682, %3683
  %3685 = fcmp ueq float %3682, 0.000000e+00
  %3686 = or i1 %3684, %3685
  %3687 = select i1 %3686, float %3682, float %3683
  %3688 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 16, i64 0), align 8
  %3689 = fcmp oge float %3687, %3688
  %3690 = fcmp ueq float %3687, 0.000000e+00
  %3691 = or i1 %3689, %3690
  %3692 = select i1 %3691, float %3687, float %3688
  %3693 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 17, i64 0), align 4
  %3694 = fcmp oge float %3692, %3693
  %3695 = fcmp ueq float %3692, 0.000000e+00
  %3696 = or i1 %3694, %3695
  %3697 = select i1 %3696, float %3692, float %3693
  store volatile float %3697, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 8, i64 5, i64 0), align 4
  %3698 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 18, i64 0), align 8
  %3699 = fcmp ole float %3698, 0xFFF0000000000000
  %3700 = select i1 %3699, float 0xFFF0000000000000, float %3698
  %3701 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 19, i64 0), align 4
  %3702 = fcmp oge float %3700, %3701
  %3703 = fcmp ueq float %3700, 0.000000e+00
  %3704 = or i1 %3702, %3703
  %3705 = select i1 %3704, float %3700, float %3701
  %3706 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 20, i64 0), align 8
  %3707 = fcmp oge float %3705, %3706
  %3708 = fcmp ueq float %3705, 0.000000e+00
  %3709 = or i1 %3707, %3708
  %3710 = select i1 %3709, float %3705, float %3706
  %3711 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 18, i64 0), align 8
  %3712 = fcmp oge float %3710, %3711
  %3713 = fcmp ueq float %3710, 0.000000e+00
  %3714 = or i1 %3712, %3713
  %3715 = select i1 %3714, float %3710, float %3711
  %3716 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 19, i64 0), align 4
  %3717 = fcmp oge float %3715, %3716
  %3718 = fcmp ueq float %3715, 0.000000e+00
  %3719 = or i1 %3717, %3718
  %3720 = select i1 %3719, float %3715, float %3716
  %3721 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 20, i64 0), align 8
  %3722 = fcmp oge float %3720, %3721
  %3723 = fcmp ueq float %3720, 0.000000e+00
  %3724 = or i1 %3722, %3723
  %3725 = select i1 %3724, float %3720, float %3721
  %3726 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 18, i64 0), align 8
  %3727 = fcmp oge float %3725, %3726
  %3728 = fcmp ueq float %3725, 0.000000e+00
  %3729 = or i1 %3727, %3728
  %3730 = select i1 %3729, float %3725, float %3726
  %3731 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 19, i64 0), align 4
  %3732 = fcmp oge float %3730, %3731
  %3733 = fcmp ueq float %3730, 0.000000e+00
  %3734 = or i1 %3732, %3733
  %3735 = select i1 %3734, float %3730, float %3731
  %3736 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 20, i64 0), align 8
  %3737 = fcmp oge float %3735, %3736
  %3738 = fcmp ueq float %3735, 0.000000e+00
  %3739 = or i1 %3737, %3738
  %3740 = select i1 %3739, float %3735, float %3736
  store volatile float %3740, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 8, i64 6, i64 0), align 8
  %3741 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 21, i64 0), align 4
  %3742 = fcmp ole float %3741, 0xFFF0000000000000
  %3743 = select i1 %3742, float 0xFFF0000000000000, float %3741
  %3744 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 22, i64 0), align 8
  %3745 = fcmp oge float %3743, %3744
  %3746 = fcmp ueq float %3743, 0.000000e+00
  %3747 = or i1 %3745, %3746
  %3748 = select i1 %3747, float %3743, float %3744
  %3749 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 23, i64 0), align 4
  %3750 = fcmp oge float %3748, %3749
  %3751 = fcmp ueq float %3748, 0.000000e+00
  %3752 = or i1 %3750, %3751
  %3753 = select i1 %3752, float %3748, float %3749
  %3754 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 21, i64 0), align 4
  %3755 = fcmp oge float %3753, %3754
  %3756 = fcmp ueq float %3753, 0.000000e+00
  %3757 = or i1 %3755, %3756
  %3758 = select i1 %3757, float %3753, float %3754
  %3759 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 22, i64 0), align 8
  %3760 = fcmp oge float %3758, %3759
  %3761 = fcmp ueq float %3758, 0.000000e+00
  %3762 = or i1 %3760, %3761
  %3763 = select i1 %3762, float %3758, float %3759
  %3764 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 23, i64 0), align 4
  %3765 = fcmp oge float %3763, %3764
  %3766 = fcmp ueq float %3763, 0.000000e+00
  %3767 = or i1 %3765, %3766
  %3768 = select i1 %3767, float %3763, float %3764
  %3769 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 21, i64 0), align 4
  %3770 = fcmp oge float %3768, %3769
  %3771 = fcmp ueq float %3768, 0.000000e+00
  %3772 = or i1 %3770, %3771
  %3773 = select i1 %3772, float %3768, float %3769
  %3774 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 22, i64 0), align 8
  %3775 = fcmp oge float %3773, %3774
  %3776 = fcmp ueq float %3773, 0.000000e+00
  %3777 = or i1 %3775, %3776
  %3778 = select i1 %3777, float %3773, float %3774
  %3779 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 23, i64 0), align 4
  %3780 = fcmp oge float %3778, %3779
  %3781 = fcmp ueq float %3778, 0.000000e+00
  %3782 = or i1 %3780, %3781
  %3783 = select i1 %3782, float %3778, float %3779
  store volatile float %3783, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 8, i64 7, i64 0), align 4
  %3784 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 24, i64 0), align 8
  %3785 = fcmp ole float %3784, 0xFFF0000000000000
  %3786 = select i1 %3785, float 0xFFF0000000000000, float %3784
  %3787 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 25, i64 0), align 4
  %3788 = fcmp oge float %3786, %3787
  %3789 = fcmp ueq float %3786, 0.000000e+00
  %3790 = or i1 %3788, %3789
  %3791 = select i1 %3790, float %3786, float %3787
  %3792 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 26, i64 0), align 8
  %3793 = fcmp oge float %3791, %3792
  %3794 = fcmp ueq float %3791, 0.000000e+00
  %3795 = or i1 %3793, %3794
  %3796 = select i1 %3795, float %3791, float %3792
  %3797 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 24, i64 0), align 8
  %3798 = fcmp oge float %3796, %3797
  %3799 = fcmp ueq float %3796, 0.000000e+00
  %3800 = or i1 %3798, %3799
  %3801 = select i1 %3800, float %3796, float %3797
  %3802 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 25, i64 0), align 4
  %3803 = fcmp oge float %3801, %3802
  %3804 = fcmp ueq float %3801, 0.000000e+00
  %3805 = or i1 %3803, %3804
  %3806 = select i1 %3805, float %3801, float %3802
  %3807 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 26, i64 0), align 8
  %3808 = fcmp oge float %3806, %3807
  %3809 = fcmp ueq float %3806, 0.000000e+00
  %3810 = or i1 %3808, %3809
  %3811 = select i1 %3810, float %3806, float %3807
  %3812 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 24, i64 0), align 8
  %3813 = fcmp oge float %3811, %3812
  %3814 = fcmp ueq float %3811, 0.000000e+00
  %3815 = or i1 %3813, %3814
  %3816 = select i1 %3815, float %3811, float %3812
  %3817 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 25, i64 0), align 4
  %3818 = fcmp oge float %3816, %3817
  %3819 = fcmp ueq float %3816, 0.000000e+00
  %3820 = or i1 %3818, %3819
  %3821 = select i1 %3820, float %3816, float %3817
  %3822 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 26, i64 0), align 8
  %3823 = fcmp oge float %3821, %3822
  %3824 = fcmp ueq float %3821, 0.000000e+00
  %3825 = or i1 %3823, %3824
  %3826 = select i1 %3825, float %3821, float %3822
  store volatile float %3826, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 8, i64 8, i64 0), align 8
  %3827 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 27, i64 0), align 4
  %3828 = fcmp ole float %3827, 0xFFF0000000000000
  %3829 = select i1 %3828, float 0xFFF0000000000000, float %3827
  %3830 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 28, i64 0), align 8
  %3831 = fcmp oge float %3829, %3830
  %3832 = fcmp ueq float %3829, 0.000000e+00
  %3833 = or i1 %3831, %3832
  %3834 = select i1 %3833, float %3829, float %3830
  %3835 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 24, i64 29, i64 0), align 4
  %3836 = fcmp oge float %3834, %3835
  %3837 = fcmp ueq float %3834, 0.000000e+00
  %3838 = or i1 %3836, %3837
  %3839 = select i1 %3838, float %3834, float %3835
  %3840 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 27, i64 0), align 4
  %3841 = fcmp oge float %3839, %3840
  %3842 = fcmp ueq float %3839, 0.000000e+00
  %3843 = or i1 %3841, %3842
  %3844 = select i1 %3843, float %3839, float %3840
  %3845 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 28, i64 0), align 8
  %3846 = fcmp oge float %3844, %3845
  %3847 = fcmp ueq float %3844, 0.000000e+00
  %3848 = or i1 %3846, %3847
  %3849 = select i1 %3848, float %3844, float %3845
  %3850 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 25, i64 29, i64 0), align 4
  %3851 = fcmp oge float %3849, %3850
  %3852 = fcmp ueq float %3849, 0.000000e+00
  %3853 = or i1 %3851, %3852
  %3854 = select i1 %3853, float %3849, float %3850
  %3855 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 27, i64 0), align 4
  %3856 = fcmp oge float %3854, %3855
  %3857 = fcmp ueq float %3854, 0.000000e+00
  %3858 = or i1 %3856, %3857
  %3859 = select i1 %3858, float %3854, float %3855
  %3860 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 28, i64 0), align 8
  %3861 = fcmp oge float %3859, %3860
  %3862 = fcmp ueq float %3859, 0.000000e+00
  %3863 = or i1 %3861, %3862
  %3864 = select i1 %3863, float %3859, float %3860
  %3865 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 26, i64 29, i64 0), align 4
  %3866 = fcmp oge float %3864, %3865
  %3867 = fcmp ueq float %3864, 0.000000e+00
  %3868 = or i1 %3866, %3867
  %3869 = select i1 %3868, float %3864, float %3865
  store volatile float %3869, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 8, i64 9, i64 0), align 4
  %3870 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 0, i64 0), align 8
  %3871 = fcmp ole float %3870, 0xFFF0000000000000
  %3872 = select i1 %3871, float 0xFFF0000000000000, float %3870
  %3873 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 1, i64 0), align 4
  %3874 = fcmp oge float %3872, %3873
  %3875 = fcmp ueq float %3872, 0.000000e+00
  %3876 = or i1 %3874, %3875
  %3877 = select i1 %3876, float %3872, float %3873
  %3878 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 2, i64 0), align 8
  %3879 = fcmp oge float %3877, %3878
  %3880 = fcmp ueq float %3877, 0.000000e+00
  %3881 = or i1 %3879, %3880
  %3882 = select i1 %3881, float %3877, float %3878
  %3883 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 0, i64 0), align 8
  %3884 = fcmp oge float %3882, %3883
  %3885 = fcmp ueq float %3882, 0.000000e+00
  %3886 = or i1 %3884, %3885
  %3887 = select i1 %3886, float %3882, float %3883
  %3888 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 1, i64 0), align 4
  %3889 = fcmp oge float %3887, %3888
  %3890 = fcmp ueq float %3887, 0.000000e+00
  %3891 = or i1 %3889, %3890
  %3892 = select i1 %3891, float %3887, float %3888
  %3893 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 2, i64 0), align 8
  %3894 = fcmp oge float %3892, %3893
  %3895 = fcmp ueq float %3892, 0.000000e+00
  %3896 = or i1 %3894, %3895
  %3897 = select i1 %3896, float %3892, float %3893
  %3898 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 0, i64 0), align 8
  %3899 = fcmp oge float %3897, %3898
  %3900 = fcmp ueq float %3897, 0.000000e+00
  %3901 = or i1 %3899, %3900
  %3902 = select i1 %3901, float %3897, float %3898
  %3903 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 1, i64 0), align 4
  %3904 = fcmp oge float %3902, %3903
  %3905 = fcmp ueq float %3902, 0.000000e+00
  %3906 = or i1 %3904, %3905
  %3907 = select i1 %3906, float %3902, float %3903
  %3908 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 2, i64 0), align 8
  %3909 = fcmp oge float %3907, %3908
  %3910 = fcmp ueq float %3907, 0.000000e+00
  %3911 = or i1 %3909, %3910
  %3912 = select i1 %3911, float %3907, float %3908
  store volatile float %3912, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 9, i64 0, i64 0), align 8
  %3913 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 3, i64 0), align 4
  %3914 = fcmp ole float %3913, 0xFFF0000000000000
  %3915 = select i1 %3914, float 0xFFF0000000000000, float %3913
  %3916 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 4, i64 0), align 8
  %3917 = fcmp oge float %3915, %3916
  %3918 = fcmp ueq float %3915, 0.000000e+00
  %3919 = or i1 %3917, %3918
  %3920 = select i1 %3919, float %3915, float %3916
  %3921 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 5, i64 0), align 4
  %3922 = fcmp oge float %3920, %3921
  %3923 = fcmp ueq float %3920, 0.000000e+00
  %3924 = or i1 %3922, %3923
  %3925 = select i1 %3924, float %3920, float %3921
  %3926 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 3, i64 0), align 4
  %3927 = fcmp oge float %3925, %3926
  %3928 = fcmp ueq float %3925, 0.000000e+00
  %3929 = or i1 %3927, %3928
  %3930 = select i1 %3929, float %3925, float %3926
  %3931 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 4, i64 0), align 8
  %3932 = fcmp oge float %3930, %3931
  %3933 = fcmp ueq float %3930, 0.000000e+00
  %3934 = or i1 %3932, %3933
  %3935 = select i1 %3934, float %3930, float %3931
  %3936 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 5, i64 0), align 4
  %3937 = fcmp oge float %3935, %3936
  %3938 = fcmp ueq float %3935, 0.000000e+00
  %3939 = or i1 %3937, %3938
  %3940 = select i1 %3939, float %3935, float %3936
  %3941 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 3, i64 0), align 4
  %3942 = fcmp oge float %3940, %3941
  %3943 = fcmp ueq float %3940, 0.000000e+00
  %3944 = or i1 %3942, %3943
  %3945 = select i1 %3944, float %3940, float %3941
  %3946 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 4, i64 0), align 8
  %3947 = fcmp oge float %3945, %3946
  %3948 = fcmp ueq float %3945, 0.000000e+00
  %3949 = or i1 %3947, %3948
  %3950 = select i1 %3949, float %3945, float %3946
  %3951 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 5, i64 0), align 4
  %3952 = fcmp oge float %3950, %3951
  %3953 = fcmp ueq float %3950, 0.000000e+00
  %3954 = or i1 %3952, %3953
  %3955 = select i1 %3954, float %3950, float %3951
  store volatile float %3955, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 9, i64 1, i64 0), align 4
  %3956 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 6, i64 0), align 8
  %3957 = fcmp ole float %3956, 0xFFF0000000000000
  %3958 = select i1 %3957, float 0xFFF0000000000000, float %3956
  %3959 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 7, i64 0), align 4
  %3960 = fcmp oge float %3958, %3959
  %3961 = fcmp ueq float %3958, 0.000000e+00
  %3962 = or i1 %3960, %3961
  %3963 = select i1 %3962, float %3958, float %3959
  %3964 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 8, i64 0), align 8
  %3965 = fcmp oge float %3963, %3964
  %3966 = fcmp ueq float %3963, 0.000000e+00
  %3967 = or i1 %3965, %3966
  %3968 = select i1 %3967, float %3963, float %3964
  %3969 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 6, i64 0), align 8
  %3970 = fcmp oge float %3968, %3969
  %3971 = fcmp ueq float %3968, 0.000000e+00
  %3972 = or i1 %3970, %3971
  %3973 = select i1 %3972, float %3968, float %3969
  %3974 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 7, i64 0), align 4
  %3975 = fcmp oge float %3973, %3974
  %3976 = fcmp ueq float %3973, 0.000000e+00
  %3977 = or i1 %3975, %3976
  %3978 = select i1 %3977, float %3973, float %3974
  %3979 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 8, i64 0), align 8
  %3980 = fcmp oge float %3978, %3979
  %3981 = fcmp ueq float %3978, 0.000000e+00
  %3982 = or i1 %3980, %3981
  %3983 = select i1 %3982, float %3978, float %3979
  %3984 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 6, i64 0), align 8
  %3985 = fcmp oge float %3983, %3984
  %3986 = fcmp ueq float %3983, 0.000000e+00
  %3987 = or i1 %3985, %3986
  %3988 = select i1 %3987, float %3983, float %3984
  %3989 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 7, i64 0), align 4
  %3990 = fcmp oge float %3988, %3989
  %3991 = fcmp ueq float %3988, 0.000000e+00
  %3992 = or i1 %3990, %3991
  %3993 = select i1 %3992, float %3988, float %3989
  %3994 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 8, i64 0), align 8
  %3995 = fcmp oge float %3993, %3994
  %3996 = fcmp ueq float %3993, 0.000000e+00
  %3997 = or i1 %3995, %3996
  %3998 = select i1 %3997, float %3993, float %3994
  store volatile float %3998, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 9, i64 2, i64 0), align 8
  %3999 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 9, i64 0), align 4
  %4000 = fcmp ole float %3999, 0xFFF0000000000000
  %4001 = select i1 %4000, float 0xFFF0000000000000, float %3999
  %4002 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 10, i64 0), align 8
  %4003 = fcmp oge float %4001, %4002
  %4004 = fcmp ueq float %4001, 0.000000e+00
  %4005 = or i1 %4003, %4004
  %4006 = select i1 %4005, float %4001, float %4002
  %4007 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 11, i64 0), align 4
  %4008 = fcmp oge float %4006, %4007
  %4009 = fcmp ueq float %4006, 0.000000e+00
  %4010 = or i1 %4008, %4009
  %4011 = select i1 %4010, float %4006, float %4007
  %4012 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 9, i64 0), align 4
  %4013 = fcmp oge float %4011, %4012
  %4014 = fcmp ueq float %4011, 0.000000e+00
  %4015 = or i1 %4013, %4014
  %4016 = select i1 %4015, float %4011, float %4012
  %4017 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 10, i64 0), align 8
  %4018 = fcmp oge float %4016, %4017
  %4019 = fcmp ueq float %4016, 0.000000e+00
  %4020 = or i1 %4018, %4019
  %4021 = select i1 %4020, float %4016, float %4017
  %4022 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 11, i64 0), align 4
  %4023 = fcmp oge float %4021, %4022
  %4024 = fcmp ueq float %4021, 0.000000e+00
  %4025 = or i1 %4023, %4024
  %4026 = select i1 %4025, float %4021, float %4022
  %4027 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 9, i64 0), align 4
  %4028 = fcmp oge float %4026, %4027
  %4029 = fcmp ueq float %4026, 0.000000e+00
  %4030 = or i1 %4028, %4029
  %4031 = select i1 %4030, float %4026, float %4027
  %4032 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 10, i64 0), align 8
  %4033 = fcmp oge float %4031, %4032
  %4034 = fcmp ueq float %4031, 0.000000e+00
  %4035 = or i1 %4033, %4034
  %4036 = select i1 %4035, float %4031, float %4032
  %4037 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 11, i64 0), align 4
  %4038 = fcmp oge float %4036, %4037
  %4039 = fcmp ueq float %4036, 0.000000e+00
  %4040 = or i1 %4038, %4039
  %4041 = select i1 %4040, float %4036, float %4037
  store volatile float %4041, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 9, i64 3, i64 0), align 4
  %4042 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 12, i64 0), align 8
  %4043 = fcmp ole float %4042, 0xFFF0000000000000
  %4044 = select i1 %4043, float 0xFFF0000000000000, float %4042
  %4045 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 13, i64 0), align 4
  %4046 = fcmp oge float %4044, %4045
  %4047 = fcmp ueq float %4044, 0.000000e+00
  %4048 = or i1 %4046, %4047
  %4049 = select i1 %4048, float %4044, float %4045
  %4050 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 14, i64 0), align 8
  %4051 = fcmp oge float %4049, %4050
  %4052 = fcmp ueq float %4049, 0.000000e+00
  %4053 = or i1 %4051, %4052
  %4054 = select i1 %4053, float %4049, float %4050
  %4055 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 12, i64 0), align 8
  %4056 = fcmp oge float %4054, %4055
  %4057 = fcmp ueq float %4054, 0.000000e+00
  %4058 = or i1 %4056, %4057
  %4059 = select i1 %4058, float %4054, float %4055
  %4060 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 13, i64 0), align 4
  %4061 = fcmp oge float %4059, %4060
  %4062 = fcmp ueq float %4059, 0.000000e+00
  %4063 = or i1 %4061, %4062
  %4064 = select i1 %4063, float %4059, float %4060
  %4065 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 14, i64 0), align 8
  %4066 = fcmp oge float %4064, %4065
  %4067 = fcmp ueq float %4064, 0.000000e+00
  %4068 = or i1 %4066, %4067
  %4069 = select i1 %4068, float %4064, float %4065
  %4070 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 12, i64 0), align 8
  %4071 = fcmp oge float %4069, %4070
  %4072 = fcmp ueq float %4069, 0.000000e+00
  %4073 = or i1 %4071, %4072
  %4074 = select i1 %4073, float %4069, float %4070
  %4075 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 13, i64 0), align 4
  %4076 = fcmp oge float %4074, %4075
  %4077 = fcmp ueq float %4074, 0.000000e+00
  %4078 = or i1 %4076, %4077
  %4079 = select i1 %4078, float %4074, float %4075
  %4080 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 14, i64 0), align 8
  %4081 = fcmp oge float %4079, %4080
  %4082 = fcmp ueq float %4079, 0.000000e+00
  %4083 = or i1 %4081, %4082
  %4084 = select i1 %4083, float %4079, float %4080
  store volatile float %4084, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 9, i64 4, i64 0), align 8
  %4085 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 15, i64 0), align 4
  %4086 = fcmp ole float %4085, 0xFFF0000000000000
  %4087 = select i1 %4086, float 0xFFF0000000000000, float %4085
  %4088 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 16, i64 0), align 8
  %4089 = fcmp oge float %4087, %4088
  %4090 = fcmp ueq float %4087, 0.000000e+00
  %4091 = or i1 %4089, %4090
  %4092 = select i1 %4091, float %4087, float %4088
  %4093 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 17, i64 0), align 4
  %4094 = fcmp oge float %4092, %4093
  %4095 = fcmp ueq float %4092, 0.000000e+00
  %4096 = or i1 %4094, %4095
  %4097 = select i1 %4096, float %4092, float %4093
  %4098 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 15, i64 0), align 4
  %4099 = fcmp oge float %4097, %4098
  %4100 = fcmp ueq float %4097, 0.000000e+00
  %4101 = or i1 %4099, %4100
  %4102 = select i1 %4101, float %4097, float %4098
  %4103 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 16, i64 0), align 8
  %4104 = fcmp oge float %4102, %4103
  %4105 = fcmp ueq float %4102, 0.000000e+00
  %4106 = or i1 %4104, %4105
  %4107 = select i1 %4106, float %4102, float %4103
  %4108 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 17, i64 0), align 4
  %4109 = fcmp oge float %4107, %4108
  %4110 = fcmp ueq float %4107, 0.000000e+00
  %4111 = or i1 %4109, %4110
  %4112 = select i1 %4111, float %4107, float %4108
  %4113 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 15, i64 0), align 4
  %4114 = fcmp oge float %4112, %4113
  %4115 = fcmp ueq float %4112, 0.000000e+00
  %4116 = or i1 %4114, %4115
  %4117 = select i1 %4116, float %4112, float %4113
  %4118 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 16, i64 0), align 8
  %4119 = fcmp oge float %4117, %4118
  %4120 = fcmp ueq float %4117, 0.000000e+00
  %4121 = or i1 %4119, %4120
  %4122 = select i1 %4121, float %4117, float %4118
  %4123 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 17, i64 0), align 4
  %4124 = fcmp oge float %4122, %4123
  %4125 = fcmp ueq float %4122, 0.000000e+00
  %4126 = or i1 %4124, %4125
  %4127 = select i1 %4126, float %4122, float %4123
  store volatile float %4127, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 9, i64 5, i64 0), align 4
  %4128 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 18, i64 0), align 8
  %4129 = fcmp ole float %4128, 0xFFF0000000000000
  %4130 = select i1 %4129, float 0xFFF0000000000000, float %4128
  %4131 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 19, i64 0), align 4
  %4132 = fcmp oge float %4130, %4131
  %4133 = fcmp ueq float %4130, 0.000000e+00
  %4134 = or i1 %4132, %4133
  %4135 = select i1 %4134, float %4130, float %4131
  %4136 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 20, i64 0), align 8
  %4137 = fcmp oge float %4135, %4136
  %4138 = fcmp ueq float %4135, 0.000000e+00
  %4139 = or i1 %4137, %4138
  %4140 = select i1 %4139, float %4135, float %4136
  %4141 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 18, i64 0), align 8
  %4142 = fcmp oge float %4140, %4141
  %4143 = fcmp ueq float %4140, 0.000000e+00
  %4144 = or i1 %4142, %4143
  %4145 = select i1 %4144, float %4140, float %4141
  %4146 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 19, i64 0), align 4
  %4147 = fcmp oge float %4145, %4146
  %4148 = fcmp ueq float %4145, 0.000000e+00
  %4149 = or i1 %4147, %4148
  %4150 = select i1 %4149, float %4145, float %4146
  %4151 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 20, i64 0), align 8
  %4152 = fcmp oge float %4150, %4151
  %4153 = fcmp ueq float %4150, 0.000000e+00
  %4154 = or i1 %4152, %4153
  %4155 = select i1 %4154, float %4150, float %4151
  %4156 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 18, i64 0), align 8
  %4157 = fcmp oge float %4155, %4156
  %4158 = fcmp ueq float %4155, 0.000000e+00
  %4159 = or i1 %4157, %4158
  %4160 = select i1 %4159, float %4155, float %4156
  %4161 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 19, i64 0), align 4
  %4162 = fcmp oge float %4160, %4161
  %4163 = fcmp ueq float %4160, 0.000000e+00
  %4164 = or i1 %4162, %4163
  %4165 = select i1 %4164, float %4160, float %4161
  %4166 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 20, i64 0), align 8
  %4167 = fcmp oge float %4165, %4166
  %4168 = fcmp ueq float %4165, 0.000000e+00
  %4169 = or i1 %4167, %4168
  %4170 = select i1 %4169, float %4165, float %4166
  store volatile float %4170, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 9, i64 6, i64 0), align 8
  %4171 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 21, i64 0), align 4
  %4172 = fcmp ole float %4171, 0xFFF0000000000000
  %4173 = select i1 %4172, float 0xFFF0000000000000, float %4171
  %4174 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 22, i64 0), align 8
  %4175 = fcmp oge float %4173, %4174
  %4176 = fcmp ueq float %4173, 0.000000e+00
  %4177 = or i1 %4175, %4176
  %4178 = select i1 %4177, float %4173, float %4174
  %4179 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 23, i64 0), align 4
  %4180 = fcmp oge float %4178, %4179
  %4181 = fcmp ueq float %4178, 0.000000e+00
  %4182 = or i1 %4180, %4181
  %4183 = select i1 %4182, float %4178, float %4179
  %4184 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 21, i64 0), align 4
  %4185 = fcmp oge float %4183, %4184
  %4186 = fcmp ueq float %4183, 0.000000e+00
  %4187 = or i1 %4185, %4186
  %4188 = select i1 %4187, float %4183, float %4184
  %4189 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 22, i64 0), align 8
  %4190 = fcmp oge float %4188, %4189
  %4191 = fcmp ueq float %4188, 0.000000e+00
  %4192 = or i1 %4190, %4191
  %4193 = select i1 %4192, float %4188, float %4189
  %4194 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 23, i64 0), align 4
  %4195 = fcmp oge float %4193, %4194
  %4196 = fcmp ueq float %4193, 0.000000e+00
  %4197 = or i1 %4195, %4196
  %4198 = select i1 %4197, float %4193, float %4194
  %4199 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 21, i64 0), align 4
  %4200 = fcmp oge float %4198, %4199
  %4201 = fcmp ueq float %4198, 0.000000e+00
  %4202 = or i1 %4200, %4201
  %4203 = select i1 %4202, float %4198, float %4199
  %4204 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 22, i64 0), align 8
  %4205 = fcmp oge float %4203, %4204
  %4206 = fcmp ueq float %4203, 0.000000e+00
  %4207 = or i1 %4205, %4206
  %4208 = select i1 %4207, float %4203, float %4204
  %4209 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 23, i64 0), align 4
  %4210 = fcmp oge float %4208, %4209
  %4211 = fcmp ueq float %4208, 0.000000e+00
  %4212 = or i1 %4210, %4211
  %4213 = select i1 %4212, float %4208, float %4209
  store volatile float %4213, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 9, i64 7, i64 0), align 4
  %4214 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 24, i64 0), align 8
  %4215 = fcmp ole float %4214, 0xFFF0000000000000
  %4216 = select i1 %4215, float 0xFFF0000000000000, float %4214
  %4217 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 25, i64 0), align 4
  %4218 = fcmp oge float %4216, %4217
  %4219 = fcmp ueq float %4216, 0.000000e+00
  %4220 = or i1 %4218, %4219
  %4221 = select i1 %4220, float %4216, float %4217
  %4222 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 26, i64 0), align 8
  %4223 = fcmp oge float %4221, %4222
  %4224 = fcmp ueq float %4221, 0.000000e+00
  %4225 = or i1 %4223, %4224
  %4226 = select i1 %4225, float %4221, float %4222
  %4227 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 24, i64 0), align 8
  %4228 = fcmp oge float %4226, %4227
  %4229 = fcmp ueq float %4226, 0.000000e+00
  %4230 = or i1 %4228, %4229
  %4231 = select i1 %4230, float %4226, float %4227
  %4232 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 25, i64 0), align 4
  %4233 = fcmp oge float %4231, %4232
  %4234 = fcmp ueq float %4231, 0.000000e+00
  %4235 = or i1 %4233, %4234
  %4236 = select i1 %4235, float %4231, float %4232
  %4237 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 26, i64 0), align 8
  %4238 = fcmp oge float %4236, %4237
  %4239 = fcmp ueq float %4236, 0.000000e+00
  %4240 = or i1 %4238, %4239
  %4241 = select i1 %4240, float %4236, float %4237
  %4242 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 24, i64 0), align 8
  %4243 = fcmp oge float %4241, %4242
  %4244 = fcmp ueq float %4241, 0.000000e+00
  %4245 = or i1 %4243, %4244
  %4246 = select i1 %4245, float %4241, float %4242
  %4247 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 25, i64 0), align 4
  %4248 = fcmp oge float %4246, %4247
  %4249 = fcmp ueq float %4246, 0.000000e+00
  %4250 = or i1 %4248, %4249
  %4251 = select i1 %4250, float %4246, float %4247
  %4252 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 26, i64 0), align 8
  %4253 = fcmp oge float %4251, %4252
  %4254 = fcmp ueq float %4251, 0.000000e+00
  %4255 = or i1 %4253, %4254
  %4256 = select i1 %4255, float %4251, float %4252
  store volatile float %4256, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 9, i64 8, i64 0), align 8
  %4257 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 27, i64 0), align 4
  %4258 = fcmp ole float %4257, 0xFFF0000000000000
  %4259 = select i1 %4258, float 0xFFF0000000000000, float %4257
  %4260 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 28, i64 0), align 8
  %4261 = fcmp oge float %4259, %4260
  %4262 = fcmp ueq float %4259, 0.000000e+00
  %4263 = or i1 %4261, %4262
  %4264 = select i1 %4263, float %4259, float %4260
  %4265 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 27, i64 29, i64 0), align 4
  %4266 = fcmp oge float %4264, %4265
  %4267 = fcmp ueq float %4264, 0.000000e+00
  %4268 = or i1 %4266, %4267
  %4269 = select i1 %4268, float %4264, float %4265
  %4270 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 27, i64 0), align 4
  %4271 = fcmp oge float %4269, %4270
  %4272 = fcmp ueq float %4269, 0.000000e+00
  %4273 = or i1 %4271, %4272
  %4274 = select i1 %4273, float %4269, float %4270
  %4275 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 28, i64 0), align 8
  %4276 = fcmp oge float %4274, %4275
  %4277 = fcmp ueq float %4274, 0.000000e+00
  %4278 = or i1 %4276, %4277
  %4279 = select i1 %4278, float %4274, float %4275
  %4280 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 28, i64 29, i64 0), align 4
  %4281 = fcmp oge float %4279, %4280
  %4282 = fcmp ueq float %4279, 0.000000e+00
  %4283 = or i1 %4281, %4282
  %4284 = select i1 %4283, float %4279, float %4280
  %4285 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 27, i64 0), align 4
  %4286 = fcmp oge float %4284, %4285
  %4287 = fcmp ueq float %4284, 0.000000e+00
  %4288 = or i1 %4286, %4287
  %4289 = select i1 %4288, float %4284, float %4285
  %4290 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 28, i64 0), align 8
  %4291 = fcmp oge float %4289, %4290
  %4292 = fcmp ueq float %4289, 0.000000e+00
  %4293 = or i1 %4291, %4292
  %4294 = select i1 %4293, float %4289, float %4290
  %4295 = load volatile float* getelementptr inbounds ([1 x [32 x [32 x [1 x float]]]]* @param0, i64 0, i64 0, i64 29, i64 29, i64 0), align 4
  %4296 = fcmp oge float %4294, %4295
  %4297 = fcmp ueq float %4294, 0.000000e+00
  %4298 = or i1 %4296, %4297
  %4299 = select i1 %4298, float %4294, float %4295
  store volatile float %4299, float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 9, i64 9, i64 0), align 4
  %leflow_retval = load volatile float* getelementptr inbounds ([1 x [10 x [10 x [1 x float]]]]* @temp0, i64 0, i64 0, i64 0, i64 0, i64 0), align 8
  ret float %leflow_retval
}

attributes #0 = { nounwind "no-frame-pointer-elim"="false" }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0}

!0 = metadata !{metadata !"clang version 3.5.0 (tags/RELEASE_350/final)"}
